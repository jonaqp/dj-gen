# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class AdxPreAutoconfig(models.Model):
    application_id = models.FloatField(blank=True, null=True)
    profile_option_name = models.CharField(max_length=100, blank=True, null=True)
    level_id = models.FloatField(blank=True, null=True)
    level_value = models.FloatField(blank=True, null=True)
    profile_value = models.CharField(max_length=300, blank=True, null=True)
    level_value_app_id = models.FloatField(blank=True, null=True)
    context_name = models.CharField(max_length=100, blank=True, null=True)
    update_only = models.CharField(max_length=1, blank=True, null=True)
    insert_only = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'adx_pre_autoconfig'


class AffectedUnvoidChecks9323907(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'affected_unvoid_checks_9323907'


class AidEventMissingInXeTab(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    accounting_date = models.DateField()
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aid_event_missing_in_xe_tab'


class AidMsIncorr11686219(models.Model):
    table_name = models.CharField(max_length=29, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    accrue_on_receipt_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aid_ms_incorr_11686219'


class AmsActMetricsMonthlyMv(models.Model):
    time_id = models.FloatField()
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    metric_value = models.FloatField(blank=True, null=True)
    metric_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ams_act_metrics_monthly_mv'


class AmsActMetricsQtrlyMv(models.Model):
    time_id = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField()
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    metric_value = models.FloatField(blank=True, null=True)
    metric_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ams_act_metrics_qtrly_mv'


class AmsActMetricsWeeklyMv(models.Model):
    time_id = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField()
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    metric_value = models.FloatField(blank=True, null=True)
    metric_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ams_act_metrics_weekly_mv'


class AmsActMetricsYearlyMv(models.Model):
    time_id = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField()
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    metric_value = models.FloatField(blank=True, null=True)
    metric_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ams_act_metrics_yearly_mv'


class AmsInfmetLeadGt(models.Model):
    primary_party_id = models.FloatField(blank=True, null=True)
    contact_rel_party_id = models.FloatField(blank=True, null=True)
    last_activation_date = models.DateField(blank=True, null=True)
    activity_metric_id = models.FloatField(blank=True, null=True)
    source_category = models.CharField(max_length=3, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ams_infmet_lead_gt'


class AmsInfmetOrderGt(models.Model):
    primary_party_id = models.FloatField(blank=True, null=True)
    contact_rel_party_id = models.FloatField(blank=True, null=True)
    last_activation_date = models.DateField(blank=True, null=True)
    activity_metric_id = models.FloatField(blank=True, null=True)
    source_category = models.CharField(max_length=3, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ams_infmet_order_gt'


class AmsInfmetRespGt(models.Model):
    primary_party_id = models.FloatField(blank=True, null=True)
    contact_rel_party_id = models.FloatField(blank=True, null=True)
    last_activation_date = models.DateField(blank=True, null=True)
    activity_metric_id = models.FloatField(blank=True, null=True)
    source_category = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ams_infmet_resp_gt'


class AmvTempIds(models.Model):
    id = models.FloatField(blank=True, null=True)
    number_value = models.FloatField(blank=True, null=True)
    score = models.FloatField(blank=True, null=True)
    obj_code = models.CharField(max_length=30, blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'amv_temp_ids'


class AmvTempNumbers(models.Model):
    number_value = models.FloatField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'amv_temp_numbers'


class AmwOpinionLogMv(models.Model):
    opinion_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    obj_opin_types_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_types_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_detail_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_components = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_value_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    fnd_object_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_log_id = models.FloatField()
    opinion_set_id = models.FloatField()
    opinion_id = models.FloatField()
    object_opinion_type_id = models.FloatField()
    opinion_type_code = models.CharField(max_length=30)
    pk1_value = models.FloatField(blank=True, null=True)
    pk2_value = models.FloatField(blank=True, null=True)
    pk3_value = models.FloatField(blank=True, null=True)
    pk4_value = models.FloatField(blank=True, null=True)
    pk5_value = models.FloatField(blank=True, null=True)
    pk6_value = models.FloatField(blank=True, null=True)
    pk7_value = models.FloatField(blank=True, null=True)
    pk8_value = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    opinion_value_id = models.FloatField()
    opinion_value_code = models.CharField(max_length=30)
    authored_by = models.FloatField(blank=True, null=True)
    authored_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField(blank=True, null=True)
    opinion_component_code = models.CharField(max_length=30)
    cust_attachment_id = models.FloatField(blank=True, null=True)
    attachment_id = models.FloatField(blank=True, null=True)
    cust_image_file_name = models.CharField(max_length=240, blank=True, null=True)
    image_file_name = models.CharField(max_length=240, blank=True, null=True)
    object_name = models.CharField(max_length=430)

    class Meta:
        managed = False
        db_table = 'amw_opinion_log_mv'


class AmwOpinionMv(models.Model):
    opinion_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    obj_opin_types_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_types_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_detail_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_components = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_value_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    fnd_object_rid = models.TextField(blank=True, null=True)  # This field type is a guess.
    opinion_set_id = models.FloatField()
    opinion_id = models.FloatField()
    object_opinion_type_id = models.FloatField()
    opinion_type_code = models.CharField(max_length=30)
    pk1_value = models.FloatField(blank=True, null=True)
    pk2_value = models.FloatField(blank=True, null=True)
    pk3_value = models.FloatField(blank=True, null=True)
    pk4_value = models.FloatField(blank=True, null=True)
    pk5_value = models.FloatField(blank=True, null=True)
    pk6_value = models.FloatField(blank=True, null=True)
    pk7_value = models.FloatField(blank=True, null=True)
    pk8_value = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    opinion_value_id = models.FloatField()
    opinion_value_code = models.CharField(max_length=30)
    authored_by = models.FloatField(blank=True, null=True)
    authored_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField(blank=True, null=True)
    opinion_component_code = models.CharField(max_length=30)
    cust_attachment_id = models.FloatField(blank=True, null=True)
    attachment_id = models.FloatField(blank=True, null=True)
    cust_image_file_name = models.CharField(max_length=240, blank=True, null=True)
    image_file_name = models.CharField(max_length=240, blank=True, null=True)
    object_name = models.CharField(max_length=430)

    class Meta:
        managed = False
        db_table = 'amw_opinion_mv'


class Ap6050423EmpVendorTemp(models.Model):
    vendor_id = models.FloatField()
    vendor_num = models.CharField(max_length=30)
    vendor_name = models.CharField(max_length=240)
    person_id = models.FloatField()
    employee_num = models.CharField(max_length=30, blank=True, null=True)
    employee_name = models.CharField(max_length=240, blank=True, null=True)
    creation_date = models.DateField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_6050423_emp_vendor_temp'


class ApCheckEvents9323907Bkp(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    acctd_amt = models.FloatField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_check_events_9323907_bkp'


class ApEncNBcP11686219(models.Model):
    table_name = models.CharField(max_length=29, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_enc_n_bc_p_11686219'


class ApEncYBcNp11686219(models.Model):
    table_name = models.CharField(max_length=100, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    accrue_on_receipt_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_enc_y_bc_np_11686219'


class ApErrorsGt(models.Model):
    invoice_id = models.FloatField(blank=True, null=True)
    reference_key1 = models.FloatField(blank=True, null=True)
    reference_key2 = models.FloatField(blank=True, null=True)
    reference_key3 = models.FloatField(blank=True, null=True)
    reference_key4 = models.FloatField(blank=True, null=True)
    reference_key5 = models.FloatField(blank=True, null=True)
    error_source_code = models.CharField(max_length=2000, blank=True, null=True)
    message_text = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_errors_gt'


class ApIncorInvEventTypeTab(models.Model):
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    event_id = models.BigIntegerField()
    application_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    event_date = models.DateField()
    entity_id = models.BigIntegerField()
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    reference_num_1 = models.FloatField(blank=True, null=True)
    reference_num_2 = models.FloatField(blank=True, null=True)
    reference_num_3 = models.FloatField(blank=True, null=True)
    reference_num_4 = models.FloatField(blank=True, null=True)
    reference_char_1 = models.CharField(max_length=240, blank=True, null=True)
    reference_char_2 = models.CharField(max_length=240, blank=True, null=True)
    reference_char_3 = models.CharField(max_length=240, blank=True, null=True)
    reference_char_4 = models.CharField(max_length=240, blank=True, null=True)
    reference_date_1 = models.DateField(blank=True, null=True)
    reference_date_2 = models.DateField(blank=True, null=True)
    reference_date_3 = models.DateField(blank=True, null=True)
    reference_date_4 = models.DateField(blank=True, null=True)
    event_number = models.BigIntegerField()
    on_hold_flag = models.CharField(max_length=1)
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    upg_batch_id = models.BigIntegerField(blank=True, null=True)
    upg_source_application_id = models.BigIntegerField(blank=True, null=True)
    upg_valid_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_date = models.DateField()
    budgetary_control_flag = models.CharField(max_length=1, blank=True, null=True)
    merge_event_set_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_incor_inv_event_type_tab'


class ApIncorrAdjEvent12322899(models.Model):
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    proposed_event_type = models.CharField(max_length=20, blank=True, null=True)
    event_date = models.DateField()
    entity_id = models.BigIntegerField()
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    upg_batch_id = models.BigIntegerField(blank=True, null=True)
    old_event_type = models.CharField(max_length=30)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_incorr_adj_event_12322899'


class ApIncorrFundHolds11686219(models.Model):
    category = models.CharField(max_length=43, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    hold_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    hold_date = models.DateField(blank=True, null=True)
    release_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    held_by = models.BigIntegerField(blank=True, null=True)
    hold_id = models.BigIntegerField(blank=True, null=True)
    line_location_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_incorr_fund_holds_11686219'


class ApIncorrXdlErv12382684(models.Model):
    category = models.CharField(max_length=22, blank=True, null=True)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    accounting_date = models.DateField()
    ae_header_id = models.BigIntegerField()
    ae_line_num = models.BigIntegerField()
    code_combination_id = models.BigIntegerField()
    accounting_class_code = models.CharField(max_length=30)
    unrounded_accounted_dr = models.FloatField(blank=True, null=True)
    unrounded_accounted_cr = models.FloatField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    var_inv_dist_id = models.BigIntegerField()
    var_line_type_code = models.CharField(max_length=25)
    var_amount = models.FloatField(blank=True, null=True)
    var_base_amount = models.FloatField(blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_incorr_xdl_erv_12382684'


class ApInvoiceDistributionsGt(models.Model):
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    asset_category_id = models.BigIntegerField(blank=True, null=True)
    quantity_invoiced = models.FloatField(blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    corrected_quantity = models.FloatField(blank=True, null=True)
    dist_code_combination_id = models.BigIntegerField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    accounting_date = models.DateField(blank=True, null=True)
    corrected_invoice_dist_id = models.BigIntegerField(blank=True, null=True)
    related_id = models.BigIntegerField(blank=True, null=True)
    charge_applicable_to_dist_id = models.BigIntegerField(blank=True, null=True)
    asset_book_type_code = models.CharField(max_length=15, blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_invoice_distributions_gt'


class ApSuppliersBackup6050423(models.Model):
    vendor_id = models.FloatField()
    party_id = models.FloatField()
    creation_date = models.DateField()
    worker_id = models.FloatField(blank=True, null=True)
    num_1099 = models.CharField(max_length=30, blank=True, null=True)
    individual_1099 = models.CharField(max_length=30, blank=True, null=True)
    organization_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_type_lookup_code = models.CharField(max_length=30, blank=True, null=True)
    employee_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_suppliers_backup_6050423'


class ApTempDataDriver10019828(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    event_type_code = models.CharField(max_length=30)
    prepay_invoice_id = models.BigIntegerField()
    prepay_invoice_num = models.CharField(max_length=50)
    prepay_invoice_date = models.DateField(blank=True, null=True)
    prepay_line_number = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_10019828'


class ApTempDataDriver10106488(models.Model):
    invoice_num = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    unapplied_event = models.BigIntegerField(blank=True, null=True)
    unappld_event_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    adj_event_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_10106488'


class ApTempDataDriver10110720(models.Model):
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    event_date = models.DateField()
    creation_date = models.DateField()
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_10110720'


class ApTempDataDriver10114009(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    transaction_type = models.CharField(max_length=30, blank=True, null=True)
    prepay_history_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    related_prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    invoice_adjustment_event_id = models.BigIntegerField(blank=True, null=True)
    missing_invoice_dist_id = models.BigIntegerField(blank=True, null=True)
    missing_dist_parent_id = models.BigIntegerField(blank=True, null=True)
    missing_dist_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    missing_dist_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_10114009'


class ApTempDataDriver11061055(models.Model):
    invoice_id = models.CharField(max_length=240, blank=True, null=True)
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    accounting_event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    ae_header_id = models.BigIntegerField()
    gl_transfer_flag = models.CharField(max_length=1)
    ae_line_id = models.BigIntegerField()
    ae_line_number = models.BigIntegerField(blank=True, null=True)
    ae_line_type_code = models.CharField(max_length=30)
    code_combination_id = models.BigIntegerField()
    currency_code = models.CharField(max_length=15)
    entered_dr = models.FloatField(blank=True, null=True)
    entered_cr = models.FloatField(blank=True, null=True)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    gl_sl_link_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_11061055'


class ApTempDataDriver11669265(models.Model):
    category = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    prepay_app_line_num = models.FloatField(blank=True, null=True)
    prepay_app_dist_num = models.BigIntegerField()
    prepay_app_distribution_id = models.BigIntegerField()
    prepay_app_dist_type = models.CharField(max_length=25)
    prepay_app_amount = models.FloatField(blank=True, null=True)
    prepay_app_base_amount = models.FloatField(blank=True, null=True)
    prepay_app_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_app_accounting_date = models.DateField()
    prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    related_cascade_event_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    prepay_app_event_status = models.CharField(max_length=1)
    prepay_app_process_status = models.CharField(max_length=1)
    prepay_unapp_dist_num = models.BigIntegerField()
    prepay_unapp_distribution_id = models.BigIntegerField()
    prepay_unapp_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_unapp_accounting_date = models.DateField()
    prepay_unapp_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_unapp_event_status = models.CharField(max_length=1)
    prepay_unapp_process_status = models.CharField(max_length=1)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_11669265'


class ApTempDataDriver11673966(models.Model):
    category = models.CharField(max_length=100, blank=True, null=True)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    event_id = models.BigIntegerField()
    event_date = models.DateField()
    event_type_code = models.CharField(max_length=30)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    ledger_id = models.BigIntegerField()
    budgetary_control_flag = models.CharField(max_length=1, blank=True, null=True)
    net_prepay_applied = models.FloatField(blank=True, null=True)
    net_prepay_acct = models.FloatField(blank=True, null=True)
    net_prepay_adj_acct = models.FloatField(blank=True, null=True)
    transaction_type = models.CharField(max_length=30)
    prepay_history_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    prepay_invoice_id = models.BigIntegerField()
    prepay_line_num = models.BigIntegerField()
    related_prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_11673966'


class ApTempDataDriver11683638(models.Model):
    category = models.CharField(max_length=100, blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=100, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    line_number = models.FloatField(blank=True, null=True)
    line_amount = models.FloatField(blank=True, null=True)
    discarded_flag = models.CharField(max_length=1, blank=True, null=True)
    distribution_line_number = models.FloatField(blank=True, null=True)
    invoice_distribution_id = models.FloatField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.FloatField(blank=True, null=True)
    budgetary_control_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_distribution_id = models.FloatField(blank=True, null=True)
    parent_reversal_id = models.FloatField(blank=True, null=True)
    reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    set_of_books_id = models.FloatField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_11683638'


class ApTempDataDriver11844328(models.Model):
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    event_date = models.DateField()
    entity_id = models.BigIntegerField()
    source_id_int_1 = models.BigIntegerField(blank=True, null=True)
    purch_encumbrance_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_11844328'


class ApTempDataDriver12322899(models.Model):
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    proposed_event_type = models.CharField(max_length=30, blank=True, null=True)
    event_date = models.DateField()
    entity_id = models.BigIntegerField()
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    upg_batch_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_12322899'


class ApTempDataDriver111073934(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    invoice_distribution_id = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    accrual_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    cash_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    sla_ledger_cash_basis_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_1_11073934'


class ApTempDataDriver211073934(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    transaction_type = models.CharField(max_length=30)
    prepay_history_id = models.BigIntegerField()
    prepay_invoice_id = models.BigIntegerField()
    prepay_line_num = models.BigIntegerField()
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    sla_ledger_cash_basis_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_2_11073934'


class ApTempDataDriver6979118(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_status_code = models.CharField(max_length=1, blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    payment_history_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    events_posted_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_6979118'


class ApTempDataDriver6992095(models.Model):
    orphan_type = models.CharField(max_length=10, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    event_status_code = models.CharField(max_length=1, blank=True, null=True)
    process_status_code = models.CharField(max_length=1, blank=True, null=True)
    ae_header_id = models.BigIntegerField(blank=True, null=True)
    source_id = models.BigIntegerField(blank=True, null=True)
    source_table = models.CharField(max_length=30, blank=True, null=True)
    invoice_num_or_check_number = models.CharField(max_length=50, blank=True, null=True)
    event_date = models.DateField(blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    budgetary_control_flag = models.CharField(max_length=1, blank=True, null=True)
    upg_batch_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_6992095'


class ApTempDataDriver6992111(models.Model):
    event_status_code = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    entity_code = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_6992111'


class ApTempDataDriver8529957(models.Model):
    event_id = models.BigIntegerField()
    event_type = models.CharField(max_length=30)
    event_date = models.DateField()
    entity_code = models.CharField(max_length=30)
    ledger_id = models.BigIntegerField()
    transaction_id = models.BigIntegerField(blank=True, null=True)
    transaction_number = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)
    sweep_to_date = models.CharField(max_length=14, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8529957'


class ApTempDataDriver8531305(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    check_id = models.BigIntegerField(blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    payment_history_id = models.BigIntegerField(blank=True, null=True)
    prepay_history_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    event_date = models.DateField(blank=True, null=True)
    self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8531305'


class ApTempDataDriver8932975(models.Model):
    invoice_num = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    invoice_distribution_id = models.BigIntegerField()
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8932975'


class ApTempDataDriver8966332(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_distribution_id = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966332'


class ApTempDataDriver8966880(models.Model):
    prepay_app_dist_id = models.BigIntegerField()
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    amount = models.FloatField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966880'


class ApTempDataDriver8966882(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    accounting_date = models.DateField()
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    budgetary_control_flag = models.CharField(max_length=1, blank=True, null=True)
    upg_batch_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966882'


class ApTempDataDriver8966886(models.Model):
    category = models.CharField(max_length=100, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.FloatField(blank=True, null=True)
    invoice_dist_amount = models.FloatField(blank=True, null=True)
    invoice_dist_base_amount = models.FloatField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_app_dist_id = models.BigIntegerField(blank=True, null=True)
    prepay_history_id = models.BigIntegerField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    base_amt_at_prepay_xrate = models.FloatField(blank=True, null=True)
    base_amt_at_prepay_pay_xrate = models.FloatField(blank=True, null=True)
    base_amt_at_prepay_clr_xrate = models.FloatField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    event_status_code = models.CharField(max_length=1, blank=True, null=True)
    budgetary_event_type = models.CharField(max_length=30, blank=True, null=True)
    budgetary_event_id = models.BigIntegerField(blank=True, null=True)
    budgetary_event_status = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966886'


class ApTempDataDriver8966888(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    event_id = models.BigIntegerField()
    ae_header_id = models.BigIntegerField()
    ae_line_num = models.BigIntegerField()
    accounting_class_code = models.CharField(max_length=30)
    entered_dr = models.FloatField(blank=True, null=True)
    entered_cr = models.FloatField(blank=True, null=True)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966888'


class ApTempDataDriver8966893(models.Model):
    invoice_num = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    invoice_distribution_id = models.BigIntegerField()
    gl_date = models.DateField(blank=True, null=True)
    tax_rate_id = models.BigIntegerField(blank=True, null=True)
    recovery_rate_id = models.BigIntegerField(blank=True, null=True)
    self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    recoverable_flag = models.CharField(max_length=1)
    tax_jurisdiction_id = models.BigIntegerField(blank=True, null=True)
    tax_regime_id = models.BigIntegerField(blank=True, null=True)
    tax_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField()
    tax_status_id = models.BigIntegerField(blank=True, null=True)
    dist_code_combination_id = models.BigIntegerField()
    account_source_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    self_assessed_tax_liab_ccid = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8966893'


class ApTempDataDriver8970059(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    invoice_distribution_id = models.BigIntegerField()
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8970059'


class ApTempDataDriver8970455(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    event_status_code = models.CharField(max_length=1)
    process_status_code = models.CharField(max_length=1)
    ae_header_id = models.BigIntegerField()
    gl_transfer_status_code = models.CharField(max_length=30)
    balance_type = models.CharField(max_length=11, blank=True, null=True)
    event_date = models.DateField()
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_8970455'


class ApTempDataDriver9253530(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    prepay_history_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    prepay_invoice_id = models.BigIntegerField()
    prepay_invoice_num = models.CharField(max_length=50)
    prepay_line_num = models.BigIntegerField()
    prepay_appl_amt = models.FloatField(blank=True, null=True)
    prepay_acct_amt = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9253530'


class ApTempDataDriver9253560(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    accounting_date = models.DateField()
    event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9253560'


class ApTempDataDriver9253936(models.Model):
    std_invoice_id = models.BigIntegerField()
    std_invoice_num = models.CharField(max_length=50)
    std_invoice_date = models.DateField(blank=True, null=True)
    std_invoice_type = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    prepay_invoice_id = models.BigIntegerField()
    prepay_invoice_num = models.CharField(max_length=50)
    prepay_invoice_date = models.DateField(blank=True, null=True)
    prepay_app_line_num = models.FloatField(blank=True, null=True)
    prepay_app_dist_id = models.BigIntegerField()
    prepay_app_dist_num = models.BigIntegerField()
    prepay_app_line_type = models.CharField(max_length=25)
    prepay_app_match_status = models.CharField(max_length=1, blank=True, null=True)
    prepay_app_acct_date = models.DateField()
    prepay_app_event_type = models.CharField(max_length=30)
    prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_app_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_app_amount = models.FloatField(blank=True, null=True)
    prepay_app_base_amount = models.FloatField(blank=True, null=True)
    prepay_app_hist_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_unapp_dist_id = models.BigIntegerField()
    prepay_unapp_dist_num = models.BigIntegerField()
    prepay_unapp_line_type = models.CharField(max_length=25)
    prepay_unapp_match_status = models.CharField(max_length=1, blank=True, null=True)
    prepay_unapp_acct_date = models.DateField()
    prepay_unapp_event_type = models.CharField(max_length=30)
    prepay_unapp_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_unapp_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_unapp_amount = models.FloatField(blank=True, null=True)
    prepay_unapp_base_amount = models.FloatField(blank=True, null=True)
    prepay_unapp_hist_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    sob_id = models.BigIntegerField()
    gl_date = models.DateField()
    period_name = models.CharField(max_length=15)
    migration_status_code = models.CharField(max_length=30, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9253936'


class ApTempDataDriver9288086(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.FloatField(blank=True, null=True)
    trx_table = models.CharField(max_length=29, blank=True, null=True)
    trx_id = models.BigIntegerField(blank=True, null=True)
    accrual_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    cash_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9288086'


class ApTempDataDriver9323907(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    acctd_amt = models.FloatField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9323907'


class ApTempDataDriver9411521(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    accounting_method_option = models.CharField(max_length=25, blank=True, null=True)
    rate_var_gain_ccid = models.BigIntegerField(blank=True, null=True)
    rate_var_loss_ccid = models.BigIntegerField(blank=True, null=True)
    recon_accounting_flag = models.CharField(max_length=1, blank=True, null=True)
    when_to_account_pmt = models.CharField(max_length=30, blank=True, null=True)
    when_to_account_gain_loss = models.CharField(max_length=30, blank=True, null=True)
    rate_var_gain_ccid_new = models.BigIntegerField(blank=True, null=True)
    rate_var_loss_ccid_new = models.BigIntegerField(blank=True, null=True)
    recon_accounting_flag_new = models.CharField(max_length=1, blank=True, null=True)
    when_to_account_pmt_new = models.CharField(max_length=30, blank=True, null=True)
    when_to_account_gain_loss_new = models.CharField(max_length=30, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9411521'


class ApTempDataDriver9574881(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    cancelled_date = models.DateField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)
    reason = models.CharField(max_length=24, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9574881'


class ApTempDataDriver9690117(models.Model):
    check_id = models.BigIntegerField()
    check_number = models.BigIntegerField()
    check_date = models.DateField()
    payment_method_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    checkrun_name = models.CharField(max_length=255, blank=True, null=True)
    vendor_id = models.BigIntegerField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    amount = models.FloatField()
    currency_code = models.CharField(max_length=15)
    payment_type_flag = models.CharField(max_length=25)
    cleared_amount = models.FloatField(blank=True, null=True)
    status_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9690117'


class ApTempDataDriver9724485(models.Model):
    invoice_num = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    invoice_currency_code = models.CharField(max_length=15)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9724485'


class ApTempDataDriver9734026(models.Model):
    prepay_invoice_num = models.CharField(max_length=50)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    prepay_invoice_id = models.BigIntegerField()
    prepay_history_id = models.BigIntegerField()
    event_id = models.BigIntegerField(blank=True, null=True)
    applied_to_invoice_num = models.CharField(max_length=50)
    invoice_id = models.BigIntegerField()
    invoice_adjustment_event_id = models.BigIntegerField(blank=True, null=True)
    transaction_type = models.CharField(max_length=30)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9734026'


class ApTempDataDriver9774484(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    prepay_app_distribution_id = models.BigIntegerField()
    accounting_date = models.DateField()
    prepay_app_amt = models.FloatField(blank=True, null=True)
    prepay_app_base_amt = models.FloatField(blank=True, null=True)
    sum_app_dists_amt = models.FloatField(blank=True, null=True)
    sum_app_dists_base_amt = models.FloatField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    prepay_history_id = models.BigIntegerField()
    transaction_type = models.CharField(max_length=30)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    purch_encumbrance_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    base_currency_code = models.CharField(max_length=15)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9774484'


class ApTempDataDriver9774707(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    tax_line_type = models.CharField(max_length=25)
    tax_distribution_id = models.BigIntegerField()
    tax_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    tax_acct_event_id = models.BigIntegerField(blank=True, null=True)
    tax_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    category = models.CharField(max_length=24, blank=True, null=True)
    prepay_line_type = models.CharField(max_length=25)
    prepay_app_distribution_id = models.BigIntegerField()
    prepay_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    prepay_invoice_line_no = models.FloatField(blank=True, null=True)
    prepay_dist_line_no = models.BigIntegerField()
    prepay_acct_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    appl_prepay_line_type = models.CharField(max_length=25, blank=True, null=True)
    appl_prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    appl_prepay_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    appl_parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    appl_prepay_invoice_line_no = models.FloatField(blank=True, null=True)
    appl_prepay_dist_line_no = models.BigIntegerField(blank=True, null=True)
    appl_acct_event_id = models.BigIntegerField(blank=True, null=True)
    appl_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    appl_match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_driver_9774707'


class ApTempDataDrvInv10176437(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_drv_inv_10176437'


class ApTempDataInvDrv9288086(models.Model):
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.FloatField(blank=True, null=True)
    trx_table = models.CharField(max_length=29, blank=True, null=True)
    trx_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    accrual_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    cash_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_inv_drv_9288086'


class ApTempDataPayDrv9288086(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    trx_table = models.CharField(max_length=23, blank=True, null=True)
    trx_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    accrual_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    cash_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_data_pay_drv_9288086'


class ApTempDriver110064586(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_id = models.FloatField(blank=True, null=True)
    prepay_history_id = models.BigIntegerField()
    accounting_date = models.DateField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_type = models.CharField(max_length=30)
    invoice_line_number = models.FloatField(blank=True, null=True)
    prepay_line_num = models.BigIntegerField()
    prepay_invoice_id = models.BigIntegerField()
    invoice_adjustment_event_id = models.BigIntegerField(blank=True, null=True)
    related_prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_driver_1_10064586'


class ApTempDriver210064586(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_id = models.FloatField(blank=True, null=True)
    prepay_history_id = models.BigIntegerField()
    accounting_date = models.DateField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    bc_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_type = models.CharField(max_length=30)
    invoice_line_number = models.FloatField(blank=True, null=True)
    prepay_line_num = models.BigIntegerField()
    prepay_invoice_id = models.BigIntegerField()
    invoice_adjustment_event_id = models.BigIntegerField(blank=True, null=True)
    related_prepay_app_event_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_driver_2_10064586'


class ApTempDriverXdl10136765(models.Model):
    event_id = models.BigIntegerField()
    entity_id = models.BigIntegerField()
    ae_header_id = models.BigIntegerField()
    transaction_id = models.BigIntegerField(blank=True, null=True)
    transaction_number = models.CharField(max_length=240, blank=True, null=True)
    entity_code = models.CharField(max_length=30)
    ledger_id = models.BigIntegerField()
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_driver_xdl_10136765'


class ApTempInvDriver8966238(models.Model):
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    cancellation_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_status = models.CharField(max_length=4000, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    distribution_type = models.CharField(max_length=30, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_inv_driver_8966238'


class ApTempPrepayDriver9245144(models.Model):
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField(blank=True, null=True)
    cancellation_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    invoice_status = models.CharField(max_length=4000, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    distribution_type = models.CharField(max_length=30, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_temp_prepay_driver_9245144'


class ApUndoChecks9323907(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    proposed_undo_date = models.DateField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)
    calculated_undo_date = models.DateField(blank=True, null=True)
    calculated_undo_period = models.CharField(max_length=100, blank=True, null=True)
    reversal_event_id = models.FloatField(blank=True, null=True)
    new_event_id = models.FloatField(blank=True, null=True)
    return_status = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_undo_checks_9323907'


class ApUndoEventLog(models.Model):
    event_id = models.FloatField(blank=True, null=True)
    e2 = models.BigIntegerField(blank=True, null=True)
    e3 = models.BigIntegerField(blank=True, null=True)
    status = models.CharField(max_length=300, blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    bug_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_undo_event_log'


class ApUndoneChecks9323907Bkp(models.Model):
    check_id = models.BigIntegerField(blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_undone_checks_9323907_bkp'


class ApXalXdlMismatch12382684(models.Model):
    category = models.CharField(max_length=16, blank=True, null=True)
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    event_id = models.BigIntegerField()
    event_type_code = models.CharField(max_length=30)
    accounting_date = models.DateField()
    ae_header_id = models.BigIntegerField()
    ae_line_num = models.BigIntegerField()
    code_combination_id = models.BigIntegerField()
    accounting_class_code = models.CharField(max_length=30)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    net_amt = models.FloatField(blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ap_xal_xdl_mismatch_12382684'


class AqGatReqQtblG(models.Model):
    msgid = models.TextField()  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    address_field = models.FloatField(db_column='address#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sign = models.TextField(blank=True, null=True)  # This field type is a guess.
    dbs_sign = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_g'
        unique_together = (('msgid', 'subscriber_field', 'name', 'address_field'),)


class AqGatReqQtblH(models.Model):
    msgid = models.TextField()  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    address_field = models.FloatField(db_column='address#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dequeue_time = models.DateTimeField(blank=True, null=True)
    transaction_id = models.CharField(max_length=30, blank=True, null=True)
    dequeue_user = models.FloatField(blank=True, null=True)
    propagated_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    retry_count = models.FloatField(blank=True, null=True)
    hint = models.TextField(blank=True, null=True)  # This field type is a guess.
    spare = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_h'
        unique_together = (('msgid', 'subscriber_field', 'name', 'address_field'),)


class AqGatReqQtblI(models.Model):
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    queue_field = models.FloatField(db_column='queue#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    msg_enq_time = models.DateTimeField()
    msg_step_no = models.FloatField()
    msg_chain_no = models.FloatField()
    msg_local_order_no = models.FloatField()
    msgid = models.TextField()  # This field type is a guess.
    hint = models.TextField(blank=True, null=True)  # This field type is a guess.
    spare = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_i'
        unique_together = (('subscriber_field', 'name', 'queue_field', 'msg_enq_time', 'msg_step_no', 'msg_chain_no', 'msg_local_order_no', 'msgid'),)


class AqGatReqQtblL(models.Model):
    msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30, blank=True, null=True)
    address_field = models.FloatField(db_column='address#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dequeue_time = models.DateTimeField(blank=True, null=True)
    transaction_id = models.CharField(max_length=30, blank=True, null=True)
    dequeue_user = models.FloatField(blank=True, null=True)
    flags = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_l'


class AqGatReqQtblS(models.Model):
    subscriber_id = models.FloatField(primary_key=True)
    queue_name = models.CharField(max_length=30)
    name = models.CharField(max_length=30, blank=True, null=True)
    address = models.CharField(max_length=1024, blank=True, null=True)
    protocol = models.FloatField(blank=True, null=True)
    subscriber_type = models.FloatField(blank=True, null=True)
    rule_name = models.CharField(max_length=30, blank=True, null=True)
    trans_name = models.CharField(max_length=65, blank=True, null=True)
    ruleset_name = models.CharField(max_length=65, blank=True, null=True)
    negative_ruleset_name = models.CharField(max_length=65, blank=True, null=True)
    creation_time = models.DateTimeField(blank=True, null=True)
    modification_time = models.DateTimeField(blank=True, null=True)
    deletion_time = models.DateTimeField(blank=True, null=True)
    scn_at_remove = models.FloatField(blank=True, null=True)
    scn_at_add = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_s'


class AqGatReqQtblT(models.Model):
    next_date = models.DateTimeField()
    txn_id = models.CharField(max_length=30)
    msgid = models.TextField()  # This field type is a guess.
    action = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aq$_gat_req_qtbl_t'
        unique_together = (('next_date', 'txn_id', 'msgid'),)


class AqWfBpelQtabG(models.Model):
    msgid = models.TextField()  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    address_field = models.FloatField(db_column='address#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sign = models.TextField(blank=True, null=True)  # This field type is a guess.
    dbs_sign = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_g'
        unique_together = (('msgid', 'subscriber_field', 'name', 'address_field'),)


class AqWfBpelQtabH(models.Model):
    msgid = models.TextField()  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    address_field = models.FloatField(db_column='address#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dequeue_time = models.DateTimeField(blank=True, null=True)
    transaction_id = models.CharField(max_length=30, blank=True, null=True)
    dequeue_user = models.FloatField(blank=True, null=True)
    propagated_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    retry_count = models.FloatField(blank=True, null=True)
    hint = models.TextField(blank=True, null=True)  # This field type is a guess.
    spare = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_h'
        unique_together = (('msgid', 'subscriber_field', 'name', 'address_field'),)


class AqWfBpelQtabI(models.Model):
    subscriber_field = models.FloatField(db_column='subscriber#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30)
    queue_field = models.FloatField(db_column='queue#')  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    msg_enq_time = models.DateTimeField()
    msg_step_no = models.FloatField()
    msg_chain_no = models.FloatField()
    msg_local_order_no = models.FloatField()
    msgid = models.TextField()  # This field type is a guess.
    hint = models.TextField(blank=True, null=True)  # This field type is a guess.
    spare = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_i'
        unique_together = (('subscriber_field', 'name', 'queue_field', 'msg_enq_time', 'msg_step_no', 'msg_chain_no', 'msg_local_order_no', 'msgid'),)


class AqWfBpelQtabL(models.Model):
    msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    subscriber_field = models.FloatField(db_column='subscriber#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    name = models.CharField(max_length=30, blank=True, null=True)
    address_field = models.FloatField(db_column='address#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dequeue_time = models.DateTimeField(blank=True, null=True)
    transaction_id = models.CharField(max_length=30, blank=True, null=True)
    dequeue_user = models.FloatField(blank=True, null=True)
    flags = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_l'


class AqWfBpelQtabS(models.Model):
    subscriber_id = models.FloatField(primary_key=True)
    queue_name = models.CharField(max_length=30)
    name = models.CharField(max_length=30, blank=True, null=True)
    address = models.CharField(max_length=1024, blank=True, null=True)
    protocol = models.FloatField(blank=True, null=True)
    subscriber_type = models.FloatField(blank=True, null=True)
    rule_name = models.CharField(max_length=30, blank=True, null=True)
    trans_name = models.CharField(max_length=61, blank=True, null=True)
    ruleset_name = models.CharField(max_length=65, blank=True, null=True)
    negative_ruleset_name = models.CharField(max_length=65, blank=True, null=True)
    scn_at_remove = models.FloatField(blank=True, null=True)
    creation_time = models.DateTimeField(blank=True, null=True)
    modification_time = models.DateTimeField(blank=True, null=True)
    deletion_time = models.DateTimeField(blank=True, null=True)
    scn_at_add = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_s'


class AqWfBpelQtabT(models.Model):
    next_date = models.DateTimeField()
    txn_id = models.CharField(max_length=30)
    msgid = models.TextField()  # This field type is a guess.
    action = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aq$_wf_bpel_qtab_t'
        unique_together = (('next_date', 'txn_id', 'msgid'),)


class ArIlCashReceiptsGt(models.Model):
    cash_receipt_id = models.BigIntegerField(blank=True, null=True)
    receipt_number = models.CharField(max_length=30, blank=True, null=True)
    receipt_date = models.DateField(blank=True, null=True)
    receipt_status = models.CharField(max_length=30, blank=True, null=True)
    document_number = models.BigIntegerField(blank=True, null=True)
    receipt_amount = models.FloatField(blank=True, null=True)
    currency = models.CharField(max_length=15, blank=True, null=True)
    credit_card_no = models.CharField(max_length=150, blank=True, null=True)
    credit_card_type = models.CharField(max_length=150, blank=True, null=True)
    maturity_date = models.DateField(blank=True, null=True)
    method_name = models.CharField(max_length=30, blank=True, null=True)
    bank_account = models.CharField(max_length=30, blank=True, null=True)
    bank_name = models.CharField(max_length=360, blank=True, null=True)
    bank_branch_name = models.CharField(max_length=360, blank=True, null=True)
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_number = models.CharField(max_length=30, blank=True, null=True)
    tax_registration_number = models.CharField(max_length=50, blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    cust_acct_site_id = models.BigIntegerField(blank=True, null=True)
    address_line1 = models.CharField(max_length=600, blank=True, null=True)
    address_line2 = models.CharField(max_length=240, blank=True, null=True)
    user_name = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    city = models.CharField(max_length=150, blank=True, null=True)
    postal_code = models.CharField(max_length=150, blank=True, null=True)
    copy_or_original = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ar_il_cash_receipts_gt'


class ArMemoLinesAllTlBk(models.Model):
    memo_line_id = models.BigIntegerField()
    org_id = models.BigIntegerField(blank=True, null=True)
    name = models.CharField(max_length=50, blank=True, null=True)
    description = models.CharField(max_length=80, blank=True, null=True)
    language = models.CharField(max_length=4)
    source_lang = models.CharField(max_length=4)
    last_update_date = models.DateField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ar_memo_lines_all_tl_bk'


class ArRemCrIdGtt(models.Model):
    cash_receipt_history_id = models.FloatField(blank=True, null=True)
    cash_receipt_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ar_rem_cr_id_gtt'


class AsForecastMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField()
    conversion_period_name = models.CharField(max_length=15)
    credit_type_id = models.FloatField(blank=True, null=True)
    conversion_period_set_name = models.CharField(max_length=15)
    forecast_category_id = models.FloatField()
    conversion_status_flag = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    weighted_amount = models.FloatField(blank=True, null=True)
    won_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'as_forecast_mv'


class AsGroupMv(models.Model):
    group_id = models.FloatField()
    group_name = models.CharField(max_length=60)
    resource_id = models.FloatField()
    person_id = models.FloatField(blank=True, null=True)
    start_date_active = models.DateField(blank=True, null=True)
    end_date_active = models.DateField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'as_group_mv'


class AsSubordinateRepsMv(models.Model):
    resource_id = models.FloatField()
    person_id = models.FloatField(blank=True, null=True)
    source_last_name = models.CharField(max_length=360, blank=True, null=True)
    source_first_name = models.CharField(max_length=360, blank=True, null=True)
    user_name = models.CharField(max_length=100, blank=True, null=True)
    group_id = models.FloatField()
    period_set_name = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'as_subordinate_reps_mv'


class Asf10270844PerzLfObjectTemp(models.Model):
    object_id = models.FloatField()
    parent_id = models.FloatField(blank=True, null=True)
    application_id = models.FloatField(blank=True, null=True)
    object_name = models.CharField(max_length=60, blank=True, null=True)
    object_description = models.CharField(max_length=240, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    jtf_perz_lf_object_object_id = models.FloatField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf10270844perz_lf_object_temp'


class Asf10270844PerzObjMapTemp(models.Model):
    obj_map_id = models.FloatField()
    map_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf10270844perz_obj_map_temp'


class AsfFndattdoc05310236Bak(models.Model):
    attached_document_id = models.FloatField()
    document_id = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    seq_num = models.FloatField()
    entity_name = models.CharField(max_length=40)
    pk1_value = models.CharField(max_length=100, blank=True, null=True)
    pk2_value = models.CharField(max_length=100, blank=True, null=True)
    pk3_value = models.CharField(max_length=100, blank=True, null=True)
    pk4_value = models.CharField(max_length=150, blank=True, null=True)
    pk5_value = models.CharField(max_length=150, blank=True, null=True)
    automatically_added_flag = models.CharField(max_length=1)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    column1 = models.CharField(max_length=30, blank=True, null=True)
    app_source_version = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_fndattdoc05310236_bak'


class AsfFndattdoc06250902Bak(models.Model):
    attached_document_id = models.FloatField()
    document_id = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    seq_num = models.FloatField()
    entity_name = models.CharField(max_length=40)
    pk1_value = models.CharField(max_length=100, blank=True, null=True)
    pk2_value = models.CharField(max_length=100, blank=True, null=True)
    pk3_value = models.CharField(max_length=100, blank=True, null=True)
    pk4_value = models.CharField(max_length=150, blank=True, null=True)
    pk5_value = models.CharField(max_length=150, blank=True, null=True)
    automatically_added_flag = models.CharField(max_length=1)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    column1 = models.CharField(max_length=30, blank=True, null=True)
    app_source_version = models.CharField(max_length=255, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_fndattdoc06250902_bak'


class AsfFndattdoc10261245Bak(models.Model):
    attached_document_id = models.FloatField()
    document_id = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    seq_num = models.FloatField()
    entity_name = models.CharField(max_length=40)
    pk1_value = models.CharField(max_length=100, blank=True, null=True)
    pk2_value = models.CharField(max_length=100, blank=True, null=True)
    pk3_value = models.CharField(max_length=100, blank=True, null=True)
    pk4_value = models.CharField(max_length=150, blank=True, null=True)
    pk5_value = models.CharField(max_length=150, blank=True, null=True)
    automatically_added_flag = models.CharField(max_length=1)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    column1 = models.CharField(max_length=30, blank=True, null=True)
    app_source_version = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_fndattdoc10261245_bak'


class AsfLeadsBinMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    cnt = models.FloatField(blank=True, null=True)
    amt = models.FloatField(blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_bin_mv'


class AsfLeadsChnMainMv(models.Model):
    channels = models.FloatField(blank=True, null=True)
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_chn_main_mv'


class AsfLeadsChnMv(models.Model):
    sales_lead_id = models.FloatField()
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField()
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_chn_mv'


class AsfLeadsChnSumMv(models.Model):
    lead_id = models.FloatField()
    description = models.CharField(max_length=2000, blank=True, null=True)
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField()
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_chn_sum_mv'


class AsfLeadsCmpMainMv(models.Model):
    campaigns = models.FloatField(blank=True, null=True)
    budgetamount = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_cmp_main_mv'


class AsfLeadsCmpMv(models.Model):
    sales_lead_id = models.FloatField()
    budgetamount = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    customer_id = models.FloatField()
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_cmp_mv'


class AsfLeadsGrpMv(models.Model):
    groups = models.FloatField(blank=True, null=True)
    sales_lead_id = models.FloatField()
    budgetamount = models.FloatField(blank=True, null=True)
    group_id = models.FloatField()
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    parent_group_id = models.FloatField()
    immediate_parent_flag = models.CharField(max_length=1)
    parent_resource_id = models.FloatField(blank=True, null=True)
    assign_to_salesforce_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'asf_leads_grp_mv'


class AsfLeadsPrdMainMv(models.Model):
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    category_id = models.FloatField(blank=True, null=True)
    category_set_id = models.FloatField(blank=True, null=True)
    products = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_prd_main_mv'


class AsfLeadsPrdMv(models.Model):
    sales_lead_id = models.FloatField()
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    category_id = models.FloatField(blank=True, null=True)
    category_set_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField()
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_prd_mv'


class AsfLeadsPrdSumMv(models.Model):
    lead_id = models.FloatField()
    description = models.CharField(max_length=2000, blank=True, null=True)
    budgetamount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    customer_id = models.FloatField()
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_id = models.FloatField(blank=True, null=True)
    category_set_id = models.FloatField(blank=True, null=True)
    products = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_prd_sum_mv'


class AsfLeadsTopMv(models.Model):
    leads = models.FloatField(blank=True, null=True)
    budgetamount = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField()
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_leads_top_mv'


class AsfOppChnFrcstMv(models.Model):
    leads = models.FloatField(blank=True, null=True)
    lead_id = models.FloatField()
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    immediate_parent_flag = models.CharField(max_length=1)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_chn_frcst_mv'


class AsfOppChnMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    conversion_period_type = models.CharField(max_length=15)
    conversion_period_name = models.CharField(max_length=15)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_chn_mv'


class AsfOppCmpFrcstMv(models.Model):
    leads = models.FloatField(blank=True, null=True)
    lead_id = models.FloatField()
    source_promotion_id = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    immediate_parent_flag = models.CharField(max_length=1)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_cmp_frcst_mv'


class AsfOppCmpMv(models.Model):
    source_promotion_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    conversion_period_type = models.CharField(max_length=15)
    conversion_period_name = models.CharField(max_length=15)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_cmp_mv'


class AsfOppMgrMv(models.Model):
    parent_group_id = models.FloatField()
    leads = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    won_budget = models.FloatField(blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    forecast_category_id = models.FloatField()
    period_name = models.CharField(max_length=15)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_mgr_mv'


class AsfOppPrdFrcstMv(models.Model):
    leads = models.FloatField(blank=True, null=True)
    interest_type = models.CharField(max_length=80, blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)
    won_budget = models.FloatField(blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)
    forecast_date = models.DateField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    forecast_category_id = models.FloatField()
    lead_id = models.FloatField()
    period_name = models.CharField(max_length=15)
    immediate_parent_flag = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'asf_opp_prd_frcst_mv'


class AsfOppPrdMv(models.Model):
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    conversion_period_type = models.CharField(max_length=15)
    conversion_period_name = models.CharField(max_length=15)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    credit_type_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_prd_mv'


class AsfOppTopFrcstMv(models.Model):
    leads = models.FloatField(blank=True, null=True)
    sales_credit_id = models.FloatField()
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    party_type = models.CharField(max_length=30, blank=True, null=True)
    lead_id = models.FloatField()
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    conversion_status_flag = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    win_probability = models.FloatField(blank=True, null=True)
    decision_date = models.DateField(blank=True, null=True)
    sales_stage = models.CharField(max_length=60, blank=True, null=True)
    status = models.CharField(max_length=240, blank=True, null=True)
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    immediate_parent_flag = models.CharField(max_length=1)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_top_frcst_mv'


class AsfOppTopMv(models.Model):
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    party_type = models.CharField(max_length=30, blank=True, null=True)
    lead_id = models.FloatField()
    total_amount = models.FloatField(blank=True, null=True)
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    manager_person_id = models.FloatField(blank=True, null=True)
    conversion_period_type = models.CharField(max_length=15)
    conversion_period_name = models.CharField(max_length=15)
    to_currency_code = models.CharField(max_length=15, blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    decision_date = models.DateField(blank=True, null=True)
    sales_stage = models.CharField(max_length=60, blank=True, null=True)
    status = models.CharField(max_length=240, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    currency_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_opp_top_mv'


class AsfRollupMgrMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    person_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField()
    group_id = models.FloatField()
    excnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_rollup_mgr_mv'


class AsfScBinFrcstMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    pipeline_amount = models.FloatField(blank=True, null=True)
    won_amount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    opp_deleted_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_date = models.DateField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    forecast_category_id = models.FloatField()
    period_name = models.CharField(max_length=15)
    lead_id = models.FloatField()
    immediate_parent_flag = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'asf_sc_bin_frcst_mv'


class AsfScBinMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    lead_id = models.FloatField()
    sales_credit_amount = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    party_type = models.CharField(max_length=30, blank=True, null=True)
    sales_stage_id = models.FloatField(blank=True, null=True)
    opportunity_creation_date = models.DateField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    credit_type_id = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    usage = models.CharField(max_length=240)
    arowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    browid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    drowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    decision_date = models.DateField(blank=True, null=True)
    sales_stage = models.CharField(max_length=60, blank=True, null=True)
    status = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_sc_bin_mv'


class AsfScbinSummv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    sales_group_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    usage = models.CharField(max_length=240)
    total_amount = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    cnt2 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_scbin_summv'


class AsfScbinldMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    lead_id = models.FloatField()
    usage = models.CharField(max_length=240)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_scbinld_mv'


class AsfScbinldSummv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    usage = models.CharField(max_length=240)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_scbinld_summv'


class AsfSlBinMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    assign_to_salesforce_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    budget_amount = models.FloatField(blank=True, null=True)
    sales_lead_id = models.FloatField()
    customer_id = models.FloatField()
    source_promotion_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    offer_id = models.FloatField(blank=True, null=True)
    assign_sales_group_id = models.FloatField(blank=True, null=True)
    orig_system_reference = models.CharField(max_length=240, blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)
    usage = models.CharField(max_length=240)
    arowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    browid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    drowid = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'asf_sl_bin_mv'


class AsfSlbinSummv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    usage = models.CharField(max_length=240)
    total_amount = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    cnt2 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_slbin_summv'


class AsfSlbinldMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    sales_lead_id = models.FloatField()
    usage = models.CharField(max_length=240)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_slbinld_mv'


class AsfSlbinldSummv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    usage = models.CharField(max_length=240)
    num_leads = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_slbinld_summv'


class AsfVarMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    lead_id = models.FloatField()
    sales_credit_amount = models.FloatField(blank=True, null=True)
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    party_type = models.CharField(max_length=30, blank=True, null=True)
    opportunity_creation_date = models.DateField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    decision_date = models.DateField(blank=True, null=True)
    status = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_var_mv'


class AsfWinLossComptatorMv(models.Model):
    close_competitor = models.CharField(max_length=255, blank=True, null=True)
    win = models.FloatField(blank=True, null=True)
    loss = models.FloatField(blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    currency_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_win_loss_comptator_mv'


class AsfWinLossMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField()
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15, blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    won = models.FloatField(blank=True, null=True)
    lose = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_win_loss_mv'


class AsfWinLossProdcatMv(models.Model):
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    won = models.FloatField(blank=True, null=True)
    loss = models.FloatField(blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    credit_type_id = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField()
    conversion_period_type = models.CharField(max_length=15)
    conversion_period_name = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_win_loss_prodcat_mv'


class AsfWinLossTop5Mv(models.Model):
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    close_competitor = models.CharField(max_length=255, blank=True, null=True)
    lead_id = models.FloatField()
    sales_credit_amount = models.FloatField(blank=True, null=True)
    party_id = models.FloatField()
    party_type = models.CharField(max_length=30, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    cur_sales_credit_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_win_loss_top5_mv'


class AsfWinWonTop5Mv(models.Model):
    customer_name = models.CharField(max_length=360, blank=True, null=True)
    customer_id = models.FloatField()
    opp_description = models.CharField(max_length=240, blank=True, null=True)
    close_competitor = models.CharField(max_length=255, blank=True, null=True)
    lead_id = models.FloatField()
    total_amount = models.FloatField(blank=True, null=True)
    party_id = models.FloatField()
    party_type = models.CharField(max_length=30, blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesforce_id = models.FloatField()
    parent_group_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    product_cat_set_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    currency_total_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asf_win_won_top5_mv'


class Asfb05300902PBinLfObject(models.Model):
    object_id = models.FloatField()
    parent_id = models.FloatField(blank=True, null=True)
    application_id = models.FloatField(blank=True, null=True)
    object_name = models.CharField(max_length=60, blank=True, null=True)
    object_description = models.CharField(max_length=240, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    jtf_perz_lf_object_object_id = models.FloatField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb05300902p_bin_lf_object'


class Asfb05300902PBinLfValue(models.Model):
    perz_lf_value_id = models.FloatField()
    profile_id = models.FloatField()
    obj_map_id = models.FloatField(blank=True, null=True)
    attribute_value = models.CharField(max_length=100, blank=True, null=True)
    active_flag = models.CharField(max_length=1, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb05300902p_bin_lf_value'


class Asfb05300902PBinObjMap(models.Model):
    obj_map_id = models.FloatField()
    map_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb05300902p_bin_obj_map'


class Asfb10261245PLfAttrib(models.Model):
    attribute_id = models.FloatField()
    attribute_name = models.CharField(max_length=30, blank=True, null=True)
    attribute_type = models.CharField(max_length=30, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_lf_attrib'


class Asfb10261245PLfObject(models.Model):
    object_id = models.FloatField()
    parent_id = models.FloatField(blank=True, null=True)
    application_id = models.FloatField(blank=True, null=True)
    object_name = models.CharField(max_length=60, blank=True, null=True)
    object_description = models.CharField(max_length=240, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    jtf_perz_lf_object_object_id = models.FloatField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_lf_object'


class Asfb10261245PLfObjectType(models.Model):
    object_type_id = models.FloatField()
    object_type_name = models.CharField(max_length=60, blank=True, null=True)
    object_type_desc = models.CharField(max_length=240, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_lf_object_type'


class Asfb10261245PLfValue(models.Model):
    perz_lf_value_id = models.FloatField()
    profile_id = models.FloatField()
    obj_map_id = models.FloatField(blank=True, null=True)
    attribute_value = models.CharField(max_length=100, blank=True, null=True)
    active_flag = models.CharField(max_length=1, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_lf_value'


class Asfb10261245PObjMap(models.Model):
    obj_map_id = models.FloatField()
    map_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_obj_map'


class Asfb10261245PObjTypeMap(models.Model):
    obj_type_map_id = models.FloatField()
    object_type_id = models.FloatField(blank=True, null=True)
    attribute_id = models.FloatField(blank=True, null=True)
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_obj_type_map'


class Asfb10261245PProfile(models.Model):
    profile_id = models.FloatField()
    profile_name = models.CharField(max_length=60, blank=True, null=True)
    profile_type = models.CharField(max_length=30, blank=True, null=True)
    profile_description = models.CharField(max_length=240, blank=True, null=True)
    active_flag = models.CharField(max_length=1, blank=True, null=True)
    object_version_number = models.FloatField()
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_profile'


class Asfb10261245PProfileAttrib(models.Model):
    profile_attrib_id = models.FloatField()
    profile_id = models.FloatField()
    profile_attribute = models.CharField(max_length=100, blank=True, null=True)
    attribute_type = models.CharField(max_length=100, blank=True, null=True)
    attribute_value = models.CharField(max_length=100, blank=True, null=True)
    created_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'asfb10261245p_profile_attrib'


class AsoBiDiscBukMv(models.Model):
    r = models.TextField(blank=True, null=True)  # This field type is a guess.
    c = models.TextField(blank=True, null=True)  # This field type is a guess.
    mark = models.CharField(max_length=2, blank=True, null=True)
    low = models.FloatField(blank=True, null=True)
    high = models.FloatField(blank=True, null=True)
    short_name = models.CharField(max_length=30, blank=True, null=True)
    bucket_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_disc_buk_mv'


class AsoBiQlinL1Mv(models.Model):
    qrowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    srowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    resource_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    line_amount = models.FloatField(blank=True, null=True)
    sec_line_amount = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    master_id = models.CharField(max_length=25, blank=True, null=True)
    quote_creation_date = models.DateField(blank=True, null=True)
    order_creation_date = models.DateField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qlin_l1_mv'


class AsoBiQlinL2Mv(models.Model):
    umarker = models.CharField(max_length=4, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    master_id = models.CharField(max_length=25, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_number_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qlin_l2_mv'


class AsoBiQlinPcMv(models.Model):
    umarker = models.CharField(max_length=2, blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    category_flag = models.CharField(max_length=1, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    resource_grp_flag = models.CharField(max_length=1, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    master_id = models.CharField(max_length=25, blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    newqot_number_cnt = models.FloatField(blank=True, null=True)
    openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_number_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    convqot_number_cnt = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qlin_pc_mv'


class AsoBiQotAprMv(models.Model):
    umarker = models.CharField(max_length=1, blank=True, null=True)
    parent_resource_grp_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    open_approvals = models.FloatField(blank=True, null=True)
    new_approvals = models.FloatField(blank=True, null=True)
    complete_approvals = models.FloatField(blank=True, null=True)
    approved_approvals = models.FloatField(blank=True, null=True)
    days_for_approval = models.FloatField(blank=True, null=True)
    number_of_approvers = models.FloatField(blank=True, null=True)
    open_approvals_xcnt = models.FloatField(blank=True, null=True)
    new_approvals_xcnt = models.FloatField(blank=True, null=True)
    complete_approvals_xcnt = models.FloatField(blank=True, null=True)
    approved_approvals_xcnt = models.FloatField(blank=True, null=True)
    days_for_approval_xcnt = models.FloatField(blank=True, null=True)
    number_of_approvers_xcnt = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    grp_xid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_apr_mv'


class AsoBiQotAprbMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    open = models.FloatField(blank=True, null=True)
    new = models.FloatField(blank=True, null=True)
    complete = models.FloatField(blank=True, null=True)
    approved = models.FloatField(blank=True, null=True)
    days_for_approval = models.FloatField(blank=True, null=True)
    approvers = models.FloatField(blank=True, null=True)
    approved_xcnt = models.FloatField(blank=True, null=True)
    days_for_approval_xcnt = models.FloatField(blank=True, null=True)
    approvers_xcnt = models.FloatField(blank=True, null=True)
    complete_xcnt = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_aprb_mv'


class AsoBiQotCustMv(models.Model):
    rank_yr = models.FloatField(blank=True, null=True)
    rank_qtr = models.FloatField(blank=True, null=True)
    rank_per = models.FloatField(blank=True, null=True)
    rank_wk = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt_year = models.FloatField(blank=True, null=True)
    convqot_num_year = models.FloatField(blank=True, null=True)
    convqot_amnt_qtr = models.FloatField(blank=True, null=True)
    convqot_num_qtr = models.FloatField(blank=True, null=True)
    convqot_amnt_per = models.FloatField(blank=True, null=True)
    convqot_num_per = models.FloatField(blank=True, null=True)
    convqot_amnt_week = models.FloatField(blank=True, null=True)
    convqot_num_week = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_cust_mv'


class AsoBiQotCustbMv(models.Model):
    umarker = models.CharField(max_length=1, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    newqot_number_cnt = models.FloatField(blank=True, null=True)
    openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_number_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    convqot_number_cnt = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_custb_mv'


class AsoBiQotDiscMv(models.Model):
    umarker = models.CharField(max_length=1, blank=True, null=True)
    low = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    resource_grp_flag = models.CharField(max_length=1, blank=True, null=True)
    new_val = models.FloatField(blank=True, null=True)
    sec_new_val = models.FloatField(blank=True, null=True)
    opn_val = models.FloatField(blank=True, null=True)
    sec_opn_val = models.FloatField(blank=True, null=True)
    conv_val = models.FloatField(blank=True, null=True)
    sec_conv_val = models.FloatField(blank=True, null=True)
    new_val_cnt = models.FloatField(blank=True, null=True)
    sec_new_val_cnt = models.FloatField(blank=True, null=True)
    opn_val_cnt = models.FloatField(blank=True, null=True)
    sec_opn_val_cnt = models.FloatField(blank=True, null=True)
    conv_val_cnt = models.FloatField(blank=True, null=True)
    sec_conv_val_cnt = models.FloatField(blank=True, null=True)
    new_cnt = models.FloatField(blank=True, null=True)
    opn_cnt = models.FloatField(blank=True, null=True)
    conv_cnt = models.FloatField(blank=True, null=True)
    new_cnt_cnt = models.FloatField(blank=True, null=True)
    opn_cnt_cnt = models.FloatField(blank=True, null=True)
    conv_cnt_cnt = models.FloatField(blank=True, null=True)
    all_count = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_disc_mv'


class AsoBiQotDiscbMv(models.Model):
    marker = models.CharField(max_length=4, blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    low = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    new_qot_val = models.FloatField(blank=True, null=True)
    sec_new_qot_val = models.FloatField(blank=True, null=True)
    new_qot_cnt = models.FloatField(blank=True, null=True)
    opn_qot_val = models.FloatField(blank=True, null=True)
    sec_opn_qot_val = models.FloatField(blank=True, null=True)
    opn_qot_cnt = models.FloatField(blank=True, null=True)
    conv_qot_val = models.FloatField(blank=True, null=True)
    sec_conv_qot_val = models.FloatField(blank=True, null=True)
    conv_qot_cnt = models.FloatField(blank=True, null=True)
    new_qot_val_cnt = models.FloatField(blank=True, null=True)
    sec_new_qot_val_cnt = models.FloatField(blank=True, null=True)
    opn_qot_val_cnt = models.FloatField(blank=True, null=True)
    sec_opn_qot_val_cnt = models.FloatField(blank=True, null=True)
    cnt_all = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    grp_id_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_discb_mv'


class AsoBiQotL1Mv(models.Model):
    umarker = models.CharField(max_length=4, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    conv_days = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    conv_days_cnt = models.FloatField(blank=True, null=True)
    newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_number_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_l1_mv'


class AsoBiQotRulMv(models.Model):
    umarker = models.CharField(max_length=1, blank=True, null=True)
    parent_resource_grp_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    rule_id = models.FloatField(blank=True, null=True)
    open_rules = models.FloatField(blank=True, null=True)
    new_rules = models.FloatField(blank=True, null=True)
    open_xrules = models.FloatField(blank=True, null=True)
    new_xrules = models.FloatField(blank=True, null=True)
    rule_xcnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    grp_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_rul_mv'


class AsoBiQotRulbMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    oam_rule_id = models.FloatField(blank=True, null=True)
    open = models.FloatField(blank=True, null=True)
    new = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_rulb_mv'


class AsoBiQotSgMv(models.Model):
    umarker = models.CharField(max_length=1, blank=True, null=True)
    parent_resource_grp_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    resource_grp_flag = models.CharField(max_length=1, blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    conv_days = models.FloatField(blank=True, null=True)
    newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt_cnt = models.FloatField(blank=True, null=True)
    newqot_number_cnt = models.FloatField(blank=True, null=True)
    openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt_cnt = models.FloatField(blank=True, null=True)
    openqot_number_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    sec_convqot_amnt_cnt = models.FloatField(blank=True, null=True)
    convqot_number_cnt = models.FloatField(blank=True, null=True)
    conv_days_cnt = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_qot_sg_mv'


class AsoBiRsgPrntMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    parent_group_id = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_rsg_prnt_mv'


class AsoBiTopQotMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    quote_name = models.CharField(max_length=240, blank=True, null=True)
    quote_number = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    quote_creation_date = models.DateField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    order_creation_date = models.DateField(blank=True, null=True)
    quote_age = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    quote_amnt = models.FloatField(blank=True, null=True)
    sec_quote_amnt = models.FloatField(blank=True, null=True)
    quote_amount_first = models.FloatField(blank=True, null=True)
    sec_quote_amount_first = models.FloatField(blank=True, null=True)
    num_approvers = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=4, blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    year = models.FloatField(blank=True, null=True)
    quarter = models.FloatField(blank=True, null=True)
    period = models.FloatField(blank=True, null=True)
    week = models.FloatField(blank=True, null=True)
    year_rank = models.FloatField(blank=True, null=True)
    quarter_rank = models.FloatField(blank=True, null=True)
    period_rank = models.FloatField(blank=True, null=True)
    week_rank = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_top_qot_mv'


class AsoBiTopQotbMv(models.Model):
    quote_name = models.CharField(max_length=240, blank=True, null=True)
    quote_number = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    quote_creation_date = models.DateField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    order_creation_date = models.DateField(blank=True, null=True)
    quote_age = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    num_approvers = models.FloatField(blank=True, null=True)
    quote_amnt = models.FloatField(blank=True, null=True)
    quote_amount_first = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=4, blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    conversion_rate = models.FloatField(blank=True, null=True)
    sec_conversion_rate = models.FloatField(blank=True, null=True)
    year = models.FloatField(blank=True, null=True)
    quarter = models.FloatField(blank=True, null=True)
    period = models.FloatField(blank=True, null=True)
    week = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_top_qotb_mv'


class AsoBiTopRsgMv(models.Model):
    group_id = models.FloatField()
    gcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aso_bi_top_rsg_mv'


class AwOdpcode(models.Model):
    ps_field = models.IntegerField(db_column='ps#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    gen_field = models.IntegerField(db_column='gen#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    extnum = models.IntegerField(blank=True, null=True)
    awlob = models.BinaryField(blank=True, null=True)
    objname = models.CharField(max_length=256, blank=True, null=True)
    partname = models.CharField(max_length=256, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aw$odpcode'


class AwXwdevkit(models.Model):
    ps_field = models.IntegerField(db_column='ps#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    gen_field = models.IntegerField(db_column='gen#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    extnum = models.IntegerField(blank=True, null=True)
    awlob = models.BinaryField(blank=True, null=True)
    objname = models.CharField(max_length=256, blank=True, null=True)
    partname = models.CharField(max_length=256, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'aw$xwdevkit'


class AwtOnErvFixTab(models.Model):
    awt_dist_id = models.BigIntegerField()
    erv_dist_id = models.BigIntegerField()
    related_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'awt_on_erv_fix_tab'


class BicPSummCcMv(models.Model):
    period_start_date = models.DateField()
    cust_cat = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    recs = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_cc_mv'


class BicPSummCuMv(models.Model):
    period_start_date = models.DateField()
    country = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=60, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    records = models.FloatField(blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_cu_mv'


class BicPSummDtMv(models.Model):
    period_start_date = models.DateField()
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    records = models.FloatField(blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_dt_mv'


class BicPSummMsMv(models.Model):
    period_start_date = models.DateField()
    mkt_seg = models.FloatField(blank=True, null=True)
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    records = models.FloatField(blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_ms_mv'


class BicPSummMv(models.Model):
    period_start_date = models.DateField()
    cust_cat = models.CharField(max_length=30, blank=True, null=True)
    mkt_seg = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=60, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    records = models.FloatField(blank=True, null=True)
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_mv'


class BicPSummOrMv(models.Model):
    period_start_date = models.DateField()
    org_id = models.FloatField(blank=True, null=True)
    avg_satisfaction = models.FloatField(blank=True, null=True)
    count_satisfaction = models.FloatField(blank=True, null=True)
    sum_satisfaction = models.FloatField(blank=True, null=True)
    avg_loyalty = models.FloatField(blank=True, null=True)
    count_loyalty = models.FloatField(blank=True, null=True)
    sum_loyalty = models.FloatField(blank=True, null=True)
    cogs = models.FloatField(blank=True, null=True)
    count_cogs = models.FloatField(blank=True, null=True)
    sales = models.FloatField(blank=True, null=True)
    count_sales = models.FloatField(blank=True, null=True)
    records = models.FloatField(blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_p_summ_or_mv'


class BicPsSummCcMv(models.Model):
    period_start_date = models.DateField()
    cust_cat = models.CharField(max_length=30, blank=True, null=True)
    acquisition = models.FloatField(blank=True, null=True)
    activation = models.FloatField(blank=True, null=True)
    life_cycle = models.FloatField(blank=True, null=True)
    retention = models.FloatField(blank=True, null=True)
    act_year = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    start_date = models.DateField()

    class Meta:
        managed = False
        db_table = 'bic_ps_summ_cc_mv'


class BicPsSummCuMv(models.Model):
    period_start_date = models.DateField()
    country = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=60, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    acquisition = models.FloatField(blank=True, null=True)
    activation = models.FloatField(blank=True, null=True)
    life_cycle = models.FloatField(blank=True, null=True)
    retention = models.FloatField(blank=True, null=True)
    act_year = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    start_date = models.DateField()

    class Meta:
        managed = False
        db_table = 'bic_ps_summ_cu_mv'


class BicPsSummDtMv(models.Model):
    period_start_date = models.DateField()
    acquisition = models.FloatField(blank=True, null=True)
    activation = models.FloatField(blank=True, null=True)
    life_cycle = models.FloatField(blank=True, null=True)
    retention = models.FloatField(blank=True, null=True)
    act_year = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    start_date = models.DateField()

    class Meta:
        managed = False
        db_table = 'bic_ps_summ_dt_mv'


class BicPsSummMsMv(models.Model):
    period_start_date = models.DateField()
    mkt_seg = models.FloatField(blank=True, null=True)
    acquisition = models.FloatField(blank=True, null=True)
    activation = models.FloatField(blank=True, null=True)
    life_cycle = models.FloatField(blank=True, null=True)
    retention = models.FloatField(blank=True, null=True)
    act_year = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    start_date = models.DateField()

    class Meta:
        managed = False
        db_table = 'bic_ps_summ_ms_mv'


class BicPsSummMv(models.Model):
    period_start_date = models.DateField()
    cust_cat = models.CharField(max_length=30, blank=True, null=True)
    mkt_seg = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=60, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    acquisition = models.FloatField(blank=True, null=True)
    activation = models.FloatField(blank=True, null=True)
    life_cycle = models.FloatField(blank=True, null=True)
    retention = models.FloatField(blank=True, null=True)
    start_date = models.DateField()
    act_year = models.FloatField(blank=True, null=True)
    act_quarter = models.FloatField(blank=True, null=True)
    act_half_year = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bic_ps_summ_mv'


class BilBiCalMv(models.Model):
    time_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    report_date = models.DateField(blank=True, null=True)
    record_type_id = models.BigIntegerField(blank=True, null=True)
    flag = models.CharField(max_length=12, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_cal_mv'


class BilBiFst1PgMv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    txn_time_id = models.FloatField(blank=True, null=True)
    txn_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt_s = models.FloatField(blank=True, null=True)
    forecast_amt = models.FloatField(blank=True, null=True)
    forecast_amt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub = models.FloatField(blank=True, null=True)
    forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    opp_forecast_amt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_fst1_pg_mv'


class BilBiFstGMv(models.Model):
    txn_time_id = models.FloatField(blank=True, null=True)
    txn_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    forecast_amt = models.FloatField(blank=True, null=True)
    forecast_amt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub = models.FloatField(blank=True, null=True)
    forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt_s = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_fst_g_mv'


class BilBiFstPgMv(models.Model):
    txn_time_id = models.FloatField(blank=True, null=True)
    txn_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    assign_to_cat = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    forecast_amt = models.FloatField(blank=True, null=True)
    forecast_amt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub = models.FloatField(blank=True, null=True)
    forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt_s = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_fst_pg_mv'


class BilBiGrpCntMv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'bil_bi_grp_cnt_mv'


class BilBiOp11PgMv(models.Model):
    umarker = models.CharField(max_length=3, blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_op11_pg_mv'


class BilBiOp12PgMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_op12_pg_mv'


class BilBiOp21GMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    opty_creation_time_id = models.FloatField(blank=True, null=True)
    opty_close_time_id = models.FloatField(blank=True, null=True)
    opty_ld_conversion_time_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    opty_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    won_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    no_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)
    opty_effective_time_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_op21_g_mv'


class BilBiOp22GMv(models.Model):
    umarker = models.CharField(max_length=3, blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    won_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    no_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_op22_g_mv'


class BilBiOpdtlMv(models.Model):
    opty_creation_time_id = models.FloatField(blank=True, null=True)
    opty_close_time_id = models.FloatField()
    opty_ld_conversion_time_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField()
    salesrep_id = models.FloatField()
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    campaign_object_id = models.FloatField(blank=True, null=True)
    campaign_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_campaign_object_id = models.FloatField(blank=True, null=True)
    child_campaign_object_type = models.CharField(max_length=30, blank=True, null=True)
    opty_id = models.FloatField()
    competitor_id = models.FloatField(blank=True, null=True)
    hdr_source_promotion_id = models.FloatField(blank=True, null=True)
    open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    forecast_rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    sales_credit_amt = models.FloatField(blank=True, null=True)
    sales_credit_amt_xcnt = models.FloatField(blank=True, null=True)
    sales_credit_amt_s = models.FloatField(blank=True, null=True)
    sales_credit_amt_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    new_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    won_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    won_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    no_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr_cnt = models.FloatField(blank=True, null=True)
    nfp_yr_cnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_cnt = models.FloatField(blank=True, null=True)
    nfp_qtr_cnt_s = models.FloatField(blank=True, null=True)
    nfp_per_cnt = models.FloatField(blank=True, null=True)
    nfp_per_cnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_cnt = models.FloatField(blank=True, null=True)
    nfp_wk_cnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)
    lead_number = models.CharField(max_length=30, blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    sales_stage_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    owner_sales_group_id = models.FloatField(blank=True, null=True)
    owner_salesrep_id = models.FloatField(blank=True, null=True)
    opty_amt = models.FloatField(blank=True, null=True)
    opty_amt_s = models.FloatField(blank=True, null=True)
    opty_effective_time_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opdtl_mv'


class BilBiOpldcGMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    report_date_julian = models.FloatField()
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opldc_g_mv'


class BilBiOpldcGcMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)
    grouping_ident = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opldc_gc_mv'


class BilBiOpldcMv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opldc_mv'


class BilBiOplpcGMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    report_date_julian = models.FloatField()
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_oplpc_g_mv'


class BilBiOplpcGcMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)
    grouping_ident = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_oplpc_gc_mv'


class BilBiOplpcMv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    new_leads_xcnt = models.FloatField(blank=True, null=True)
    cnv_leads_xcnt = models.FloatField(blank=True, null=True)
    dead_leads_xcnt = models.FloatField(blank=True, null=True)
    closed_leads_xcnt = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_oplpc_mv'


class BilBiOptyGMv(models.Model):
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    won_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    no_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt_xcnt = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    txn_yr_id = models.FloatField(blank=True, null=True)
    txn_qtr_id = models.FloatField(blank=True, null=True)
    txn_per_id = models.FloatField(blank=True, null=True)
    txn_day_id = models.FloatField(blank=True, null=True)
    txn_wk_id = models.FloatField(blank=True, null=True)
    xgrp = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opty_g_mv'


class BilBiOptyPgMv(models.Model):
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    xgrp = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_opty_pg_mv'


class BilBiPipeGMv(models.Model):
    grp_total_flag = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    pipeline_amt_day_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_week_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_period_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_year_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_xcnt = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    groupid = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_pipe_g_mv'


class BilBiPipeMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    grp_total_flag = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    bucket_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_week_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_period_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_year_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_week_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_period_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_year_xcnt = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    groupid = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_pipe_mv'


class BilBiPipecGMv(models.Model):
    grp_total_flag = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    pipeline_amt_day_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_week_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_period_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_year_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_xcnt = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    groupid = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_pipec_g_mv'


class BilBiPipecWgMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    grp_total_flag = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    bucket_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_week_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_period_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_year_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_week_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_period_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_year_xcnt = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt = models.FloatField(blank=True, null=True)
    pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    pipe_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipe_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_week_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_period_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_quarter_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_year_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_xcnt = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_xcnt_s = models.FloatField(blank=True, null=True)
    groupid = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_pipec_wg_mv'


class BilBiRsGrpMv(models.Model):
    umarker = models.CharField(max_length=10, blank=True, null=True)
    parent_parent_group_id = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_rs_grp_mv'


class BilBiSlsPerf1Mv(models.Model):
    umarker = models.CharField(max_length=11, blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    top_won_week_rank = models.FloatField(blank=True, null=True)
    top_won_period_rank = models.FloatField(blank=True, null=True)
    top_won_quarter_rank = models.FloatField(blank=True, null=True)
    top_won_year_rank = models.FloatField(blank=True, null=True)
    bottom_won_week_rank = models.FloatField(blank=True, null=True)
    bottom_won_period_rank = models.FloatField(blank=True, null=True)
    bottom_won_quarter_rank = models.FloatField(blank=True, null=True)
    bottom_won_year_rank = models.FloatField(blank=True, null=True)
    won_week_last_rank = models.FloatField(blank=True, null=True)
    won_period_last_rank = models.FloatField(blank=True, null=True)
    won_quarter_last_rank = models.FloatField(blank=True, null=True)
    won_year_last_rank = models.FloatField(blank=True, null=True)
    top_winloss_week_rank = models.FloatField(blank=True, null=True)
    top_winloss_period_rank = models.FloatField(blank=True, null=True)
    top_winloss_quarter_rank = models.FloatField(blank=True, null=True)
    top_winloss_year_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_week_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_period_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_quarter_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_year_rank = models.FloatField(blank=True, null=True)
    winloss_week_last_rank = models.FloatField(blank=True, null=True)
    winloss_period_last_rank = models.FloatField(blank=True, null=True)
    winloss_quarter_last_rank = models.FloatField(blank=True, null=True)
    winloss_year_last_rank = models.FloatField(blank=True, null=True)
    top_week_rank = models.FloatField(blank=True, null=True)
    top_period_rank = models.FloatField(blank=True, null=True)
    top_quarter_rank = models.FloatField(blank=True, null=True)
    top_year_rank = models.FloatField(blank=True, null=True)
    bottom_week_rank = models.FloatField(blank=True, null=True)
    bottom_period_rank = models.FloatField(blank=True, null=True)
    bottom_quarter_rank = models.FloatField(blank=True, null=True)
    bottom_year_rank = models.FloatField(blank=True, null=True)
    year_last_rank = models.FloatField(blank=True, null=True)
    quarter_last_rank = models.FloatField(blank=True, null=True)
    period_last_rank = models.FloatField(blank=True, null=True)
    week_last_rank = models.FloatField(blank=True, null=True)
    week_won_amt = models.FloatField(blank=True, null=True)
    period_won_amt = models.FloatField(blank=True, null=True)
    qtr_won_amt = models.FloatField(blank=True, null=True)
    year_won_amt = models.FloatField(blank=True, null=True)
    week_won_amt_s = models.FloatField(blank=True, null=True)
    period_won_amt_s = models.FloatField(blank=True, null=True)
    qtr_won_amt_s = models.FloatField(blank=True, null=True)
    year_won_amt_s = models.FloatField(blank=True, null=True)
    week_booked_amt = models.FloatField(blank=True, null=True)
    period_booked_amt = models.FloatField(blank=True, null=True)
    qtr_booked_amt = models.FloatField(blank=True, null=True)
    year_booked_amt = models.FloatField(blank=True, null=True)
    week_booked_amt_s = models.FloatField(blank=True, null=True)
    period_booked_amt_s = models.FloatField(blank=True, null=True)
    qtr_booked_amt_s = models.FloatField(blank=True, null=True)
    year_booked_amt_s = models.FloatField(blank=True, null=True)
    week_winloss_ratio = models.FloatField(blank=True, null=True)
    period_winloss_ratio = models.FloatField(blank=True, null=True)
    qtr_winloss_ratio = models.FloatField(blank=True, null=True)
    year_winloss_ratio = models.FloatField(blank=True, null=True)
    week_winloss_ratio_s = models.FloatField(blank=True, null=True)
    period_winloss_ratio_s = models.FloatField(blank=True, null=True)
    qtr_winloss_ratio_s = models.FloatField(blank=True, null=True)
    year_winloss_ratio_s = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_sls_perf1_mv'


class BilBiSlsPerfMv(models.Model):
    umarker = models.CharField(max_length=11, blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    top_won_week_rank = models.FloatField(blank=True, null=True)
    top_won_period_rank = models.FloatField(blank=True, null=True)
    top_won_qtr_rank = models.FloatField(blank=True, null=True)
    top_won_year_rank = models.FloatField(blank=True, null=True)
    bottom_won_week_rank = models.FloatField(blank=True, null=True)
    bottom_won_period_rank = models.FloatField(blank=True, null=True)
    bottom_won_qtr_rank = models.FloatField(blank=True, null=True)
    bottom_won_year_rank = models.FloatField(blank=True, null=True)
    won_week_last_rank = models.FloatField(blank=True, null=True)
    won_period_last_rank = models.FloatField(blank=True, null=True)
    won_qtr_last_rank = models.FloatField(blank=True, null=True)
    won_year_last_rank = models.FloatField(blank=True, null=True)
    top_winloss_week_rank = models.FloatField(blank=True, null=True)
    top_winloss_period_rank = models.FloatField(blank=True, null=True)
    top_winloss_qtr_rank = models.FloatField(blank=True, null=True)
    top_winloss_year_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_week_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_period_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_qtr_rank = models.FloatField(blank=True, null=True)
    bottom_winloss_year_rank = models.FloatField(blank=True, null=True)
    winloss_week_last_rank = models.FloatField(blank=True, null=True)
    winloss_period_last_rank = models.FloatField(blank=True, null=True)
    winloss_qtr_last_rank = models.FloatField(blank=True, null=True)
    winloss_year_last_rank = models.FloatField(blank=True, null=True)
    top_booked_week_rank = models.FloatField(blank=True, null=True)
    top_booked_period_rank = models.FloatField(blank=True, null=True)
    top_booked_qtr_rank = models.FloatField(blank=True, null=True)
    top_booked_year_rank = models.FloatField(blank=True, null=True)
    bottom_booked_week_rank = models.FloatField(blank=True, null=True)
    bottom_booked_period_rank = models.FloatField(blank=True, null=True)
    bottom_booked_qtr_rank = models.FloatField(blank=True, null=True)
    bottom_booked_year_rank = models.FloatField(blank=True, null=True)
    booked_year_last_rank = models.FloatField(blank=True, null=True)
    booked_qtr_last_rank = models.FloatField(blank=True, null=True)
    booked_period_last_rank = models.FloatField(blank=True, null=True)
    booked_week_last_rank = models.FloatField(blank=True, null=True)
    won_amt_week = models.FloatField(blank=True, null=True)
    won_amt_period = models.FloatField(blank=True, null=True)
    won_amt_qtr = models.FloatField(blank=True, null=True)
    won_amt_year = models.FloatField(blank=True, null=True)
    won_amt_week_s = models.FloatField(blank=True, null=True)
    won_amt_period_s = models.FloatField(blank=True, null=True)
    won_amt_qtr_s = models.FloatField(blank=True, null=True)
    won_amt_year_s = models.FloatField(blank=True, null=True)
    prev_yr_week_won_amt = models.FloatField(blank=True, null=True)
    prev_per_week_won_amt = models.FloatField(blank=True, null=True)
    prev_yr_period_won_amt = models.FloatField(blank=True, null=True)
    prev_per_period_won_amt = models.FloatField(blank=True, null=True)
    prev_yr_qtr_won_amt = models.FloatField(blank=True, null=True)
    prev_per_qtr_won_amt = models.FloatField(blank=True, null=True)
    prev_yr_year_won_amt = models.FloatField(blank=True, null=True)
    prev_per_year_won_amt = models.FloatField(blank=True, null=True)
    prev_yr_week_won_amt_s = models.FloatField(blank=True, null=True)
    prev_per_week_won_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_period_won_amt_s = models.FloatField(blank=True, null=True)
    prev_per_period_won_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_qtr_won_amt_s = models.FloatField(blank=True, null=True)
    prev_per_qtr_won_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_year_won_amt_s = models.FloatField(blank=True, null=True)
    prev_per_year_won_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_week = models.FloatField(blank=True, null=True)
    booked_amt_period = models.FloatField(blank=True, null=True)
    booked_amt_qtr = models.FloatField(blank=True, null=True)
    booked_amt_year = models.FloatField(blank=True, null=True)
    booked_amt_week_s = models.FloatField(blank=True, null=True)
    booked_amt_period_s = models.FloatField(blank=True, null=True)
    booked_amt_qtr_s = models.FloatField(blank=True, null=True)
    booked_amt_year_s = models.FloatField(blank=True, null=True)
    prev_yr_week_booked_amt = models.FloatField(blank=True, null=True)
    prev_per_week_booked_amt = models.FloatField(blank=True, null=True)
    prev_yr_period_booked_amt = models.FloatField(blank=True, null=True)
    prev_per_period_booked_amt = models.FloatField(blank=True, null=True)
    prev_yr_qtr_booked_amt = models.FloatField(blank=True, null=True)
    prev_per_qtr_booked_amt = models.FloatField(blank=True, null=True)
    prev_yr_year_booked_amt = models.FloatField(blank=True, null=True)
    prev_per_year_booked_amt = models.FloatField(blank=True, null=True)
    prev_yr_week_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_per_week_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_period_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_per_period_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_qtr_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_per_qtr_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_year_booked_amt_s = models.FloatField(blank=True, null=True)
    prev_per_year_booked_amt_s = models.FloatField(blank=True, null=True)
    winloss_ratio_week = models.FloatField(blank=True, null=True)
    winloss_ratio_period = models.FloatField(blank=True, null=True)
    winloss_ratio_qtr = models.FloatField(blank=True, null=True)
    winloss_ratio_year = models.FloatField(blank=True, null=True)
    winloss_ratio_week_s = models.FloatField(blank=True, null=True)
    winloss_ratio_period_s = models.FloatField(blank=True, null=True)
    winloss_ratio_qtr_s = models.FloatField(blank=True, null=True)
    winloss_ratio_year_s = models.FloatField(blank=True, null=True)
    prev_yr_week_wlratio = models.FloatField(blank=True, null=True)
    prev_per_week_wlratio = models.FloatField(blank=True, null=True)
    prev_yr_period_wlratio = models.FloatField(blank=True, null=True)
    prev_per_period_wlratio = models.FloatField(blank=True, null=True)
    prev_yr_qtr_wlratio = models.FloatField(blank=True, null=True)
    prev_per_qtr_wlratio = models.FloatField(blank=True, null=True)
    prev_yr_year_wlratio = models.FloatField(blank=True, null=True)
    prev_per_year_wlratio = models.FloatField(blank=True, null=True)
    prev_yr_week_wlratio_s = models.FloatField(blank=True, null=True)
    prev_per_week_wlratio_s = models.FloatField(blank=True, null=True)
    prev_yr_period_wlratio_s = models.FloatField(blank=True, null=True)
    prev_per_period_wlratio_s = models.FloatField(blank=True, null=True)
    prev_yr_qtr_wlratio_s = models.FloatField(blank=True, null=True)
    prev_per_qtr_wlratio_s = models.FloatField(blank=True, null=True)
    prev_yr_year_wlratio_s = models.FloatField(blank=True, null=True)
    prev_per_year_wlratio_s = models.FloatField(blank=True, null=True)
    frcst_amt_week = models.FloatField(blank=True, null=True)
    frcst_amt_week_s = models.FloatField(blank=True, null=True)
    frcst_amt_period = models.FloatField(blank=True, null=True)
    frcst_amt_period_s = models.FloatField(blank=True, null=True)
    frcst_amt_qtr = models.FloatField(blank=True, null=True)
    frcst_amt_qtr_s = models.FloatField(blank=True, null=True)
    frcst_amt_year = models.FloatField(blank=True, null=True)
    frcst_amt_year_s = models.FloatField(blank=True, null=True)
    prev_yr_year_frcst_amt = models.FloatField(blank=True, null=True)
    prev_yr_year_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_per_year_frcst_amt = models.FloatField(blank=True, null=True)
    prev_per_year_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_qtr_frcst_amt = models.FloatField(blank=True, null=True)
    prev_per_qtr_frcst_amt = models.FloatField(blank=True, null=True)
    prev_yr_qtr_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_per_qtr_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_period_frcst_amt = models.FloatField(blank=True, null=True)
    prev_per_period_frcst_amt = models.FloatField(blank=True, null=True)
    prev_yr_period_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_per_period_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_week_frcst_amt = models.FloatField(blank=True, null=True)
    prev_per_week_frcst_amt = models.FloatField(blank=True, null=True)
    prev_yr_week_frcst_amt_s = models.FloatField(blank=True, null=True)
    prev_per_week_frcst_amt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_qtr = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_qtr_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    prev_yr_year_pip_amt = models.FloatField(blank=True, null=True)
    prev_yr_year_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_per_year_pip_amt = models.FloatField(blank=True, null=True)
    prev_per_year_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_qtr_pip_amt = models.FloatField(blank=True, null=True)
    prev_per_qtr_pip_amt = models.FloatField(blank=True, null=True)
    prev_yr_qtr_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_per_qtr_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_period_pip_amt = models.FloatField(blank=True, null=True)
    prev_per_period_pip_amt = models.FloatField(blank=True, null=True)
    prev_yr_period_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_per_period_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_yr_week_pip_amt = models.FloatField(blank=True, null=True)
    prev_per_week_pip_amt = models.FloatField(blank=True, null=True)
    prev_yr_week_pip_amt_s = models.FloatField(blank=True, null=True)
    prev_per_week_pip_amt_s = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_sls_perf_mv'


class BilBiTopopGMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    year_rank = models.FloatField(blank=True, null=True)
    quarter_rank = models.FloatField(blank=True, null=True)
    period_rank = models.FloatField(blank=True, null=True)
    week_rank = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    opty_id = models.FloatField(blank=True, null=True)
    opty_number = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    sales_stage_id = models.FloatField(blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    opty_close_date = models.DateField(blank=True, null=True)
    opty_status = models.CharField(max_length=14, blank=True, null=True)
    opty_status_code = models.CharField(max_length=30, blank=True, null=True)
    yr = models.FloatField(blank=True, null=True)
    quarter = models.FloatField(blank=True, null=True)
    period = models.FloatField(blank=True, null=True)
    week = models.FloatField(blank=True, null=True)
    opty_amt = models.FloatField(blank=True, null=True)
    opty_amt_s = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_bi_topop_g_mv'


class BilObiFstPgMv(models.Model):
    txn_time_id = models.FloatField(blank=True, null=True)
    txn_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    credit_type_id = models.FloatField(blank=True, null=True)
    forecast_amt = models.FloatField(blank=True, null=True)
    forecast_amt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub = models.FloatField(blank=True, null=True)
    forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_xcnt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    forecast_amt_sub_xcnt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_xcnt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s_xcnt = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_obi_fst_pg_mv'


class BilObiOptyPgMv(models.Model):
    effective_time_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    new_opty_xcnt = models.FloatField(blank=True, null=True)
    new_opty_xcnt_s = models.FloatField(blank=True, null=True)
    won_opty_xcnt = models.FloatField(blank=True, null=True)
    won_opty_xcnt_s = models.FloatField(blank=True, null=True)
    lost_opty_xcnt = models.FloatField(blank=True, null=True)
    lost_opty_xcnt_s = models.FloatField(blank=True, null=True)
    no_opty_xcnt = models.FloatField(blank=True, null=True)
    no_opty_xcnt_s = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt = models.FloatField(blank=True, null=True)
    nfp_yr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt = models.FloatField(blank=True, null=True)
    nfp_qtr_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_per_xcnt = models.FloatField(blank=True, null=True)
    nfp_per_xcnt_s = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt = models.FloatField(blank=True, null=True)
    nfp_wk_xcnt_s = models.FloatField(blank=True, null=True)
    all_xcnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    xgrp = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_obi_opty_pg_mv'


class BilObiPipeGMv(models.Model):
    umarker = models.CharField(max_length=7, blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    rollup_flag = models.CharField(max_length=1, blank=True, null=True)
    pipeline_amt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt = models.FloatField(blank=True, null=True)
    open_amt = models.FloatField(blank=True, null=True)
    period_open_amt = models.FloatField(blank=True, null=True)
    pipeline_amt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_s = models.FloatField(blank=True, null=True)
    open_amt_s = models.FloatField(blank=True, null=True)
    period_open_amt_s = models.FloatField(blank=True, null=True)
    pipeline_amt_xcnt = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_xcnt = models.FloatField(blank=True, null=True)
    open_amt_xcnt = models.FloatField(blank=True, null=True)
    period_open_amt_xcnt = models.FloatField(blank=True, null=True)
    pipeline_amt_xcnt_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_xcnt_s = models.FloatField(blank=True, null=True)
    open_amt_xcnt_s = models.FloatField(blank=True, null=True)
    period_open_amt_xcnt_s = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bil_obi_pipe_g_mv'


class BimIAttrNameMv(models.Model):
    umark = models.CharField(max_length=7, blank=True, null=True)
    id = models.CharField(max_length=40, blank=True, null=True)
    value = models.CharField(max_length=240, blank=True, null=True)
    language = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_attr_name_mv'


class BimIBgtCabMv(models.Model):
    transaction_create_date = models.DateField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_c = models.FloatField(blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_c = models.FloatField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_c = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_c = models.FloatField(blank=True, null=True)
    accrual = models.FloatField(blank=True, null=True)
    accrual_c = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_c = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_c = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_c = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    original_budget_s_c = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    holdback_s_c = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_in_s_c = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    transfer_out_s_c = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    accrual_s_c = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    committed_s_c = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    planned_s_c = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    utilized_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_bgt_cab_mv'


class BimIBgtCatMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_c = models.FloatField(blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_c = models.FloatField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_c = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_c = models.FloatField(blank=True, null=True)
    accrual = models.FloatField(blank=True, null=True)
    accrual_c = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_c = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_c = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_c = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    original_budget_s_c = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    holdback_s_c = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_in_s_c = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    transfer_out_s_c = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    accrual_s_c = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    committed_s_c = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    planned_s_c = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    utilized_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_bgt_cat_mv'


class BimIBgtFctMv(models.Model):
    transaction_create_date = models.DateField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_c = models.FloatField(blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_c = models.FloatField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_c = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_c = models.FloatField(blank=True, null=True)
    accrual = models.FloatField(blank=True, null=True)
    accrual_c = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_c = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_c = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_c = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    original_budget_s_c = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    holdback_s_c = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_in_s_c = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    transfer_out_s_c = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    accrual_s_c = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    committed_s_c = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    planned_s_c = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    utilized_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_bgt_fct_mv'


class BimIBgtLvlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_c = models.FloatField(blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_c = models.FloatField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_c = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_c = models.FloatField(blank=True, null=True)
    accrual = models.FloatField(blank=True, null=True)
    accrual_c = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_c = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_c = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_c = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    original_budget_s_c = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    holdback_s_c = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_in_s_c = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    transfer_out_s_c = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    accrual_s_c = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    committed_s_c = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    planned_s_c = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    utilized_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_bgt_lvl_mv'


class BimICpbChnlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    total_leads_c = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_cpb_chnl_mv'


class BimICpbMetrMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    total_leads_c = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_cpb_metr_mv'


class BimICpbMetsMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    total_leads_c = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_cpb_mets_mv'


class BimICpbRegnMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    total_leads_c = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_cpb_regn_mv'


class BimIExtColMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    arowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    browid = models.TextField(blank=True, null=True)  # This field type is a guess.
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    metric_type = models.CharField(max_length=15, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    activity_type = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    booked_order_amount = models.FloatField(blank=True, null=True)
    booked_order_amount_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount = models.FloatField(blank=True, null=True)
    invoiced_order_amount_c = models.FloatField(blank=True, null=True)
    response_count = models.FloatField(blank=True, null=True)
    response_count_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ext_col_mv'


class BimILdAgeSgMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    dim_id = models.CharField(max_length=7, blank=True, null=True)
    age_3_below = models.FloatField(blank=True, null=True)
    age_3_to_7 = models.FloatField(blank=True, null=True)
    age_8_to_14 = models.FloatField(blank=True, null=True)
    age_15_to_21 = models.FloatField(blank=True, null=True)
    age_22_to_28 = models.FloatField(blank=True, null=True)
    age_29_to_35 = models.FloatField(blank=True, null=True)
    age_36_to_42 = models.FloatField(blank=True, null=True)
    age_42_to_above = models.FloatField(blank=True, null=True)
    c_days = models.FloatField(blank=True, null=True)
    p_days = models.FloatField(blank=True, null=True)
    c_leads_open = models.FloatField(blank=True, null=True)
    p_leads_open = models.FloatField(blank=True, null=True)
    c_adays = models.FloatField(blank=True, null=True)
    p_adays = models.FloatField(blank=True, null=True)
    c_aleads_open = models.FloatField(blank=True, null=True)
    p_aleads_open = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_age_sg_mv'


class BimILdBaseMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_base_mv'


class BimILdCcatMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_ccat_mv'


class BimILdChnlMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_chnl_mv'


class BimILdGenSgMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_gen_sg_mv'


class BimILdGensgTMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)
    dummy23_fr = models.FloatField(blank=True, null=True)
    dummy24_fr = models.FloatField(blank=True, null=True)
    dummy25_fr = models.FloatField(blank=True, null=True)
    dummy26_fr = models.FloatField(blank=True, null=True)
    dummy27_fr = models.FloatField(blank=True, null=True)
    dummy28_fr = models.FloatField(blank=True, null=True)
    dummy29_fr = models.FloatField(blank=True, null=True)
    dummy30_fr = models.FloatField(blank=True, null=True)
    dummy31_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_gensg_t_mv'


class BimILdGhSumMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_gh_sum_mv'


class BimILdHeaderMv(models.Model):
    lead_id = models.FloatField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_touched_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_dead_date = models.DateField(blank=True, null=True)
    lead_closed_date = models.DateField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    qualified_flag = models.CharField(max_length=1, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy_fr1 = models.FloatField(blank=True, null=True)
    customer_flag = models.CharField(max_length=1, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    lead_name = models.CharField(max_length=2000, blank=True, null=True)
    close_reason = models.CharField(max_length=30, blank=True, null=True)
    allc = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_header_mv'


class BimILdQualMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_qual_mv'


class BimILdRegnMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_regn_mv'


class BimILdSrcMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ld_src_mv'


class BimILpAgeSgMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    dim_id = models.CharField(max_length=7, blank=True, null=True)
    age_3_below = models.FloatField(blank=True, null=True)
    age_3_to_7 = models.FloatField(blank=True, null=True)
    age_8_to_14 = models.FloatField(blank=True, null=True)
    age_15_to_21 = models.FloatField(blank=True, null=True)
    age_22_to_28 = models.FloatField(blank=True, null=True)
    age_29_to_35 = models.FloatField(blank=True, null=True)
    age_36_to_42 = models.FloatField(blank=True, null=True)
    age_42_to_above = models.FloatField(blank=True, null=True)
    c_days = models.FloatField(blank=True, null=True)
    p_days = models.FloatField(blank=True, null=True)
    c_leads_open = models.FloatField(blank=True, null=True)
    p_leads_open = models.FloatField(blank=True, null=True)
    c_adays = models.FloatField(blank=True, null=True)
    p_adays = models.FloatField(blank=True, null=True)
    c_aleads_open = models.FloatField(blank=True, null=True)
    p_aleads_open = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_age_sg_mv'


class BimILpBaseMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_base_mv'


class BimILpCcatMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_ccat_mv'


class BimILpChnlMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_chnl_mv'


class BimILpGenSgMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_gen_sg_mv'


class BimILpGensgTMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)
    dummy23_fr = models.FloatField(blank=True, null=True)
    dummy24_fr = models.FloatField(blank=True, null=True)
    dummy25_fr = models.FloatField(blank=True, null=True)
    dummy26_fr = models.FloatField(blank=True, null=True)
    dummy27_fr = models.FloatField(blank=True, null=True)
    dummy28_fr = models.FloatField(blank=True, null=True)
    dummy29_fr = models.FloatField(blank=True, null=True)
    dummy30_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_gensg_t_mv'


class BimILpGhSumMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_gh_sum_mv'


class BimILpItemMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    frowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    srowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lead_id = models.FloatField(blank=True, null=True)
    lead_line_id = models.FloatField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_touched_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_dead_date = models.DateField(blank=True, null=True)
    lead_closed_date = models.DateField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    qualified_flag = models.CharField(max_length=1, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    lead_name = models.CharField(max_length=2000, blank=True, null=True)
    close_reason = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_item_mv'


class BimILpQualMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_qual_mv'


class BimILpRegnMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_regn_mv'


class BimILpSrcMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_a = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_lp_src_mv'


class BimIMktCpbMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_fr = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_fr = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_fr = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_fr = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_fr = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_fr = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_fr = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_fr = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_fr = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    total_leads_fr = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_fr = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_fr = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_fr = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_fr = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_fr = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_fr = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_fr = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_fr = models.FloatField(blank=True, null=True)
    all_count_fr = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_mkt_cpb_mv'


class BimIMktCrplMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    admin_flag = models.CharField(max_length=1, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    total_leads_c = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_cost_s_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    actual_cost_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_mkt_crpl_mv'


class BimIMktFctMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    child_object_status = models.CharField(max_length=30, blank=True, null=True)
    object_purpose = models.CharField(max_length=240, blank=True, null=True)
    child_object_purpose = models.CharField(max_length=240, blank=True, null=True)
    activity_type = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_mkt_fct_mv'


class BimIObjMetrMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_obj_metr_mv'


class BimIObjMetsMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_obj_mets_mv'


class BimIObjNameMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    name = models.CharField(max_length=240, blank=True, null=True)
    language = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_type_mean = models.CharField(max_length=80, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    child_object_usage = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_obj_name_mv'


class BimIOrdColMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    primary_category_id = models.FloatField(blank=True, null=True)
    metric_type = models.CharField(max_length=5, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_c = models.FloatField(blank=True, null=True)
    invoiced_amt_f = models.FloatField(blank=True, null=True)
    invoiced_amt_f_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ord_col_mv'


class BimIOrdIntMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    metric_type = models.CharField(max_length=5, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    category_flag = models.CharField(max_length=1, blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_c = models.FloatField(blank=True, null=True)
    invoiced_amt_f = models.FloatField(blank=True, null=True)
    invoiced_amt_f_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_i_ord_int_mv'


class BimLdCampGhMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_ld_camp_gh_mv'


class BimLdCampSgMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_ld_camp_sg_mv'


class BimLdCampTMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    dummy9_fr = models.FloatField(blank=True, null=True)
    dummy10_fr = models.FloatField(blank=True, null=True)
    dummy11_fr = models.FloatField(blank=True, null=True)
    dummy12_fr = models.FloatField(blank=True, null=True)
    dummy13_fr = models.FloatField(blank=True, null=True)
    dummy14_fr = models.FloatField(blank=True, null=True)
    dummy15_fr = models.FloatField(blank=True, null=True)
    dummy16_fr = models.FloatField(blank=True, null=True)
    dummy17_fr = models.FloatField(blank=True, null=True)
    dummy18_fr = models.FloatField(blank=True, null=True)
    dummy19_fr = models.FloatField(blank=True, null=True)
    dummy20_fr = models.FloatField(blank=True, null=True)
    dummy21_fr = models.FloatField(blank=True, null=True)
    dummy22_fr = models.FloatField(blank=True, null=True)
    dummy23_fr = models.FloatField(blank=True, null=True)
    dummy24_fr = models.FloatField(blank=True, null=True)
    dummy25_fr = models.FloatField(blank=True, null=True)
    dummy26_fr = models.FloatField(blank=True, null=True)
    dummy27_fr = models.FloatField(blank=True, null=True)
    dummy28_fr = models.FloatField(blank=True, null=True)
    dummy29_fr = models.FloatField(blank=True, null=True)
    dummy30_fr = models.FloatField(blank=True, null=True)
    dummy31_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_ld_camp_t_mv'


class BimMktChnlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_chnl_mv'


class BimMktKpiCntMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    orders_booked_amt_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_kpi_cnt_mv'


class BimMktKpiFMv(models.Model):
    transaction_create_date = models.DateField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positivec = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_kpi_f_mv'


class BimMktKpiIntMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    parent_category_id = models.CharField(max_length=4, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    dummy7_fr = models.FloatField(blank=True, null=True)
    dummy8_fr = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_kpi_int_mv'


class BimMktLdCcatMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_ld_ccat_mv'


class BimMktLdChnlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_ld_chnl_mv'


class BimMktLdQualMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_ld_qual_mv'


class BimMktLdSrcMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_ld_src_mv'


class BimMktRegnMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    col_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    leads_qualified_a_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_mkt_regn_mv'


class BimObjChnlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_chnl_mv'


class BimObjLdCcatMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_ld_ccat_mv'


class BimObjLdChnlMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_ld_chnl_mv'


class BimObjLdQualMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_ld_qual_mv'


class BimObjLdSrcMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_ld_src_mv'


class BimObjRegnMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_country_c = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_forecasted_c = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    responses_positive_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_a_c = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_b_c = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_c_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_d_c = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    rank_z_c = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_converted_c = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_conversion_time_c = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    aleads_converted_c = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_conversion_time_c = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_c = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_c = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_changed_c = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_dead_c = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_c = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_c = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_customer_c = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_prospect_c = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_customer_c = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_conv_prospect_c = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_c = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_booked_amt_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_c = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_c = models.FloatField(blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_c = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_c = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_c = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_c = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_c = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    customers_targeted_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_c = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    won_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt_c = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    camp_started_c = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    even_started_c = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_sch_started_c = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_sch_started_c = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_ended_c = models.FloatField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_ended_c = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended_c = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_ended_c = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    registrations_c = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    cancellations_c = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    attendance_c = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    budget_requested_s_c = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_s_c = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    revenue_forecasted_s_c = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_actual_s_c = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    cost_forecasted_s_c = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_actual_s_c = models.FloatField(blank=True, null=True)
    orders_booked_amt_s = models.FloatField(blank=True, null=True)
    booked_order_amount_s_c = models.FloatField(blank=True, null=True)
    orders_invoiced_amt_s = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_c = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_approved_sch_s_c = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_obj_regn_mv'


class BimRCampActBinMv(models.Model):
    schedule_area2 = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    current_count_value = models.FloatField(blank=True, null=True)
    current_started_value = models.FloatField(blank=True, null=True)
    current_ended_value = models.FloatField(blank=True, null=True)
    previous_count_value = models.FloatField(blank=True, null=True)
    previous_started_value = models.FloatField(blank=True, null=True)
    previous_ended_value = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_revenue = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    positive_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_act_bin_mv'


class BimRCampActSummaryMv(models.Model):
    schedule_area2 = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    report_type = models.CharField(max_length=15, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    current_count_value = models.FloatField(blank=True, null=True)
    previous_count_value = models.FloatField(blank=True, null=True)
    campaign_count = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    prev_targeted_customers = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_act_summary_mv'


class BimRCampAgingMv(models.Model):
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    schedule_id = models.FloatField(blank=True, null=True)
    campaign_source_code = models.CharField(max_length=30, blank=True, null=True)
    schedule_source_code = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    campaign_area1 = models.CharField(max_length=30, blank=True, null=True)
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    schedule_area1 = models.CharField(max_length=30, blank=True, null=True)
    schedule_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    campaign_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    campaign_status = models.CharField(max_length=30, blank=True, null=True)
    schedule_status = models.CharField(max_length=30, blank=True, null=True)
    days = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_amt = models.FloatField(blank=True, null=True)
    leads_unqualified = models.FloatField(blank=True, null=True)
    leads_unqualified_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_active = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_active_amt = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_aging_mv'


class BimRCampBudSumMv(models.Model):
    year = models.CharField(max_length=30, blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    campaign_source_code = models.CharField(max_length=30, blank=True, null=True)
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    schedule_activity_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_revenue = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    positive_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    previous_count_value = models.FloatField(blank=True, null=True)
    previous_started_value = models.FloatField(blank=True, null=True)
    previous_ended_value = models.FloatField(blank=True, null=True)
    current_count_value = models.FloatField(blank=True, null=True)
    current_started_value = models.FloatField(blank=True, null=True)
    current_ended_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_bud_sum_mv'


class BimRCampDimAgingMv(models.Model):
    campaign_area1 = models.CharField(max_length=30, blank=True, null=True)
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    schedule_area1 = models.CharField(max_length=30, blank=True, null=True)
    schedule_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    campaign_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    campaign_status = models.CharField(max_length=30, blank=True, null=True)
    schedule_status = models.CharField(max_length=30, blank=True, null=True)
    days = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_amt = models.FloatField(blank=True, null=True)
    leads_unqualified = models.FloatField(blank=True, null=True)
    leads_unqualified_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_active = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_active_amt = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_dim_aging_mv'


class BimRCampDimSumMv(models.Model):
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    schedule_activity_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=5, blank=True, null=True)
    schedule_count = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_amt = models.FloatField(blank=True, null=True)
    leads_unqualified = models.FloatField(blank=True, null=True)
    leads_unqualified_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_active = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_active_amt = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_amt = models.FloatField(blank=True, null=True)
    leads_hot = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    positive_responses = models.FloatField(blank=True, null=True)
    actual_revenue = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    display_type = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_dim_sum_mv'


class BimRCampSummaryMv(models.Model):
    year = models.CharField(max_length=30, blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    schedule_id = models.FloatField(blank=True, null=True)
    campaign_source_code = models.CharField(max_length=30, blank=True, null=True)
    schedule_source_code = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    schedule_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    schedule_activity_type = models.CharField(max_length=30, blank=True, null=True)
    schedule_activity = models.FloatField(blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_revenue = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    positive_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    previous_count_value = models.FloatField(blank=True, null=True)
    previous_started_value = models.FloatField(blank=True, null=True)
    previous_ended_value = models.FloatField(blank=True, null=True)
    current_count_value = models.FloatField(blank=True, null=True)
    current_started_value = models.FloatField(blank=True, null=True)
    current_ended_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_camp_summary_mv'


class BimRCmpSummaryMv(models.Model):
    year = models.CharField(max_length=30, blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    campaign_source_code = models.CharField(max_length=30, blank=True, null=True)
    campaign_area2 = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_cancelled = models.FloatField(blank=True, null=True)
    orders_cancelled_amt = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_revenue = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    positive_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    previous_count_value = models.FloatField(blank=True, null=True)
    previous_started_value = models.FloatField(blank=True, null=True)
    previous_ended_value = models.FloatField(blank=True, null=True)
    current_count_value = models.FloatField(blank=True, null=True)
    current_started_value = models.FloatField(blank=True, null=True)
    current_ended_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_cmp_summary_mv'


class BimREvenDimSumMv(models.Model):
    event_header_area2 = models.CharField(max_length=30, blank=True, null=True)
    event_country = models.CharField(max_length=30, blank=True, null=True)
    event_type = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=5, blank=True, null=True)
    header_count = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    order_amt = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_even_dim_sum_mv'


class BimREvenLisMv(models.Model):
    event_header_id = models.FloatField(blank=True, null=True)
    event_name = models.CharField(max_length=240, blank=True, null=True)
    event_offer_id = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    event_header_area1 = models.CharField(max_length=30, blank=True, null=True)
    event_header_area2 = models.CharField(max_length=30, blank=True, null=True)
    event_country = models.CharField(max_length=30, blank=True, null=True)
    event_type = models.CharField(max_length=30, blank=True, null=True)
    event_offer_type = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    event_venue_id = models.FloatField(blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    order_amt = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_even_lis_mv'


class BimREvenSummaryMv(models.Model):
    event_header_id = models.FloatField(blank=True, null=True)
    event_name = models.CharField(max_length=240, blank=True, null=True)
    event_header_area2 = models.CharField(max_length=30, blank=True, null=True)
    event_country = models.CharField(max_length=30, blank=True, null=True)
    event_type = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    one_off_flag = models.CharField(max_length=1, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_open_amt = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_closed_amt = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)
    opportunity_amt = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    forecasted_cost = models.FloatField(blank=True, null=True)
    forecasted_revenue = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    order_amt = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_even_summary_mv'


class BimRFdDimSumMv(models.Model):
    fund_count = models.FloatField(blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    area1_code = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country_code = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    available_budget = models.FloatField(blank=True, null=True)
    holdback_amt = models.FloatField(blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    total_budget = models.FloatField(blank=True, null=True)
    pre_balance = models.FloatField(blank=True, null=True)
    balance = models.FloatField(blank=True, null=True)
    pre_commited = models.FloatField(blank=True, null=True)
    commited = models.FloatField(blank=True, null=True)
    pre_utilized = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    paid = models.FloatField(blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_fd_dim_sum_mv'


class BimRFdSummaryMv(models.Model):
    fund_id = models.FloatField(blank=True, null=True)
    fund_name = models.CharField(max_length=240, blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    fund_number = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    start_period = models.CharField(max_length=30, blank=True, null=True)
    end_period = models.CharField(max_length=30, blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    area1_code = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country_code = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    holdback_amt = models.FloatField(blank=True, null=True)
    currency_code_fc = models.CharField(max_length=15, blank=True, null=True)
    total_budget = models.FloatField(blank=True, null=True)
    available_budget = models.FloatField(blank=True, null=True)
    pre_balance = models.FloatField(blank=True, null=True)
    balance = models.FloatField(blank=True, null=True)
    pre_commited = models.FloatField(blank=True, null=True)
    commited = models.FloatField(blank=True, null=True)
    pre_utilized = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    paid = models.FloatField(blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_fd_summary_mv'


class BimRFpDimSumMv(models.Model):
    fund_count = models.FloatField(blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    commited_amt = models.FloatField(blank=True, null=True)
    planned_amt = models.FloatField(blank=True, null=True)
    paid_amt = models.FloatField(blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country_code = models.CharField(max_length=30, blank=True, null=True)
    fund_business_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_fp_dim_sum_mv'


class BimRFpSummaryMv(models.Model):
    fund_id = models.FloatField(blank=True, null=True)
    fund_name = models.CharField(max_length=240, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    commited_amt = models.FloatField(blank=True, null=True)
    planned_amt = models.FloatField(blank=True, null=True)
    paid_amt = models.FloatField(blank=True, null=True)
    util_org_id = models.FloatField(blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    area1_code = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country_code = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    fund_business_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_fp_summary_mv'


class BimRIresBinMv(models.Model):
    schedule_region = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    current_pr_count = models.FloatField(blank=True, null=True)
    current_pr_added = models.FloatField(blank=True, null=True)
    previous_pr_count = models.FloatField(blank=True, null=True)
    previous_pr_added = models.FloatField(blank=True, null=True)
    current_converted = models.FloatField(blank=True, null=True)
    previous_converted = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_ires_bin_mv'


class BimRIresSumMv(models.Model):
    schedule_region = models.CharField(max_length=30, blank=True, null=True)
    schedule_country = models.CharField(max_length=30, blank=True, null=True)
    campaign_region = models.CharField(max_length=30, blank=True, null=True)
    campaign_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    schedule_activity_id = models.FloatField(blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    report_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    cost_curr_period = models.FloatField(blank=True, null=True)
    current_pr_count = models.FloatField(blank=True, null=True)
    current_pr_added = models.FloatField(blank=True, null=True)
    previous_pr_count = models.FloatField(blank=True, null=True)
    previous_pr_added = models.FloatField(blank=True, null=True)
    current_converted = models.FloatField(blank=True, null=True)
    previous_converted = models.FloatField(blank=True, null=True)
    campaign_count = models.FloatField(blank=True, null=True)
    forecasted_responses = models.FloatField(blank=True, null=True)
    targeted_customers = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_ires_sum_mv'


class BimRKpiBinMv(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    kpi = models.CharField(max_length=13, blank=True, null=True)
    period_type = models.CharField(max_length=15, blank=True, null=True)
    area1_code = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    cur_value = models.FloatField(blank=True, null=True)
    prev_value = models.FloatField(blank=True, null=True)
    change_value = models.FloatField(blank=True, null=True)
    status_image = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_kpi_bin_mv'


class BimRKpiSummaryMv(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_name = models.CharField(max_length=240, blank=True, null=True)
    object_type = models.CharField(max_length=4, blank=True, null=True)
    one_off_flag = models.CharField(max_length=1, blank=True, null=True)
    period_type = models.CharField(max_length=15, blank=True, null=True)
    area1_code = models.CharField(max_length=30, blank=True, null=True)
    area2_code = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    cost_cur_period = models.FloatField(blank=True, null=True)
    cost_pre_period = models.FloatField(blank=True, null=True)
    leads_cur_period = models.FloatField(blank=True, null=True)
    leads_pre_period = models.FloatField(blank=True, null=True)
    reg_cur_period = models.FloatField(blank=True, null=True)
    reg_pre_period = models.FloatField(blank=True, null=True)
    rev_cur_period = models.FloatField(blank=True, null=True)
    rev_pre_period = models.FloatField(blank=True, null=True)
    res_cur_period = models.FloatField(blank=True, null=True)
    res_pre_period = models.FloatField(blank=True, null=True)
    orders_cur_period = models.FloatField(blank=True, null=True)
    orders_pre_period = models.FloatField(blank=True, null=True)
    aleads_cur_period = models.FloatField(blank=True, null=True)
    aleads_pre_period = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_kpi_summary_mv'


class BimRLeadAgeQuSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    rank_meaning = models.CharField(max_length=240, blank=True, null=True)
    age_0_to_1 = models.FloatField(blank=True, null=True)
    age_2_to_3 = models.FloatField(blank=True, null=True)
    age_3_to_7 = models.FloatField(blank=True, null=True)
    age_8_to_14 = models.FloatField(blank=True, null=True)
    age_15_to_21 = models.FloatField(blank=True, null=True)
    age_22_to_28 = models.FloatField(blank=True, null=True)
    age_29_to_35 = models.FloatField(blank=True, null=True)
    age_36_to_42 = models.FloatField(blank=True, null=True)
    age_43_to_above = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_age_qu_sum_mv'


class BimRLeadAgeSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    group_name = models.CharField(max_length=60, blank=True, null=True)
    age_0_to_1 = models.FloatField(blank=True, null=True)
    age_2_to_3 = models.FloatField(blank=True, null=True)
    age_3_to_7 = models.FloatField(blank=True, null=True)
    age_8_to_14 = models.FloatField(blank=True, null=True)
    age_15_to_21 = models.FloatField(blank=True, null=True)
    age_22_to_28 = models.FloatField(blank=True, null=True)
    age_29_to_35 = models.FloatField(blank=True, null=True)
    age_36_to_42 = models.FloatField(blank=True, null=True)
    age_43_to_above = models.FloatField(blank=True, null=True)
    sage_0_to_1 = models.FloatField(blank=True, null=True)
    sage_2_to_3 = models.FloatField(blank=True, null=True)
    sage_3_to_7 = models.FloatField(blank=True, null=True)
    sage_8_to_14 = models.FloatField(blank=True, null=True)
    sage_15_to_21 = models.FloatField(blank=True, null=True)
    sage_22_to_28 = models.FloatField(blank=True, null=True)
    sage_29_to_35 = models.FloatField(blank=True, null=True)
    sage_36_to_42 = models.FloatField(blank=True, null=True)
    sage_43_to_above = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_age_sum_mv'


class BimRLeadGenSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    group_name = models.CharField(max_length=60, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    leads_total = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_unchanged = models.FloatField(blank=True, null=True)
    leads_assigned = models.FloatField(blank=True, null=True)
    opps_total = models.FloatField(blank=True, null=True)
    opps_open = models.FloatField(blank=True, null=True)
    quotes_total = models.FloatField(blank=True, null=True)
    quotes_open = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    sleads_total = models.FloatField(blank=True, null=True)
    sleads_open = models.FloatField(blank=True, null=True)
    sleads_closed = models.FloatField(blank=True, null=True)
    sleads_new = models.FloatField(blank=True, null=True)
    sleads_dead = models.FloatField(blank=True, null=True)
    sleads_changed = models.FloatField(blank=True, null=True)
    sleads_unchanged = models.FloatField(blank=True, null=True)
    sleads_assigned = models.FloatField(blank=True, null=True)
    sopps_total = models.FloatField(blank=True, null=True)
    sopps_open = models.FloatField(blank=True, null=True)
    squotes_total = models.FloatField(blank=True, null=True)
    squotes_open = models.FloatField(blank=True, null=True)
    sorders = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_gen_sum_mv'


class BimRLeadKpiBinMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    kpi = models.CharField(max_length=13, blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    cur_value = models.FloatField(blank=True, null=True)
    prev_value = models.FloatField(blank=True, null=True)
    change_value = models.FloatField(blank=True, null=True)
    status_image = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_kpi_bin_mv'


class BimRLeadLoSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    leads_total = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_unchanged = models.FloatField(blank=True, null=True)
    leads_assigned = models.FloatField(blank=True, null=True)
    opps_total = models.FloatField(blank=True, null=True)
    opps_open = models.FloatField(blank=True, null=True)
    quotes_total = models.FloatField(blank=True, null=True)
    quotes_open = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_lo_sum_mv'


class BimRLeadQuBinMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    open_flag = models.CharField(max_length=3, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    curr_a = models.FloatField(blank=True, null=True)
    prev_a = models.FloatField(blank=True, null=True)
    curr_b = models.FloatField(blank=True, null=True)
    prev_b = models.FloatField(blank=True, null=True)
    curr_c = models.FloatField(blank=True, null=True)
    prev_c = models.FloatField(blank=True, null=True)
    curr_d = models.FloatField(blank=True, null=True)
    prev_d = models.FloatField(blank=True, null=True)
    curr_e = models.FloatField(blank=True, null=True)
    prev_e = models.FloatField(blank=True, null=True)
    curr_f = models.FloatField(blank=True, null=True)
    prev_f = models.FloatField(blank=True, null=True)
    curr_g = models.FloatField(blank=True, null=True)
    prev_g = models.FloatField(blank=True, null=True)
    curr_h = models.FloatField(blank=True, null=True)
    prev_h = models.FloatField(blank=True, null=True)
    curr_i = models.FloatField(blank=True, null=True)
    prev_i = models.FloatField(blank=True, null=True)
    curr_j = models.FloatField(blank=True, null=True)
    prev_j = models.FloatField(blank=True, null=True)
    curr_others = models.FloatField(blank=True, null=True)
    prev_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_qu_bin_mv'


class BimRLeadQucpSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    curr_a = models.FloatField(blank=True, null=True)
    curr_b = models.FloatField(blank=True, null=True)
    curr_c = models.FloatField(blank=True, null=True)
    curr_d = models.FloatField(blank=True, null=True)
    curr_e = models.FloatField(blank=True, null=True)
    curr_f = models.FloatField(blank=True, null=True)
    curr_g = models.FloatField(blank=True, null=True)
    curr_h = models.FloatField(blank=True, null=True)
    curr_i = models.FloatField(blank=True, null=True)
    curr_j = models.FloatField(blank=True, null=True)
    curr_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_qucp_sum_mv'


class BimRLeadSoBinMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    open_flag = models.CharField(max_length=3, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    curr_a = models.FloatField(blank=True, null=True)
    prev_a = models.FloatField(blank=True, null=True)
    curr_b = models.FloatField(blank=True, null=True)
    prev_b = models.FloatField(blank=True, null=True)
    curr_c = models.FloatField(blank=True, null=True)
    prev_c = models.FloatField(blank=True, null=True)
    curr_d = models.FloatField(blank=True, null=True)
    prev_d = models.FloatField(blank=True, null=True)
    curr_e = models.FloatField(blank=True, null=True)
    prev_e = models.FloatField(blank=True, null=True)
    curr_f = models.FloatField(blank=True, null=True)
    prev_f = models.FloatField(blank=True, null=True)
    curr_g = models.FloatField(blank=True, null=True)
    prev_g = models.FloatField(blank=True, null=True)
    curr_h = models.FloatField(blank=True, null=True)
    prev_h = models.FloatField(blank=True, null=True)
    curr_i = models.FloatField(blank=True, null=True)
    prev_i = models.FloatField(blank=True, null=True)
    curr_j = models.FloatField(blank=True, null=True)
    prev_j = models.FloatField(blank=True, null=True)
    curr_others = models.FloatField(blank=True, null=True)
    prev_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_so_bin_mv'


class BimRLeadSocpSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    curr_a = models.FloatField(blank=True, null=True)
    curr_b = models.FloatField(blank=True, null=True)
    curr_c = models.FloatField(blank=True, null=True)
    curr_d = models.FloatField(blank=True, null=True)
    curr_e = models.FloatField(blank=True, null=True)
    curr_f = models.FloatField(blank=True, null=True)
    curr_g = models.FloatField(blank=True, null=True)
    curr_h = models.FloatField(blank=True, null=True)
    curr_i = models.FloatField(blank=True, null=True)
    curr_j = models.FloatField(blank=True, null=True)
    curr_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_socp_sum_mv'


class BimRLeadStcpSumMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    campaign_name = models.CharField(max_length=240, blank=True, null=True)
    region = models.CharField(max_length=30, blank=True, null=True)
    country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=7, blank=True, null=True)
    curr_a = models.FloatField(blank=True, null=True)
    curr_b = models.FloatField(blank=True, null=True)
    curr_c = models.FloatField(blank=True, null=True)
    curr_d = models.FloatField(blank=True, null=True)
    curr_e = models.FloatField(blank=True, null=True)
    curr_f = models.FloatField(blank=True, null=True)
    curr_g = models.FloatField(blank=True, null=True)
    curr_h = models.FloatField(blank=True, null=True)
    curr_i = models.FloatField(blank=True, null=True)
    curr_j = models.FloatField(blank=True, null=True)
    curr_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_lead_stcp_sum_mv'


class BimRLimpCampSumMv(models.Model):
    parent_object_id = models.FloatField(blank=True, null=True)
    parent_object_name = models.CharField(max_length=240, blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=5, blank=True, null=True)
    leads_valid = models.FloatField(blank=True, null=True)
    leads_invalid = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_added = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_limp_camp_sum_mv'


class BimRLimpErrorSumMv(models.Model):
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    failure_reason = models.CharField(max_length=2000, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=5, blank=True, null=True)
    leads_invalid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_limp_error_sum_mv'


class BimRLimpRegDimMv(models.Model):
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=9, blank=True, null=True)
    display_type = models.CharField(max_length=5, blank=True, null=True)
    leads_valid = models.FloatField(blank=True, null=True)
    leads_invalid = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_added = models.FloatField(blank=True, null=True)
    prev_leads_valid = models.FloatField(blank=True, null=True)
    prev_leads_invalid = models.FloatField(blank=True, null=True)
    prev_leads_new = models.FloatField(blank=True, null=True)
    prev_leads_added = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_limp_reg_dim_mv'


class BimRRespCont(models.Model):
    response_region = models.CharField(max_length=30, blank=True, null=True)
    response_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    curr_imp_value = models.FloatField(blank=True, null=True)
    prev_imp_value = models.FloatField(blank=True, null=True)
    curr_invalid_value = models.FloatField(blank=True, null=True)
    prev_invalid_value = models.FloatField(blank=True, null=True)
    a = models.FloatField(blank=True, null=True)
    b = models.FloatField(blank=True, null=True)
    c = models.FloatField(blank=True, null=True)
    d = models.FloatField(blank=True, null=True)
    e = models.FloatField(blank=True, null=True)
    f = models.FloatField(blank=True, null=True)
    g = models.FloatField(blank=True, null=True)
    h = models.FloatField(blank=True, null=True)
    i = models.FloatField(blank=True, null=True)
    j = models.FloatField(blank=True, null=True)
    other_responses = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_resp_cont'


class BimRRespObjSumMv(models.Model):
    response_region = models.CharField(max_length=30, blank=True, null=True)
    response_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    object_name = models.CharField(max_length=240, blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    curr_imp_value = models.FloatField(blank=True, null=True)
    curr_invalid_value = models.FloatField(blank=True, null=True)
    a = models.FloatField(blank=True, null=True)
    b = models.FloatField(blank=True, null=True)
    c = models.FloatField(blank=True, null=True)
    d = models.FloatField(blank=True, null=True)
    e = models.FloatField(blank=True, null=True)
    f = models.FloatField(blank=True, null=True)
    g = models.FloatField(blank=True, null=True)
    h = models.FloatField(blank=True, null=True)
    i = models.FloatField(blank=True, null=True)
    j = models.FloatField(blank=True, null=True)
    other_responses = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_resp_obj_sum_mv'


class BimRRespRsn(models.Model):
    response_region = models.CharField(max_length=30, blank=True, null=True)
    response_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    invalid_reason = models.CharField(max_length=30, blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    invalid_responses = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_resp_rsn'


class BimRRespRsnSumMv(models.Model):
    response_region = models.CharField(max_length=30, blank=True, null=True)
    response_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    invalid_reason = models.CharField(max_length=30, blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    invalid_responses = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_resp_rsn_sum_mv'


class BimRRespSumMv(models.Model):
    response_region = models.CharField(max_length=30, blank=True, null=True)
    response_country = models.CharField(max_length=30, blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    aggregate_by = models.CharField(max_length=30, blank=True, null=True)
    display_type = models.CharField(max_length=30, blank=True, null=True)
    year = models.CharField(max_length=30, blank=True, null=True)
    qtr = models.CharField(max_length=30, blank=True, null=True)
    month = models.CharField(max_length=30, blank=True, null=True)
    month_order = models.FloatField(blank=True, null=True)
    curr_imp_value = models.FloatField(blank=True, null=True)
    prev_imp_value = models.FloatField(blank=True, null=True)
    curr_invalid_value = models.FloatField(blank=True, null=True)
    prev_invalid_value = models.FloatField(blank=True, null=True)
    a = models.FloatField(blank=True, null=True)
    b = models.FloatField(blank=True, null=True)
    c = models.FloatField(blank=True, null=True)
    d = models.FloatField(blank=True, null=True)
    e = models.FloatField(blank=True, null=True)
    f = models.FloatField(blank=True, null=True)
    g = models.FloatField(blank=True, null=True)
    h = models.FloatField(blank=True, null=True)
    i = models.FloatField(blank=True, null=True)
    j = models.FloatField(blank=True, null=True)
    other_responses = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_resp_sum_mv'


class BimRWeeklyLoMv(models.Model):
    rep_day = models.DateField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    opportunities = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_r_weekly_lo_mv'


class BimSgmtActBMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    schedule_purpose = models.CharField(max_length=240, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    activities_count = models.FloatField(blank=True, null=True)
    responses = models.FloatField(blank=True, null=True)
    resp_cnt = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_act_b_mv'


class BimSgmtActChMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    activities_count = models.FloatField(blank=True, null=True)
    activities_count_c = models.FloatField(blank=True, null=True)
    responses = models.FloatField(blank=True, null=True)
    responses_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_act_ch_mv'


class BimSgmtActHMv(models.Model):
    segment_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    schedule_start_date = models.DateField(blank=True, null=True)
    schedule_purpose = models.CharField(max_length=240, blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_act_h_mv'


class BimSgmtActMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    activities_count = models.FloatField(blank=True, null=True)
    activities_count_c = models.FloatField(blank=True, null=True)
    responses = models.FloatField(blank=True, null=True)
    responses_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_act_mv'


class BimSgmtActShMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    category_id_c = models.FloatField(blank=True, null=True)
    activities_count = models.FloatField(blank=True, null=True)
    activities_count_c = models.FloatField(blank=True, null=True)
    responses = models.FloatField(blank=True, null=True)
    responses_c = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_c = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_act_sh_mv'


class BimSgmtValBMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    acquired_customers = models.FloatField(blank=True, null=True)
    total_customers = models.FloatField(blank=True, null=True)
    lost_customers = models.FloatField(blank=True, null=True)
    segment_size = models.FloatField(blank=True, null=True)
    segement_size_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    booked_count = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_c = models.FloatField(blank=True, null=True)
    revenue_s = models.FloatField(blank=True, null=True)
    revenue_s_c = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_val_b_mv'


class BimSgmtValFMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    acquired_customers = models.FloatField(blank=True, null=True)
    total_customers = models.FloatField(blank=True, null=True)
    lost_customers = models.FloatField(blank=True, null=True)
    segment_size = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_count = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_s = models.FloatField(blank=True, null=True)
    acquired_customers_c = models.FloatField(blank=True, null=True)
    total_customers_c = models.FloatField(blank=True, null=True)
    lost_customers_c = models.FloatField(blank=True, null=True)
    segment_size_c = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    booked_count_c = models.FloatField(blank=True, null=True)
    revenue_c = models.FloatField(blank=True, null=True)
    revenue_s_c = models.FloatField(blank=True, null=True)
    dummy1_fr = models.FloatField(blank=True, null=True)
    dummy2_fr = models.FloatField(blank=True, null=True)
    dummy3_fr = models.FloatField(blank=True, null=True)
    dummy4_fr = models.FloatField(blank=True, null=True)
    dummy5_fr = models.FloatField(blank=True, null=True)
    dummy6_fr = models.FloatField(blank=True, null=True)
    all_c = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bim_sgmt_val_f_mv'


class BivActHSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    vbh_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    vbh_parent_category_id = models.FloatField(blank=True, null=True)
    vbh_child_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    first_opened_count = models.FloatField(blank=True, null=True)
    reopened_count = models.FloatField(blank=True, null=True)
    closed_count = models.FloatField(blank=True, null=True)
    mv_first_opened_count = models.FloatField(blank=True, null=True)
    mv_reopened_count = models.FloatField(blank=True, null=True)
    mv_closed_count = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_act_h_sum_mv'


class BivActSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    owner_group_id = models.FloatField(blank=True, null=True)
    sr_creation_channel = models.CharField(max_length=50, blank=True, null=True)
    first_opened_count = models.FloatField(blank=True, null=True)
    reopened_count = models.FloatField(blank=True, null=True)
    closed_count = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_first_opened_count = models.FloatField(blank=True, null=True)
    mv_reopened_count = models.FloatField(blank=True, null=True)
    mv_closed_count = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_act_sum_mv'


class BivBAgeHSumMv(models.Model):
    report_date = models.DateField()
    incident_type_id = models.FloatField(blank=True, null=True)
    vbh_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    vbh_parent_category_id = models.FloatField(blank=True, null=True)
    vbh_child_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    resolved_flag = models.CharField(max_length=1, blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    total_backlog_age = models.FloatField(blank=True, null=True)
    backlog_age_b1 = models.FloatField(blank=True, null=True)
    backlog_age_b2 = models.FloatField(blank=True, null=True)
    backlog_age_b3 = models.FloatField(blank=True, null=True)
    backlog_age_b4 = models.FloatField(blank=True, null=True)
    backlog_age_b5 = models.FloatField(blank=True, null=True)
    backlog_age_b6 = models.FloatField(blank=True, null=True)
    backlog_age_b7 = models.FloatField(blank=True, null=True)
    backlog_age_b8 = models.FloatField(blank=True, null=True)
    backlog_age_b9 = models.FloatField(blank=True, null=True)
    backlog_age_b10 = models.FloatField(blank=True, null=True)
    escalated_count = models.FloatField(blank=True, null=True)
    total_escalated_age = models.FloatField(blank=True, null=True)
    escalated_age_b1 = models.FloatField(blank=True, null=True)
    escalated_age_b2 = models.FloatField(blank=True, null=True)
    escalated_age_b3 = models.FloatField(blank=True, null=True)
    escalated_age_b4 = models.FloatField(blank=True, null=True)
    escalated_age_b5 = models.FloatField(blank=True, null=True)
    escalated_age_b6 = models.FloatField(blank=True, null=True)
    escalated_age_b7 = models.FloatField(blank=True, null=True)
    escalated_age_b8 = models.FloatField(blank=True, null=True)
    escalated_age_b9 = models.FloatField(blank=True, null=True)
    escalated_age_b10 = models.FloatField(blank=True, null=True)
    unowned_count = models.FloatField(blank=True, null=True)
    total_unowned_age = models.FloatField(blank=True, null=True)
    unowned_age_b1 = models.FloatField(blank=True, null=True)
    unowned_age_b2 = models.FloatField(blank=True, null=True)
    unowned_age_b3 = models.FloatField(blank=True, null=True)
    unowned_age_b4 = models.FloatField(blank=True, null=True)
    unowned_age_b5 = models.FloatField(blank=True, null=True)
    unowned_age_b6 = models.FloatField(blank=True, null=True)
    unowned_age_b7 = models.FloatField(blank=True, null=True)
    unowned_age_b8 = models.FloatField(blank=True, null=True)
    unowned_age_b9 = models.FloatField(blank=True, null=True)
    unowned_age_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_b_age_h_sum_mv'


class BivBacHSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    vbh_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    vbh_parent_category_id = models.FloatField(blank=True, null=True)
    vbh_child_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    resolved_flag = models.CharField(max_length=1, blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    escalated_count = models.FloatField(blank=True, null=True)
    unowned_count = models.FloatField(blank=True, null=True)
    mv_backlog_count = models.FloatField(blank=True, null=True)
    mv_escalated_count = models.FloatField(blank=True, null=True)
    mv_unowned_count = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_bac_h_sum_mv'


class BivBacSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    owner_group_id = models.FloatField(blank=True, null=True)
    incident_status_id = models.FloatField(blank=True, null=True)
    resolved_flag = models.CharField(max_length=1, blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    escalated_count = models.FloatField(blank=True, null=True)
    unowned_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_backlog_count = models.FloatField(blank=True, null=True)
    mv_escalated_count = models.FloatField(blank=True, null=True)
    mv_unowned_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_bac_sum_mv'


class BivCloHSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    vbh_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    vbh_parent_category_id = models.FloatField(blank=True, null=True)
    vbh_child_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    closed_count = models.FloatField(blank=True, null=True)
    total_time_to_close = models.FloatField(blank=True, null=True)
    time_to_close_b1 = models.FloatField(blank=True, null=True)
    time_to_close_b2 = models.FloatField(blank=True, null=True)
    time_to_close_b3 = models.FloatField(blank=True, null=True)
    time_to_close_b4 = models.FloatField(blank=True, null=True)
    time_to_close_b5 = models.FloatField(blank=True, null=True)
    time_to_close_b6 = models.FloatField(blank=True, null=True)
    time_to_close_b7 = models.FloatField(blank=True, null=True)
    time_to_close_b8 = models.FloatField(blank=True, null=True)
    time_to_close_b9 = models.FloatField(blank=True, null=True)
    time_to_close_b10 = models.FloatField(blank=True, null=True)
    mv_closed_count = models.FloatField(blank=True, null=True)
    mv_total_time_to_close = models.FloatField(blank=True, null=True)
    mv_time_to_close_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b10 = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_clo_h_sum_mv'


class BivCloSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    owner_group_id = models.FloatField(blank=True, null=True)
    sr_creation_channel = models.CharField(max_length=50, blank=True, null=True)
    resolution_code = models.CharField(max_length=50, blank=True, null=True)
    closed_count = models.FloatField(blank=True, null=True)
    total_time_to_close = models.FloatField(blank=True, null=True)
    time_to_close_b1 = models.FloatField(blank=True, null=True)
    time_to_close_b2 = models.FloatField(blank=True, null=True)
    time_to_close_b3 = models.FloatField(blank=True, null=True)
    time_to_close_b4 = models.FloatField(blank=True, null=True)
    time_to_close_b5 = models.FloatField(blank=True, null=True)
    time_to_close_b6 = models.FloatField(blank=True, null=True)
    time_to_close_b7 = models.FloatField(blank=True, null=True)
    time_to_close_b8 = models.FloatField(blank=True, null=True)
    time_to_close_b9 = models.FloatField(blank=True, null=True)
    time_to_close_b10 = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_total_time_to_close = models.FloatField(blank=True, null=True)
    mv_time_to_close_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_close_b10 = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_clo_sum_mv'


class BivResHSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    vbh_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    vbh_parent_category_id = models.FloatField(blank=True, null=True)
    vbh_child_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    resolution_count = models.FloatField(blank=True, null=True)
    total_time_to_resolution = models.FloatField(blank=True, null=True)
    time_to_resolution_b1 = models.FloatField(blank=True, null=True)
    time_to_resolution_b2 = models.FloatField(blank=True, null=True)
    time_to_resolution_b3 = models.FloatField(blank=True, null=True)
    time_to_resolution_b4 = models.FloatField(blank=True, null=True)
    time_to_resolution_b5 = models.FloatField(blank=True, null=True)
    time_to_resolution_b6 = models.FloatField(blank=True, null=True)
    time_to_resolution_b7 = models.FloatField(blank=True, null=True)
    time_to_resolution_b8 = models.FloatField(blank=True, null=True)
    time_to_resolution_b9 = models.FloatField(blank=True, null=True)
    time_to_resolution_b10 = models.FloatField(blank=True, null=True)
    mv_resolution_count = models.FloatField(blank=True, null=True)
    mv_total_time_to_resolution = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b10 = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_res_h_sum_mv'


class BivResSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    owner_group_id = models.FloatField(blank=True, null=True)
    sr_creation_channel = models.CharField(max_length=50, blank=True, null=True)
    resolution_code = models.CharField(max_length=50, blank=True, null=True)
    resolution_count = models.FloatField(blank=True, null=True)
    total_time_to_resolution = models.FloatField(blank=True, null=True)
    time_to_resolution_b1 = models.FloatField(blank=True, null=True)
    time_to_resolution_b2 = models.FloatField(blank=True, null=True)
    time_to_resolution_b3 = models.FloatField(blank=True, null=True)
    time_to_resolution_b4 = models.FloatField(blank=True, null=True)
    time_to_resolution_b5 = models.FloatField(blank=True, null=True)
    time_to_resolution_b6 = models.FloatField(blank=True, null=True)
    time_to_resolution_b7 = models.FloatField(blank=True, null=True)
    time_to_resolution_b8 = models.FloatField(blank=True, null=True)
    time_to_resolution_b9 = models.FloatField(blank=True, null=True)
    time_to_resolution_b10 = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_total_time_to_resolution = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_resolution_b10 = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'biv_res_sum_mv'


class BixAiCallDetailsMv(models.Model):
    g_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=4, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    period_start_date = models.DateField(blank=True, null=True)
    period_start_time = models.CharField(max_length=5, blank=True, null=True)
    media_item_type = models.CharField(max_length=80, blank=True, null=True)
    classification_value = models.CharField(max_length=64, blank=True, null=True)
    dnis_name = models.CharField(max_length=30, blank=True, null=True)
    server_group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    outcome_id = models.FloatField(blank=True, null=True)
    result_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    call_calls_offered_total = models.FloatField(blank=True, null=True)
    calls_offered_total_xcnt = models.FloatField(blank=True, null=True)
    call_calls_offered_above_th = models.FloatField(blank=True, null=True)
    calls_offered_above_th_xcnt = models.FloatField(blank=True, null=True)
    call_calls_handled_total = models.FloatField(blank=True, null=True)
    calls_handled_total_xcnt = models.FloatField(blank=True, null=True)
    call_calls_handled_above_th = models.FloatField(blank=True, null=True)
    calls_handled_above_th_xcnt = models.FloatField(blank=True, null=True)
    call_calls_abandoned = models.FloatField(blank=True, null=True)
    calls_abandoned_xcnt = models.FloatField(blank=True, null=True)
    call_calls_transferred = models.FloatField(blank=True, null=True)
    calls_transferred_xcnt = models.FloatField(blank=True, null=True)
    call_ivr_time = models.FloatField(blank=True, null=True)
    ivr_time_xcnt = models.FloatField(blank=True, null=True)
    call_route_time = models.FloatField(blank=True, null=True)
    route_time_xcnt = models.FloatField(blank=True, null=True)
    call_queue_time = models.FloatField(blank=True, null=True)
    queue_time_xcnt = models.FloatField(blank=True, null=True)
    call_tot_queue_to_abandon = models.FloatField(blank=True, null=True)
    tot_queue_to_abandon_xcnt = models.FloatField(blank=True, null=True)
    call_tot_queue_to_answer = models.FloatField(blank=True, null=True)
    tot_queue_to_answer_xcnt = models.FloatField(blank=True, null=True)
    call_talk_time = models.FloatField(blank=True, null=True)
    talk_time_xcnt = models.FloatField(blank=True, null=True)
    call_cont_calls_offered_na = models.FloatField(blank=True, null=True)
    cont_calls_offered_na_xcnt = models.FloatField(blank=True, null=True)
    call_cont_calls_handled_tot_na = models.FloatField(blank=True, null=True)
    cont_calls_handled_tot_na_xcnt = models.FloatField(blank=True, null=True)
    agent_talk_time_nac = models.FloatField(blank=True, null=True)
    talk_time_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_wrap_time_nac = models.FloatField(blank=True, null=True)
    wrap_time_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_tran_conf_to_nac = models.FloatField(blank=True, null=True)
    calls_tran_conf_to_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_handled_total = models.FloatField(blank=True, null=True)
    agent_handled_total_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_handled_above_th = models.FloatField(blank=True, null=True)
    agent_handled_above_th_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_answered_by_goal = models.FloatField(blank=True, null=True)
    agent_answered_by_goal_xcnt = models.FloatField(blank=True, null=True)
    agent_sr_created = models.FloatField(blank=True, null=True)
    sr_created_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_created = models.FloatField(blank=True, null=True)
    leads_created_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_amount = models.FloatField(blank=True, null=True)
    leads_amount_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_converted_to_opp = models.FloatField(blank=True, null=True)
    leads_converted_to_opp_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_created = models.FloatField(blank=True, null=True)
    opportunities_created_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_won = models.FloatField(blank=True, null=True)
    opportunities_won_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_won_amount = models.FloatField(blank=True, null=True)
    opportunities_won_amount_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_cross_sold = models.FloatField(blank=True, null=True)
    opportunities_cross_sold_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_up_sold = models.FloatField(blank=True, null=True)
    opportunities_up_sold_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_declined = models.FloatField(blank=True, null=True)
    opportunities_declined_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_lost = models.FloatField(blank=True, null=True)
    opportunities_lost_xcnt = models.FloatField(blank=True, null=True)
    agent_preview_time = models.FloatField(blank=True, null=True)
    preview_time_xcnt = models.FloatField(blank=True, null=True)
    agentcall_orr_count = models.FloatField(blank=True, null=True)
    call_orr_count_xcnt = models.FloatField(blank=True, null=True)
    agentcall_pr_count = models.FloatField(blank=True, null=True)
    call_pr_count_xcnt = models.FloatField(blank=True, null=True)
    agent_cont_calls_hand_na = models.FloatField(blank=True, null=True)
    cont_calls_hand_na_xcnt = models.FloatField(blank=True, null=True)
    agent_cont_calls_tc_na = models.FloatField(blank=True, null=True)
    cont_calls_tc_na_xcnt = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bix_ai_call_details_mv'


class BixAoCallDetailsMv(models.Model):
    g_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=7, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    period_start_date = models.DateField(blank=True, null=True)
    server_group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    campaign_id = models.FloatField(blank=True, null=True)
    schedule_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    dialing_method = models.CharField(max_length=30, blank=True, null=True)
    outcome_id = models.FloatField(blank=True, null=True)
    result_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    call_calls_offered_total = models.FloatField(blank=True, null=True)
    calls_offered_total_xcnt = models.FloatField(blank=True, null=True)
    call_calls_offered_above_th = models.FloatField(blank=True, null=True)
    calls_offered_above_th_xcnt = models.FloatField(blank=True, null=True)
    call_calls_handled_total = models.FloatField(blank=True, null=True)
    calls_handled_total_xcnt = models.FloatField(blank=True, null=True)
    call_calls_handled_above_th = models.FloatField(blank=True, null=True)
    calls_handled_above_th_xcnt = models.FloatField(blank=True, null=True)
    call_calls_abandoned = models.FloatField(blank=True, null=True)
    calls_abandoned_xcnt = models.FloatField(blank=True, null=True)
    call_calls_abandoned_us = models.FloatField(blank=True, null=True)
    calls_abandoned_us_xcnt = models.FloatField(blank=True, null=True)
    call_calls_transferred = models.FloatField(blank=True, null=True)
    calls_transferred_xcnt = models.FloatField(blank=True, null=True)
    call_ivr_time = models.FloatField(blank=True, null=True)
    ivr_time_xcnt = models.FloatField(blank=True, null=True)
    call_route_time = models.FloatField(blank=True, null=True)
    route_time_xcnt = models.FloatField(blank=True, null=True)
    call_queue_time = models.FloatField(blank=True, null=True)
    queue_time_xcnt = models.FloatField(blank=True, null=True)
    call_tot_queue_to_abandon = models.FloatField(blank=True, null=True)
    tot_queue_to_abandon_xcnt = models.FloatField(blank=True, null=True)
    call_tot_queue_to_answer = models.FloatField(blank=True, null=True)
    tot_queue_to_answer_xcnt = models.FloatField(blank=True, null=True)
    call_talk_time = models.FloatField(blank=True, null=True)
    talk_time_xcnt = models.FloatField(blank=True, null=True)
    call_cont_calls_offered_na = models.FloatField(blank=True, null=True)
    cont_calls_offered_na_xcnt = models.FloatField(blank=True, null=True)
    call_cont_calls_handled_tot_na = models.FloatField(blank=True, null=True)
    cont_calls_handled_tot_na_xcnt = models.FloatField(blank=True, null=True)
    agent_talk_time_nac = models.FloatField(blank=True, null=True)
    talk_time_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_wrap_time_nac = models.FloatField(blank=True, null=True)
    wrap_time_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_tran_conf_to_nac = models.FloatField(blank=True, null=True)
    calls_tran_conf_to_nac_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_handled_total = models.FloatField(blank=True, null=True)
    agent_handled_total_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_handled_above_th = models.FloatField(blank=True, null=True)
    agent_handled_above_th_xcnt = models.FloatField(blank=True, null=True)
    agent_calls_answered_by_goal = models.FloatField(blank=True, null=True)
    agent_answered_by_goal_xcnt = models.FloatField(blank=True, null=True)
    agent_sr_created = models.FloatField(blank=True, null=True)
    sr_created_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_created = models.FloatField(blank=True, null=True)
    leads_created_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_amount = models.FloatField(blank=True, null=True)
    leads_amount_xcnt = models.FloatField(blank=True, null=True)
    agent_leads_converted_to_opp = models.FloatField(blank=True, null=True)
    leads_converted_to_opp_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_created = models.FloatField(blank=True, null=True)
    opportunities_created_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_won = models.FloatField(blank=True, null=True)
    opportunities_won_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_won_amount = models.FloatField(blank=True, null=True)
    opportunities_won_amount_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_cross_sold = models.FloatField(blank=True, null=True)
    opportunities_cross_sold_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_up_sold = models.FloatField(blank=True, null=True)
    opportunities_up_sold_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_declined = models.FloatField(blank=True, null=True)
    opportunities_declined_xcnt = models.FloatField(blank=True, null=True)
    agent_opportunities_lost = models.FloatField(blank=True, null=True)
    opportunities_lost_xcnt = models.FloatField(blank=True, null=True)
    agent_preview_time = models.FloatField(blank=True, null=True)
    preview_time_xcnt = models.FloatField(blank=True, null=True)
    agentcall_orr_count = models.FloatField(blank=True, null=True)
    call_orr_count_xcnt = models.FloatField(blank=True, null=True)
    agentcall_pr_count = models.FloatField(blank=True, null=True)
    call_pr_count_xcnt = models.FloatField(blank=True, null=True)
    agentcall_contact_count = models.FloatField(blank=True, null=True)
    call_contact_count_xcnt = models.FloatField(blank=True, null=True)
    agent_cont_calls_hand_na = models.FloatField(blank=True, null=True)
    cont_calls_hand_na_xcnt = models.FloatField(blank=True, null=True)
    agent_cont_calls_tc_na = models.FloatField(blank=True, null=True)
    cont_calls_tc_na_xcnt = models.FloatField(blank=True, null=True)
    xcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bix_ao_call_details_mv'


class BixCallPrespMv(models.Model):
    source_code_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField()
    response_count = models.FloatField(blank=True, null=True)
    response_count_c = models.FloatField(blank=True, null=True)
    all_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bix_call_presp_mv'


class BixEmailDetailsMv(models.Model):
    time_id = models.FloatField()
    period_type_id = models.FloatField()
    period_start_date = models.DateField()
    email_account_id = models.FloatField()
    email_classification_id = models.FloatField()
    agent_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    outcome_id = models.FloatField(blank=True, null=True)
    result_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    g_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=7, blank=True, null=True)
    emails_offered_in_period = models.FloatField(blank=True, null=True)
    emails_fetched_in_period = models.FloatField(blank=True, null=True)
    emails_replied_in_period = models.FloatField(blank=True, null=True)
    emails_rpld_by_goal_in_period = models.FloatField(blank=True, null=True)
    agent_emails_rpld_by_goal = models.FloatField(blank=True, null=True)
    emails_deleted_in_period = models.FloatField(blank=True, null=True)
    emails_trnsfrd_out_in_period = models.FloatField(blank=True, null=True)
    emails_trnsfrd_in_in_period = models.FloatField(blank=True, null=True)
    emails_rsl_and_trfd_in_period = models.FloatField(blank=True, null=True)
    emails_assigned_in_period = models.FloatField(blank=True, null=True)
    emails_auto_routed_in_period = models.FloatField(blank=True, null=True)
    emails_auto_uptd_sr_in_period = models.FloatField(blank=True, null=True)
    sr_created_in_period = models.FloatField(blank=True, null=True)
    accumulated_open_emails = models.FloatField(blank=True, null=True)
    accumulated_open_age = models.FloatField(blank=True, null=True)
    accumulated_emails_in_queue = models.FloatField(blank=True, null=True)
    accumulated_queue_time = models.FloatField(blank=True, null=True)
    email_resp_time_in_period = models.FloatField(blank=True, null=True)
    agent_resp_time_in_period = models.FloatField(blank=True, null=True)
    accumulated_emails_one_day = models.FloatField(blank=True, null=True)
    accumulated_emails_three_days = models.FloatField(blank=True, null=True)
    accumulated_emails_week = models.FloatField(blank=True, null=True)
    accumulated_emails_week_plus = models.FloatField(blank=True, null=True)
    one_rsln_in_period = models.FloatField(blank=True, null=True)
    two_rsln_in_period = models.FloatField(blank=True, null=True)
    three_rsln_in_period = models.FloatField(blank=True, null=True)
    four_rsln_in_period = models.FloatField(blank=True, null=True)
    interaction_threads_in_period = models.FloatField(blank=True, null=True)
    emails_orr_count_in_period = models.FloatField(blank=True, null=True)
    emails_auto_replied_in_period = models.FloatField(blank=True, null=True)
    emails_auto_deleted_in_period = models.FloatField(blank=True, null=True)
    emails_auto_resolved_in_period = models.FloatField(blank=True, null=True)
    emails_composed_in_period = models.FloatField(blank=True, null=True)
    leads_created_in_period = models.FloatField(blank=True, null=True)
    emails_rerouted_in_period = models.FloatField(blank=True, null=True)
    emails_offered_c = models.FloatField(blank=True, null=True)
    emails_fetched_c = models.FloatField(blank=True, null=True)
    emails_replied_c = models.FloatField(blank=True, null=True)
    emails_rpld_by_goal_c = models.FloatField(blank=True, null=True)
    agent_emails_rpld_by_goal_c = models.FloatField(blank=True, null=True)
    emails_deleted_c = models.FloatField(blank=True, null=True)
    emails_trnsfrd_out_c = models.FloatField(blank=True, null=True)
    emails_trnsfrd_in_c = models.FloatField(blank=True, null=True)
    emails_rsl_and_trfd_c = models.FloatField(blank=True, null=True)
    emails_assigned_c = models.FloatField(blank=True, null=True)
    emails_auto_routed_c = models.FloatField(blank=True, null=True)
    emails_auto_uptd_sr_c = models.FloatField(blank=True, null=True)
    sr_created_c = models.FloatField(blank=True, null=True)
    accu_open_emails_c = models.FloatField(blank=True, null=True)
    accu_open_age_c = models.FloatField(blank=True, null=True)
    accu_emails_in_queue_c = models.FloatField(blank=True, null=True)
    accu_queue_time_c = models.FloatField(blank=True, null=True)
    email_resp_time_c = models.FloatField(blank=True, null=True)
    agent_resp_time_c = models.FloatField(blank=True, null=True)
    accu_emails_one_day_c = models.FloatField(blank=True, null=True)
    accu_emails_three_days_c = models.FloatField(blank=True, null=True)
    accu_emails_week_c = models.FloatField(blank=True, null=True)
    accu_emails_week_plus_c = models.FloatField(blank=True, null=True)
    one_rsln_c = models.FloatField(blank=True, null=True)
    two_rsln_c = models.FloatField(blank=True, null=True)
    three_rsln_c = models.FloatField(blank=True, null=True)
    four_rsln_c = models.FloatField(blank=True, null=True)
    interaction_thread_c = models.FloatField(blank=True, null=True)
    emails_orr_count_c = models.FloatField(blank=True, null=True)
    emails_auto_replied_c = models.FloatField(blank=True, null=True)
    emails_auto_deleted_c = models.FloatField(blank=True, null=True)
    emails_auto_resolv_c = models.FloatField(blank=True, null=True)
    emails_composed_c = models.FloatField(blank=True, null=True)
    leads_created_c = models.FloatField(blank=True, null=True)
    emails_rerouted_c = models.FloatField(blank=True, null=True)
    tot_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bix_email_details_mv'


class BomDiagTempTab(models.Model):
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    long_description = models.CharField(max_length=4000, blank=True, null=True)
    num_col1 = models.FloatField(blank=True, null=True)
    num_col2 = models.FloatField(blank=True, null=True)
    num_col3 = models.FloatField(blank=True, null=True)
    num_col4 = models.FloatField(blank=True, null=True)
    num_col5 = models.FloatField(blank=True, null=True)
    num_col6 = models.FloatField(blank=True, null=True)
    num_col7 = models.FloatField(blank=True, null=True)
    num_col8 = models.FloatField(blank=True, null=True)
    num_col9 = models.FloatField(blank=True, null=True)
    num_col10 = models.FloatField(blank=True, null=True)
    char_col1 = models.CharField(max_length=240, blank=True, null=True)
    char_col2 = models.CharField(max_length=240, blank=True, null=True)
    char_col3 = models.CharField(max_length=240, blank=True, null=True)
    char_col4 = models.CharField(max_length=240, blank=True, null=True)
    char_col5 = models.CharField(max_length=240, blank=True, null=True)
    char_col6 = models.CharField(max_length=240, blank=True, null=True)
    char_col7 = models.CharField(max_length=240, blank=True, null=True)
    char_col8 = models.CharField(max_length=240, blank=True, null=True)
    char_col9 = models.CharField(max_length=240, blank=True, null=True)
    char_col10 = models.CharField(max_length=240, blank=True, null=True)
    date_col1 = models.DateField(blank=True, null=True)
    date_col2 = models.DateField(blank=True, null=True)
    date_col3 = models.DateField(blank=True, null=True)
    date_col4 = models.DateField(blank=True, null=True)
    date_col5 = models.DateField(blank=True, null=True)
    date_col6 = models.DateField(blank=True, null=True)
    date_col7 = models.DateField(blank=True, null=True)
    date_col8 = models.DateField(blank=True, null=True)
    date_col9 = models.DateField(blank=True, null=True)
    date_col10 = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bom_diag_temp_tab'


class Bug76628881(models.Model):
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    document_type = models.CharField(max_length=10, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    action_plan = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bug7662888_1'


class Bug76628882(models.Model):
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    document_type = models.CharField(max_length=10, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    action_plan = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bug7662888_2'


class Bug76628883(models.Model):
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    document_type = models.CharField(max_length=10, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    action_plan = models.CharField(max_length=500, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'bug7662888_3'


class CancelEncumFlagTab(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    invoice_amount = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cancel_encum_flag_tab'


class CheckMigrationStatusTab(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    gl_date = models.DateField()
    set_of_books_id = models.BigIntegerField()
    application_id = models.BigIntegerField()
    period_name = models.CharField(max_length=15)
    start_date = models.DateField()
    end_date = models.DateField()
    adjustment_period_flag = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'check_migration_status_tab'


class CnColumnMapsAllUpg(models.Model):
    column_map_id = models.BigIntegerField()
    destination_column_id = models.BigIntegerField()
    table_map_id = models.BigIntegerField()
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    source_column_id = models.BigIntegerField(blank=True, null=True)
    driving_column_id = models.BigIntegerField(blank=True, null=True)
    expression = models.CharField(max_length=1900, blank=True, null=True)
    aggregate_function = models.CharField(max_length=10, blank=True, null=True)
    seed_column_map_id = models.BigIntegerField(blank=True, null=True)
    group_by_flag = models.CharField(max_length=1, blank=True, null=True)
    unique_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    update_clause = models.CharField(max_length=1900, blank=True, null=True)
    modified = models.CharField(max_length=1)
    editable = models.CharField(max_length=1, blank=True, null=True)
    calc_ext_table_id = models.BigIntegerField(blank=True, null=True)
    object_version_number = models.BigIntegerField()
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cn_column_maps_all_upg'


class CnScaRuleCondValsMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cond_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cond_detail_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sca_credit_rule_id = models.BigIntegerField()
    calculated_rank = models.FloatField(blank=True, null=True)
    ancestor_rule_id = models.BigIntegerField(blank=True, null=True)
    start_date = models.DateField()
    end_date = models.DateField(blank=True, null=True)
    transaction_source = models.CharField(max_length=30)
    sca_condition_id = models.BigIntegerField()
    sca_rule_attribute_id = models.BigIntegerField()
    sca_cond_detail_id = models.BigIntegerField()
    operator_id = models.CharField(max_length=30)
    value_char_min = models.CharField(max_length=240, blank=True, null=True)
    value_char_max = models.CharField(max_length=240, blank=True, null=True)
    value_num_min = models.FloatField(blank=True, null=True)
    value_num_max = models.FloatField(blank=True, null=True)
    value_date_min = models.DateField(blank=True, null=True)
    value_date_max = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cn_sca_rule_cond_vals_mv'


class CsdDcFreqSumMv(models.Model):
    ro_inventory_item_id = models.FloatField()
    total_ro_count = models.FloatField(blank=True, null=True)
    diagnostic_code_id = models.FloatField()
    diagnostic_item_id = models.FloatField(blank=True, null=True)
    dc_only_ro_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csd_dc_freq_sum_mv'


class CsdRoPerItemMv(models.Model):
    total_ro_count = models.FloatField(blank=True, null=True)
    ro_inventory_item_id = models.FloatField(unique=True)

    class Meta:
        managed = False
        db_table = 'csd_ro_per_item_mv'


class CsdScFreqSumMv(models.Model):
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    ro_inventory_item_id = models.FloatField()
    total_ro_count = models.FloatField(blank=True, null=True)
    service_code_id = models.FloatField()
    service_item_id = models.FloatField(blank=True, null=True)
    sc_only_ro_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csd_sc_freq_sum_mv'


class CsdWipMtlUsedMv(models.Model):
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    ro_inventory_item_id = models.FloatField()
    part_only_ro_count = models.FloatField(blank=True, null=True)
    part_only_ro_quantity = models.FloatField(blank=True, null=True)
    part_only_ro_quantity_cnt = models.FloatField(blank=True, null=True)
    part_inventory_item_id = models.FloatField()
    total_part_quantity = models.FloatField(blank=True, null=True)
    total_part_quantity_cnt = models.FloatField(blank=True, null=True)
    part_primary_uom_code = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'csd_wip_mtl_used_mv'


class CsdWipResUsedMv(models.Model):
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    ro_inventory_item_id = models.FloatField()
    res_only_ro_count = models.FloatField(blank=True, null=True)
    res_only_ro_quantity = models.FloatField(blank=True, null=True)
    res_only_ro_quantity_cnt = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField()
    total_res_quantity = models.FloatField(blank=True, null=True)
    total_res_quantity_cnt = models.FloatField(blank=True, null=True)
    res_primary_uom_code = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'csd_wip_res_used_mv'


class CsfMdAdmBoundsMatV(models.Model):
    feature_code = models.FloatField(blank=True, null=True)
    area = models.FloatField(blank=True, null=True)
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_adm_bounds_mat_v'


class CsfMdHydrosMatV(models.Model):
    feature_code = models.FloatField(blank=True, null=True)
    water_type = models.FloatField(blank=True, null=True)
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_hydros_mat_v'


class CsfMdLandUsesMatV(models.Model):
    feature_code = models.FloatField(blank=True, null=True)
    park_type = models.FloatField(blank=True, null=True)
    area = models.FloatField(blank=True, null=True)
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_land_uses_mat_v'


class CsfMdPoisMatV(models.Model):
    poi_id = models.BigIntegerField(blank=True, null=True)
    feature_code = models.FloatField(blank=True, null=True)
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_pois_mat_v'


class CsfMdRailSegsMatV(models.Model):
    feature_code = models.FloatField(blank=True, null=True)
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rail_segs_mat_v'


class CsfMdRdSegsFun0V(models.Model):
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rd_segs_fun0_v'


class CsfMdRdSegsFun1V(models.Model):
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rd_segs_fun1_v'


class CsfMdRdSegsFun2V(models.Model):
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rd_segs_fun2_v'


class CsfMdRdSegsFun3V(models.Model):
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rd_segs_fun3_v'


class CsfMdRdSegsFun4V(models.Model):
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.
    name = models.CharField(max_length=70, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csf_md_rd_segs_fun4_v'


class CsfWomRoadHiwayMatV(models.Model):
    link_id = models.BigIntegerField()
    name = models.CharField(max_length=4, blank=True, null=True)
    is_ferry = models.IntegerField()
    geometry = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'csf_wom_road_hiway_mat_v'


class CspSupDemPlMv(models.Model):
    inventory_item_id = models.FloatField()
    organization_id = models.FloatField(blank=True, null=True)
    parts_loop_id = models.FloatField(blank=True, null=True)
    purchase_orders = models.FloatField(blank=True, null=True)
    sales_orders = models.FloatField(blank=True, null=True)
    requisitions = models.FloatField(blank=True, null=True)
    interorg_transf_in = models.FloatField(blank=True, null=True)
    onhand_good = models.FloatField(blank=True, null=True)
    onhand_bad = models.FloatField(blank=True, null=True)
    intransit_move_orders = models.FloatField(blank=True, null=True)
    interorg_transf_out = models.FloatField(blank=True, null=True)
    move_orders_in = models.FloatField(blank=True, null=True)
    move_orders_out = models.FloatField(blank=True, null=True)
    work_orders = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_sup_dem_pl_mv'


class CspSupDemPnMv(models.Model):
    inventory_item_id = models.FloatField()
    organization_id = models.FloatField(blank=True, null=True)
    planning_parameters_id = models.BigIntegerField()
    level_id = models.CharField(max_length=200, blank=True, null=True)
    node_name = models.CharField(max_length=50, blank=True, null=True)
    parent_node_id = models.BigIntegerField(blank=True, null=True)
    purchase_orders = models.FloatField(blank=True, null=True)
    sales_orders = models.FloatField(blank=True, null=True)
    requisitions = models.FloatField(blank=True, null=True)
    interorg_transf_in = models.FloatField(blank=True, null=True)
    onhand_good = models.FloatField(blank=True, null=True)
    onhand_bad = models.FloatField(blank=True, null=True)
    intransit_move_orders = models.FloatField(blank=True, null=True)
    interorg_transf_out = models.FloatField(blank=True, null=True)
    move_orders_in = models.FloatField(blank=True, null=True)
    move_orders_out = models.FloatField(blank=True, null=True)
    work_orders = models.FloatField(blank=True, null=True)
    excess_quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_sup_dem_pn_mv'


class CspSupDemRhMv(models.Model):
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    hierarchy_node_id = models.FloatField(blank=True, null=True)
    node_name = models.CharField(max_length=30)
    parent_node_id = models.BigIntegerField(blank=True, null=True)
    purchase_orders = models.FloatField(blank=True, null=True)
    sales_orders = models.FloatField(blank=True, null=True)
    requisitions = models.FloatField(blank=True, null=True)
    interorg_transf_in = models.FloatField(blank=True, null=True)
    onhand_good = models.FloatField(blank=True, null=True)
    onhand_bad = models.FloatField(blank=True, null=True)
    intransit_move_orders = models.FloatField(blank=True, null=True)
    interorg_transf_out = models.FloatField(blank=True, null=True)
    move_orders_in = models.FloatField(blank=True, null=True)
    move_orders_out = models.FloatField(blank=True, null=True)
    work_orders = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_sup_dem_rh_mv'


class CspSupDemSubMv(models.Model):
    inventory_item_id = models.FloatField()
    organization_id = models.FloatField(blank=True, null=True)
    parts_loop_id = models.FloatField(blank=True, null=True)
    hierarchy_node_id = models.FloatField(blank=True, null=True)
    planning_parameters_id = models.FloatField(blank=True, null=True)
    level_id = models.CharField(max_length=200, blank=True, null=True)
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    purchase_orders = models.FloatField(blank=True, null=True)
    sales_orders = models.FloatField(blank=True, null=True)
    requisitions = models.FloatField(blank=True, null=True)
    interorg_transf_in = models.FloatField(blank=True, null=True)
    onhand_good = models.FloatField(blank=True, null=True)
    onhand_bad = models.FloatField(blank=True, null=True)
    intransit_move_orders = models.FloatField(blank=True, null=True)
    interorg_transf_out = models.FloatField(blank=True, null=True)
    move_orders_in = models.FloatField(blank=True, null=True)
    move_orders_out = models.FloatField(blank=True, null=True)
    work_orders = models.FloatField(blank=True, null=True)
    excess_quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_sup_dem_sub_mv'


class CspUsageOrgMv(models.Model):
    organization_id = models.BigIntegerField()
    inventory_item_id = models.BigIntegerField()
    period_start_date = models.DateField()
    quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_usage_org_mv'


class CspUsageRegMv(models.Model):
    planning_parameters_id = models.BigIntegerField(blank=True, null=True)
    inventory_item_id = models.BigIntegerField()
    quantity = models.FloatField(blank=True, null=True)
    period_start_date = models.DateField()
    level_id = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csp_usage_reg_mv'


class CsyAgentRespnResolMv(models.Model):
    period_type = models.CharField(max_length=30)
    period_name = models.CharField(max_length=80)
    incident_severity_id = models.FloatField()
    incident_owner_id = models.FloatField()
    total_response_time = models.FloatField(blank=True, null=True)
    total_sr_responded = models.FloatField(blank=True, null=True)
    total_resp_sla_missed = models.FloatField(blank=True, null=True)
    total_agent_wait = models.FloatField(blank=True, null=True)
    total_others_wait = models.FloatField(blank=True, null=True)
    total_resolve_time = models.FloatField(blank=True, null=True)
    total_sr_resolved = models.FloatField(blank=True, null=True)
    total_wait_agent = models.FloatField(blank=True, null=True)
    total_wait_support = models.FloatField(blank=True, null=True)
    total_wait_internal = models.FloatField(blank=True, null=True)
    total_wait_external = models.FloatField(blank=True, null=True)
    total_wait_customer = models.FloatField(blank=True, null=True)
    total_resl_sla_missed = models.FloatField(blank=True, null=True)
    beginning_backlog = models.FloatField(blank=True, null=True)
    ending_backlog = models.FloatField(blank=True, null=True)
    total_sr_assigned = models.FloatField(blank=True, null=True)
    total_sr_reassigned_to_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csy_agent_respn_resol_mv'


class CsyGroupRespnResolMv(models.Model):
    period_type = models.CharField(max_length=30)
    period_name = models.CharField(max_length=80)
    incident_severity_id = models.FloatField()
    owner_group_id = models.FloatField()
    total_response_time = models.FloatField(blank=True, null=True)
    total_sr_responded = models.FloatField(blank=True, null=True)
    total_resp_sla_missed = models.FloatField(blank=True, null=True)
    total_agent_wait = models.FloatField(blank=True, null=True)
    total_others_wait = models.FloatField(blank=True, null=True)
    total_resolve_time = models.FloatField(blank=True, null=True)
    total_sr_resolved = models.FloatField(blank=True, null=True)
    total_wait_agent = models.FloatField(blank=True, null=True)
    total_wait_support = models.FloatField(blank=True, null=True)
    total_wait_internal = models.FloatField(blank=True, null=True)
    total_wait_external = models.FloatField(blank=True, null=True)
    total_wait_customer = models.FloatField(blank=True, null=True)
    total_resl_sla_missed = models.FloatField(blank=True, null=True)
    beginning_backlog = models.FloatField(blank=True, null=True)
    ending_backlog = models.FloatField(blank=True, null=True)
    total_sr_assigned = models.FloatField(blank=True, null=True)
    total_sr_reassigned_to_others = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csy_group_respn_resol_mv'


class CsyResolutionQualityMv(models.Model):
    period_type = models.CharField(max_length=30)
    period_name = models.CharField(max_length=80)
    owner_type = models.CharField(max_length=1)
    incident_owner_id = models.BigIntegerField()
    incident_severity_id = models.FloatField()
    total_sr_resolved_1st_time = models.FloatField(blank=True, null=True)
    total_sr_reopened = models.FloatField(blank=True, null=True)
    tot_sr_reopened_once_or_more = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'csy_resolution_quality_mv'


class CzMessageQentries(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'cz_message_qentries'


class DdrBsClsDayMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    mfg_item_class_id = models.FloatField()
    day_cd = models.CharField(max_length=30)
    num_mfg_sku_items = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_cls_day_mv'


class DdrBsFrcstItmBuWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    org_rgn_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    cnt_total = models.FloatField(blank=True, null=True)
    act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    frcst_sls_qty_alt = models.FloatField(blank=True, null=True)
    frcst_sls_amt = models.FloatField(blank=True, null=True)
    frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_qty_alt = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_amt = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_frcst_itm_bu_wk_mv'


class DdrBsFrcstLstSlsMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    rtl_sku_item_id = models.FloatField()
    day_cd = models.CharField(max_length=30)
    max_frcst_vrsn = models.DateField(blank=True, null=True)
    act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    frcst_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    maxvrsn_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'ddr_bs_frcst_lst_sls_mv'


class DdrBsFrcstVrsnMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    glbl_item_id = models.CharField(max_length=30)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_id = models.FloatField()
    day_cd = models.CharField(max_length=30)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    max_frcst_vrsn = models.DateField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_frcst_vrsn_mv'


class DdrBsInvItmBuWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    org_rgn_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    cnt_total = models.FloatField(blank=True, null=True)
    in_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    undr_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    on_hand_qty_alt = models.FloatField(blank=True, null=True)
    recvd_qty_prmry = models.FloatField(blank=True, null=True)
    recvd_qty_alt = models.FloatField(blank=True, null=True)
    in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    in_transit_qty_alt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_alt = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_alt = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_alt = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cst_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_inv_itm_bu_wk_mv'


class DdrBsInvSkuBuDayMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    rtl_sku_item_id = models.FloatField()
    day_cd = models.CharField(max_length=30)
    cnt_total = models.FloatField(blank=True, null=True)
    on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    on_hand_qty_alt = models.FloatField(blank=True, null=True)
    recvd_qty_prmry = models.FloatField(blank=True, null=True)
    recvd_qty_alt = models.FloatField(blank=True, null=True)
    in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    in_transit_qty_alt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_alt = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_alt = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_alt = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cst_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_inv_sku_bu_day_mv'


class DdrBsItmBuAsscDayMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    mfg_item_id = models.FloatField()
    rtl_item_id = models.FloatField()
    clndr_cd = models.CharField(max_length=30)
    day_cd = models.CharField(max_length=30)
    total_bu_itm_days = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_itm_bu_assc_day_mv'


class DdrBsOrdrItmBuWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    org_rgn_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    cnt_total = models.FloatField(blank=True, null=True)
    ordr_qty_prmry = models.FloatField(blank=True, null=True)
    ordr_qty_alt = models.FloatField(blank=True, null=True)
    ordr_amt = models.FloatField(blank=True, null=True)
    ordr_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_ordr_qty_alt = models.FloatField(blank=True, null=True)
    cnt_ordr_amt = models.FloatField(blank=True, null=True)
    cnt_ordr_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_ordr_itm_bu_wk_mv'


class DdrBsShipItmBuWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    org_rgn_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    cnt_total = models.FloatField(blank=True, null=True)
    ship_qty_prmry = models.FloatField(blank=True, null=True)
    ship_qty_alt = models.FloatField(blank=True, null=True)
    ship_amt = models.FloatField(blank=True, null=True)
    ship_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_ship_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_ship_qty_alt = models.FloatField(blank=True, null=True)
    cnt_ship_amt = models.FloatField(blank=True, null=True)
    cnt_ship_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_ship_itm_bu_wk_mv'


class DdrBsSlsrItmBuWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    org_bsns_unit_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mkt_area_id = models.FloatField(blank=True, null=True)
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    org_rgn_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    prmtn_flag = models.CharField(max_length=1, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    act_bu_itm_days_scanned = models.FloatField(blank=True, null=True)
    sls_qty_prmry = models.FloatField(blank=True, null=True)
    sls_qty_alt = models.FloatField(blank=True, null=True)
    sls_amt = models.FloatField(blank=True, null=True)
    sls_amt_rpt = models.FloatField(blank=True, null=True)
    sls_cost_amt = models.FloatField(blank=True, null=True)
    sls_cost_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_qty_prmry = models.FloatField(blank=True, null=True)
    rtrn_qty_alt = models.FloatField(blank=True, null=True)
    rtrn_amt = models.FloatField(blank=True, null=True)
    rtrn_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_sls_qty_alt = models.FloatField(blank=True, null=True)
    cnt_sls_amt = models.FloatField(blank=True, null=True)
    cnt_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_sls_cost_amt = models.FloatField(blank=True, null=True)
    cnt_sls_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_rtrn_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_rtrn_qty_alt = models.FloatField(blank=True, null=True)
    cnt_rtrn_amt = models.FloatField(blank=True, null=True)
    cnt_rtrn_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_rtrn_cost_amt = models.FloatField(blank=True, null=True)
    cnt_rtrn_cost_amt_rpt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_bs_slsr_itm_bu_wk_mv'


class DdrRBaseDayDnMv(models.Model):
    day_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bday_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bwk_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bmnth_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bqtr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    byr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cal_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    day_trans_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    clndr_desc = models.CharField(max_length=240, blank=True, null=True)
    day_cd = models.CharField(max_length=30)
    base_day_id = models.FloatField(unique=True)
    clndr_dt = models.DateField()
    clndr_dt_desc = models.CharField(max_length=40, blank=True, null=True)
    day_of_yr = models.FloatField()
    wkend_ind = models.CharField(max_length=1, blank=True, null=True)
    last_yr_this_day_cd = models.CharField(max_length=30, blank=True, null=True)
    last_day_this_yr_cd = models.CharField(max_length=30, blank=True, null=True)
    bsns_wk_id = models.FloatField()
    wk_desc = models.CharField(max_length=40)
    wk_cd = models.CharField(max_length=30)
    wk_nbr = models.FloatField()
    wk_strt_dt = models.DateField()
    wk_end_dt = models.DateField()
    wk_timespn = models.FloatField()
    bsns_mnth_id = models.FloatField()
    mnth_desc = models.CharField(max_length=40)
    mnth_cd = models.CharField(max_length=30)
    mnth_strt_dt = models.DateField()
    mnth_end_dt = models.DateField()
    mnth_nbr = models.FloatField()
    mnth_timespn = models.FloatField()
    bsns_qtr_id = models.FloatField()
    qtr_desc = models.CharField(max_length=40)
    qtr_cd = models.CharField(max_length=30)
    qtr_nbr = models.FloatField()
    qtr_strt_dt = models.DateField()
    qtr_end_dt = models.DateField()
    qtr_timespn = models.FloatField()
    bsns_yr_id = models.FloatField()
    yr_desc = models.CharField(max_length=40)
    yr_nbr = models.FloatField()
    yr_cd = models.CharField(max_length=30)
    yr_strt_dt = models.DateField()
    yr_end_dt = models.DateField()
    yr_timespn = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ddr_r_base_day_dn_mv'


class DdrRBsnsMnthDnMv(models.Model):
    bmnth_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bqtr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    byr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cal_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mnth_trans_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    clndr_desc = models.CharField(max_length=240, blank=True, null=True)
    bsns_mnth_id = models.FloatField(unique=True)
    mnth_desc = models.CharField(max_length=40)
    mnth_cd = models.CharField(max_length=30)
    mnth_strt_dt = models.DateField()
    mnth_end_dt = models.DateField()
    mnth_nbr = models.FloatField()
    mnth_timespn = models.FloatField()
    last_yr_this_mnth_id = models.FloatField(blank=True, null=True)
    last_mnth_this_yr_id = models.FloatField(blank=True, null=True)
    bsns_qtr_id = models.FloatField()
    qtr_desc = models.CharField(max_length=40)
    qtr_nbr = models.FloatField()
    qtr_cd = models.CharField(max_length=30)
    qtr_strt_dt = models.DateField()
    qtr_end_dt = models.DateField()
    qtr_timespn = models.FloatField()
    bsns_yr_id = models.FloatField()
    yr_desc = models.CharField(max_length=40)
    yr_nbr = models.FloatField()
    yr_cd = models.CharField(max_length=30)
    yr_strt_dt = models.DateField()
    yr_end_dt = models.DateField()
    yr_timespn = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ddr_r_bsns_mnth_dn_mv'


class DdrRBsnsQtrDnMv(models.Model):
    bqtr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    byr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cal_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qtr_trans_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    clndr_desc = models.CharField(max_length=240, blank=True, null=True)
    bsns_qtr_id = models.FloatField(unique=True)
    qtr_desc = models.CharField(max_length=40)
    qtr_cd = models.CharField(max_length=30)
    qtr_nbr = models.FloatField()
    qtr_strt_dt = models.DateField()
    qtr_end_dt = models.DateField()
    qtr_timespn = models.FloatField()
    last_yr_this_qtr_id = models.FloatField(blank=True, null=True)
    last_qtr_this_yr_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField()
    yr_desc = models.CharField(max_length=40)
    yr_nbr = models.FloatField()
    yr_cd = models.CharField(max_length=30)
    yr_strt_dt = models.DateField()
    yr_end_dt = models.DateField()
    yr_timespn = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ddr_r_bsns_qtr_dn_mv'


class DdrRBsnsWkDnMv(models.Model):
    bwk_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bmnth_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    bqtr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    byr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cal_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    wk_trans_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    clndr_desc = models.CharField(max_length=240, blank=True, null=True)
    bsns_wk_id = models.FloatField(unique=True)
    wk_desc = models.CharField(max_length=40)
    wk_nbr = models.FloatField()
    wk_cd = models.CharField(max_length=30)
    wk_strt_dt = models.DateField()
    wk_end_dt = models.DateField()
    wk_timespn = models.FloatField()
    last_yr_this_wk_id = models.FloatField(blank=True, null=True)
    last_wk_this_yr_id = models.FloatField(blank=True, null=True)
    bsns_mnth_id = models.FloatField()
    mnth_desc = models.CharField(max_length=40)
    mnth_cd = models.CharField(max_length=30)
    mnth_strt_dt = models.DateField()
    mnth_end_dt = models.DateField()
    mnth_nbr = models.FloatField()
    mnth_timespn = models.FloatField()
    bsns_qtr_id = models.FloatField()
    qtr_desc = models.CharField(max_length=40)
    qtr_nbr = models.FloatField()
    qtr_cd = models.CharField(max_length=30)
    qtr_strt_dt = models.DateField()
    qtr_end_dt = models.DateField()
    qtr_timespn = models.FloatField()
    bsns_yr_id = models.FloatField()
    yr_desc = models.CharField(max_length=40)
    yr_nbr = models.FloatField()
    yr_cd = models.CharField(max_length=30)
    yr_strt_dt = models.DateField()
    yr_end_dt = models.DateField()
    yr_timespn = models.FloatField()

    class Meta:
        managed = False
        db_table = 'ddr_r_bsns_wk_dn_mv'


class DdrRBsnsYrDnMv(models.Model):
    byr_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cal_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    yr_trans_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    clndr_cd = models.CharField(max_length=30)
    clndr_desc = models.CharField(max_length=240, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    bsns_yr_id = models.FloatField(unique=True)
    yr_cd = models.CharField(max_length=30)
    yr_desc = models.CharField(max_length=40)
    yr_nbr = models.FloatField()
    yr_strt_dt = models.DateField()
    yr_end_dt = models.DateField()
    yr_timespn = models.FloatField()
    last_yr_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_bsns_yr_dn_mv'


class DdrRInvRuleDnMv(models.Model):
    itm_bu_assc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sku_bu_inv_rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    glbl_item_id = models.CharField(max_length=30)
    glbl_item_id_typ = models.CharField(max_length=30)
    min_stck_on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_inv_rule_dn_mv'


class DdrRMfgItemClsDnMv(models.Model):
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_class_id = models.FloatField(unique=True)
    mfg_class_cd = models.CharField(max_length=30)
    mfg_class_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_grp_id = models.FloatField()
    mfg_grp_cd = models.CharField(max_length=30)
    mfg_grp_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField()
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_cls_dn_mv'


class DdrRMfgItemDivDnMv(models.Model):
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField(unique=True)
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_div_dn_mv'


class DdrRMfgItemGrpDnMv(models.Model):
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_grp_id = models.FloatField(unique=True)
    mfg_grp_cd = models.CharField(max_length=30)
    mfg_grp_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField()
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_grp_dn_mv'


class DdrRMfgItemItmDnMv(models.Model):
    itm_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lkup_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    mfg_item_id = models.FloatField(unique=True)
    mfg_item_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_nbr = models.CharField(max_length=30)
    mfg_brnd_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_short_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_scnd_desc = models.CharField(max_length=240, blank=True, null=True)
    brnd_name = models.CharField(max_length=40, blank=True, null=True)
    brnd_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_sbc_id = models.FloatField()
    mfg_sbc_cd = models.CharField(max_length=30)
    mfg_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    mfg_class_cd = models.CharField(max_length=30)
    mfg_class_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_grp_id = models.FloatField()
    mfg_grp_cd = models.CharField(max_length=30)
    mfg_grp_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField()
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_itm_dn_mv'


class DdrRMfgItemSbcDnMv(models.Model):
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_sbc_id = models.FloatField(unique=True)
    mfg_sbc_cd = models.CharField(max_length=30)
    mfg_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    mfg_class_cd = models.CharField(max_length=30)
    mfg_class_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_grp_id = models.FloatField()
    mfg_grp_cd = models.CharField(max_length=30)
    mfg_grp_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField()
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_sbc_dn_mv'


class DdrRMfgItemSkuDnMv(models.Model):
    sku_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    itm_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lkup_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    mfg_org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    mfg_sku_item_id = models.FloatField(unique=True)
    mfg_sku_item_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_sku_item_nbr = models.CharField(max_length=30)
    glbl_item_id = models.CharField(max_length=30)
    glbl_item_id_typ = models.CharField(max_length=30)
    unit_price_fctr = models.FloatField(blank=True, null=True)
    sz_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_weave_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_style_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_fiber_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_fabric_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_dye_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_color_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_coating_cd = models.CharField(max_length=30, blank=True, null=True)
    su_last_rcvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    su_last_rcvd_net_cost_amt_lcl = models.FloatField(blank=True, null=True)
    su_last_rcvd_net_cost_amt = models.FloatField(blank=True, null=True)
    su_last_rcvd_cost_estbl_dt = models.DateField(blank=True, null=True)
    su_last_rcvd_base_cost_amt_rpt = models.FloatField(blank=True, null=True)
    su_last_rcvd_base_cost_amt_lcl = models.FloatField(blank=True, null=True)
    su_last_rcvd_base_cost_amt = models.FloatField(blank=True, null=True)
    su_lnded_cost_amt = models.FloatField(blank=True, null=True)
    su_lnded_cost_amt_lcl = models.FloatField(blank=True, null=True)
    su_lnded_cost_amt_rpt = models.FloatField(blank=True, null=True)
    pkg_sz = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_sku_item_lng_desc = models.CharField(max_length=240, blank=True, null=True)
    collctn_sku_flg = models.CharField(max_length=1, blank=True, null=True)
    avlbl_for_sl_dt = models.DateField(blank=True, null=True)
    recall_ind = models.CharField(max_length=1, blank=True, null=True)
    uom_cd = models.CharField(max_length=30, blank=True, null=True)
    alt_uom_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_id = models.FloatField()
    mfg_item_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_nbr = models.CharField(max_length=30)
    mfg_brnd_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_short_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_scnd_desc = models.CharField(max_length=240, blank=True, null=True)
    brnd_name = models.CharField(max_length=40, blank=True, null=True)
    brnd_desc = models.CharField(max_length=240, blank=True, null=True)
    mfg_item_sbc_id = models.FloatField()
    mfg_sbc_cd = models.CharField(max_length=30)
    mfg_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    mfg_class_cd = models.CharField(max_length=30)
    mfg_class_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_grp_id = models.FloatField()
    mfg_grp_cd = models.CharField(max_length=30)
    mfg_grp_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_div_id = models.FloatField()
    mfg_div_cd = models.CharField(max_length=30)
    mfg_div_name = models.CharField(max_length=40, blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_mfg_item_sku_dn_mv'


class DdrROrgAreaDnMv(models.Model):
    area_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    chain_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_area_id = models.FloatField(unique=True)
    area_cd = models.CharField(max_length=30)
    area_name = models.CharField(max_length=40, blank=True, null=True)
    area_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField()
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_area_dn_mv'


class DdrROrgBuChnltypDnMv(models.Model):
    bu_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dstrct_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    rgn_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    area_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    chain_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lkup_mst_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_bsns_unit_id = models.FloatField()
    bsns_unit_cd = models.CharField(max_length=30)
    bsns_unit_name = models.CharField(max_length=40, blank=True, null=True)
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    chnl_typ_desc = models.CharField(max_length=240, blank=True, null=True)
    mkt_area_id_1 = models.FloatField(blank=True, null=True)
    mkt_area_cd_1 = models.CharField(max_length=30, blank=True, null=True)
    mkt_area_typ_1 = models.CharField(max_length=30, blank=True, null=True)
    store_mgr = models.CharField(max_length=40, blank=True, null=True)
    store_open_dt = models.DateField(blank=True, null=True)
    store_close_dt = models.DateField(blank=True, null=True)
    store_typ = models.CharField(max_length=30, blank=True, null=True)
    new_store_ind = models.CharField(max_length=1, blank=True, null=True)
    glbl_loc_id = models.CharField(max_length=30)
    glbl_loc_id_typ = models.CharField(max_length=30)
    bsns_unit_cncpt = models.CharField(max_length=240, blank=True, null=True)
    org_dstrct_id = models.FloatField()
    dstrct_cd = models.CharField(max_length=30)
    dstrct_name = models.CharField(max_length=40, blank=True, null=True)
    dstrct_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_rgn_id = models.FloatField()
    rgn_cd = models.CharField(max_length=30)
    rgn_name = models.CharField(max_length=40, blank=True, null=True)
    rgn_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_area_id = models.FloatField()
    area_cd = models.CharField(max_length=30)
    area_name = models.CharField(max_length=40, blank=True, null=True)
    area_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField()
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_bu_chnltyp_dn_mv'


class DdrROrgBuDnMv(models.Model):
    bu_dn_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mkt_area_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_bsns_unit_id = models.FloatField(unique=True)
    bsns_unit_cd = models.CharField(max_length=30)
    bsns_unit_name = models.CharField(max_length=40, blank=True, null=True)
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    chnl_typ_desc = models.CharField(max_length=240, blank=True, null=True)
    store_mgr = models.CharField(max_length=40, blank=True, null=True)
    store_open_dt = models.DateField(blank=True, null=True)
    store_close_dt = models.DateField(blank=True, null=True)
    store_typ = models.CharField(max_length=30, blank=True, null=True)
    new_store_ind = models.CharField(max_length=1, blank=True, null=True)
    glbl_loc_id = models.CharField(max_length=30)
    glbl_loc_id_typ = models.CharField(max_length=30)
    bsns_unit_cncpt = models.CharField(max_length=240, blank=True, null=True)
    mkt_area_id = models.FloatField(blank=True, null=True)
    mkt_area_cd = models.CharField(max_length=30, blank=True, null=True)
    mkt_area_typ = models.CharField(max_length=30, blank=True, null=True)
    mkt_area_name = models.CharField(max_length=40, blank=True, null=True)
    mkt_area_desc = models.CharField(max_length=240, blank=True, null=True)
    org_dstrct_id = models.FloatField()
    dstrct_cd = models.CharField(max_length=30)
    dstrct_name = models.CharField(max_length=40, blank=True, null=True)
    dstrct_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_rgn_id = models.FloatField()
    rgn_cd = models.CharField(max_length=30)
    rgn_name = models.CharField(max_length=40, blank=True, null=True)
    rgn_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_area_id = models.FloatField()
    area_cd = models.CharField(max_length=30)
    area_name = models.CharField(max_length=40, blank=True, null=True)
    area_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField()
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_bu_dn_mv'


class DdrROrgChnDnMv(models.Model):
    chain_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField(unique=True)
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_chn_dn_mv'


class DdrROrgDstrctDnMv(models.Model):
    dstrct_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    rgn_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    area_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    chain_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_dstrct_id = models.FloatField(unique=True)
    dstrct_cd = models.CharField(max_length=30)
    dstrct_name = models.CharField(max_length=40, blank=True, null=True)
    dstrct_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_rgn_id = models.FloatField()
    rgn_cd = models.CharField(max_length=30)
    rgn_name = models.CharField(max_length=40, blank=True, null=True)
    rgn_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_area_id = models.FloatField()
    area_cd = models.CharField(max_length=30)
    area_name = models.CharField(max_length=40, blank=True, null=True)
    area_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField()
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_dstrct_dn_mv'


class DdrROrgRgnDnMv(models.Model):
    rgn_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    area_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    chain_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_cd = models.CharField(max_length=30)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_rgn_id = models.FloatField(unique=True)
    rgn_cd = models.CharField(max_length=30)
    rgn_name = models.CharField(max_length=40, blank=True, null=True)
    rgn_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_area_id = models.FloatField()
    area_cd = models.CharField(max_length=30)
    area_name = models.CharField(max_length=40, blank=True, null=True)
    area_mgr_name = models.CharField(max_length=40, blank=True, null=True)
    org_chain_id = models.FloatField()
    chain_cd = models.CharField(max_length=30)
    chain_name = models.CharField(max_length=40, blank=True, null=True)
    chain_mgr_name = models.CharField(max_length=40, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_org_rgn_dn_mv'


class DdrRPrdDrtnDnMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    prd_cd = models.CharField(max_length=30, blank=True, null=True)
    prd_id = models.FloatField(blank=True, null=True)
    prd_typ = models.FloatField(blank=True, null=True)
    prd_drtn = models.FloatField(blank=True, null=True)
    prd_drtn_ytd = models.FloatField(blank=True, null=True)
    cnt_prd_drtn_ytd = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    prd_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'ddr_r_prd_drtn_dn_mv'


class DdrRRtlItemClsDnMv(models.Model):
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dpt_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_class_id = models.FloatField(unique=True)
    rtl_class_cd = models.CharField(max_length=30)
    rtl_class_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_dept_id = models.FloatField()
    rtl_dept_cd = models.CharField(max_length=30)
    rtl_dept_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_grp_id = models.FloatField()
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_cls_dn_mv'


class DdrRRtlItemDeptDnMv(models.Model):
    dpt_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_dept_id = models.FloatField(unique=True)
    rtl_dept_cd = models.CharField(max_length=30)
    rtl_dept_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_grp_id = models.FloatField()
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_dept_dn_mv'


class DdrRRtlItemDivDnMv(models.Model):
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_div_id = models.FloatField(unique=True)
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_div_dn_mv'


class DdrRRtlItemGrpDnMv(models.Model):
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_grp_id = models.FloatField(unique=True)
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_grp_dn_mv'


class DdrRRtlItemItmDnMv(models.Model):
    itm_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dpt_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lkp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_id = models.FloatField(unique=True)
    rtl_item_nbr = models.CharField(max_length=30)
    rtl_item_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_brnd_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_item_short_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_scnd_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_desc = models.CharField(max_length=240, blank=True, null=True)
    brnd_name = models.CharField(max_length=40, blank=True, null=True)
    brnd_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_sbc_id = models.FloatField()
    rtl_sbc_cd = models.CharField(max_length=30)
    rtl_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_class_id = models.FloatField()
    rtl_class_cd = models.CharField(max_length=30)
    rtl_class_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_dept_id = models.FloatField()
    rtl_dept_cd = models.CharField(max_length=30)
    rtl_dept_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_grp_id = models.FloatField()
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_itm_dn_mv'


class DdrRRtlItemSbcDnMv(models.Model):
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dpt_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_item_sbc_id = models.FloatField(unique=True)
    rtl_sbc_cd = models.CharField(max_length=30)
    rtl_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_class_id = models.FloatField()
    rtl_class_cd = models.CharField(max_length=30)
    rtl_class_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_dept_id = models.FloatField()
    rtl_dept_cd = models.CharField(max_length=30)
    rtl_dept_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_grp_id = models.FloatField()
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_sbc_dn_mv'


class DdrRRtlItemSkuDnMv(models.Model):
    sku_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    itm_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sbc_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cls_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dpt_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    grp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    div_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    lkp_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mfg_org_cd = models.CharField(max_length=30)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    org_cd = models.CharField(max_length=30)
    rtl_sku_item_id = models.FloatField(unique=True)
    rtl_sku_item_nbr = models.CharField(max_length=30)
    rtl_sku_item_name = models.CharField(max_length=40, blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30)
    glbl_item_id_typ = models.CharField(max_length=30)
    unit_price_fctr = models.FloatField(blank=True, null=True)
    sz_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_style_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_dye_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_color_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_coating_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_weave_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_fabric_cd = models.CharField(max_length=30, blank=True, null=True)
    stck_item_fiber_cd = models.CharField(max_length=30, blank=True, null=True)
    su_last_rcvd_cost_estbl_dt = models.DateField(blank=True, null=True)
    su_last_rcvd_net_cost_amt = models.FloatField(blank=True, null=True)
    su_last_rcvd_net_cost_amt_lcl = models.FloatField(blank=True, null=True)
    su_last_rcvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    rtl_sku_slng_prc_id = models.FloatField(blank=True, null=True)
    rtl_sku_item_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_indstry_idnt_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_slng_price_nbr = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_sku_item_long_desc = models.CharField(max_length=240, blank=True, null=True)
    recall_ind = models.CharField(max_length=1, blank=True, null=True)
    pck_sellbl_cd = models.CharField(max_length=30, blank=True, null=True)
    pck_smpl_cd = models.CharField(max_length=30, blank=True, null=True)
    pck_ordrbl_cd = models.CharField(max_length=30, blank=True, null=True)
    pck_ind = models.CharField(max_length=1, blank=True, null=True)
    pkg_sz = models.CharField(max_length=30, blank=True, null=True)
    pck_sellbl_desc = models.CharField(max_length=240, blank=True, null=True)
    pck_smpl_desc = models.CharField(max_length=240, blank=True, null=True)
    pck_ordrbl_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_id = models.FloatField()
    rtl_item_nbr = models.CharField(max_length=30)
    rtl_item_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_brnd_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_item_short_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_scnd_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_desc = models.CharField(max_length=240, blank=True, null=True)
    brnd_name = models.CharField(max_length=40, blank=True, null=True)
    brnd_desc = models.CharField(max_length=240, blank=True, null=True)
    rtl_item_sbc_id = models.FloatField()
    rtl_sbc_cd = models.CharField(max_length=30)
    rtl_sbc_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_class_id = models.FloatField()
    rtl_class_cd = models.CharField(max_length=30)
    rtl_class_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_dept_id = models.FloatField()
    rtl_dept_cd = models.CharField(max_length=30)
    rtl_dept_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_grp_id = models.FloatField()
    rtl_grp_cd = models.CharField(max_length=30)
    rtl_grp_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_div_id = models.FloatField()
    rtl_div_cd = models.CharField(max_length=30)
    rtl_div_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_r_rtl_item_sku_dn_mv'


class DdrSvClsMnthMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    mfg_item_class_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    mnth_timespn = models.FloatField()
    cnt_wks = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_cls_mnth_mv'


class DdrSvClsQtrMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    mfg_item_class_id = models.FloatField()
    bsns_qtr_id = models.FloatField()
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    qtr_timespn = models.FloatField()
    cnt_mnths = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_cls_qtr_mv'


class DdrSvClsWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    mfg_item_class_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    wk_timespn = models.FloatField()
    cnt_days = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_cls_wk_mv'


class DdrSvClsYrMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    mfg_item_class_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    yr_timespn = models.FloatField()
    cnt_qtrs = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_cls_yr_mv'


class DdrSvFrcstMv(models.Model):
    bsns_mnth_id = models.FloatField()
    org_rgn_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    bsns_clndr_dim_id = models.FloatField()
    bsns_clndr_dim_lvl = models.CharField(max_length=4, blank=True, null=True)
    org_dim_id = models.FloatField(blank=True, null=True)
    org_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    mfg_item_dim_id = models.FloatField()
    mfg_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    rtl_item_dim_id = models.FloatField()
    rtl_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    frcst_sls_qty_alt = models.FloatField(blank=True, null=True)
    frcst_sls_amt = models.FloatField(blank=True, null=True)
    frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_qty_alt = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_amt = models.FloatField(blank=True, null=True)
    cnt_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_frcst_mv'


class DdrSvInvMv(models.Model):
    bsns_mnth_id = models.FloatField()
    org_rgn_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    bsns_clndr_dim_id = models.FloatField()
    bsns_clndr_dim_lvl = models.CharField(max_length=4, blank=True, null=True)
    org_dim_id = models.FloatField(blank=True, null=True)
    org_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    mfg_item_dim_id = models.FloatField()
    mfg_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    rtl_item_dim_id = models.FloatField()
    rtl_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    in_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_in_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    undr_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_undr_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    on_hand_qty_alt = models.FloatField(blank=True, null=True)
    recvd_qty_prmry = models.FloatField(blank=True, null=True)
    recvd_qty_alt = models.FloatField(blank=True, null=True)
    in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    in_transit_qty_alt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_on_hand_qty_alt = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_recvd_qty_alt = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_in_transit_qty_alt = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_net_cst_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    cnt_qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_inv_mv'


class DdrSvItmBuAsscMnthMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    mfg_item_id = models.FloatField()
    rtl_item_id = models.FloatField()
    bsns_mnth_id = models.FloatField()
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_wks = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_itm_bu_assc_mnth_mv'


class DdrSvItmBuAsscQtrMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    mfg_item_id = models.FloatField()
    rtl_item_id = models.FloatField()
    bsns_qtr_id = models.FloatField()
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_mnths = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_itm_bu_assc_qtr_mv'


class DdrSvItmBuAsscWkMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    mfg_item_id = models.FloatField()
    rtl_item_id = models.FloatField()
    bsns_wk_id = models.FloatField()
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_days = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_itm_bu_assc_wk_mv'


class DdrSvItmBuAsscYrMv(models.Model):
    mfg_org_cd = models.CharField(max_length=30)
    rtl_org_cd = models.CharField(max_length=30)
    rtl_bsns_unit_id = models.FloatField()
    mfg_item_id = models.FloatField()
    rtl_item_id = models.FloatField()
    bsns_yr_id = models.FloatField()
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    cnt_qtrs = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_itm_bu_assc_yr_mv'


class DdrSvOrdrMv(models.Model):
    bsns_mnth_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    bsns_clndr_dim_id = models.FloatField()
    bsns_clndr_dim_lvl = models.CharField(max_length=4, blank=True, null=True)
    org_dim_id = models.FloatField()
    org_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    mfg_item_dim_id = models.FloatField()
    mfg_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    rtl_item_dim_id = models.FloatField()
    rtl_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    ordr_qty_prmry = models.FloatField(blank=True, null=True)
    ordr_qty_alt = models.FloatField(blank=True, null=True)
    ordr_amt = models.FloatField(blank=True, null=True)
    ordr_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_ordr_qty_alt = models.FloatField(blank=True, null=True)
    cnt_ordr_amt = models.FloatField(blank=True, null=True)
    cnt_ordr_amt_rpt = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_ordr_mv'


class DdrSvShipMv(models.Model):
    bsns_mnth_id = models.FloatField()
    org_chain_id = models.FloatField()
    mfg_item_class_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    bsns_clndr_dim_id = models.FloatField()
    bsns_clndr_dim_lvl = models.CharField(max_length=4, blank=True, null=True)
    org_dim_id = models.FloatField()
    org_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    mfg_item_dim_id = models.FloatField()
    mfg_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    rtl_item_dim_id = models.FloatField()
    rtl_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    ship_qty_prmry = models.FloatField(blank=True, null=True)
    ship_qty_alt = models.FloatField(blank=True, null=True)
    ship_amt = models.FloatField(blank=True, null=True)
    ship_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_ship_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_ship_qty_alt = models.FloatField(blank=True, null=True)
    cnt_ship_amt = models.FloatField(blank=True, null=True)
    cnt_ship_amt_rpt = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_ship_mv'


class DdrSvSlsrMv(models.Model):
    bsns_mnth_id = models.FloatField()
    org_rgn_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    mkt_area_id = models.FloatField(blank=True, null=True)
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField()
    rtl_item_class_id = models.FloatField()
    prmtn_flag = models.CharField(max_length=1, blank=True, null=True)
    bsns_clndr_dim_id = models.FloatField()
    bsns_clndr_dim_lvl = models.CharField(max_length=4, blank=True, null=True)
    org_dim_id = models.FloatField(blank=True, null=True)
    org_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    mfg_item_dim_id = models.FloatField()
    mfg_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    rtl_item_dim_id = models.FloatField()
    rtl_item_dim_lvl = models.CharField(max_length=3, blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)
    act_bu_itm_days_scanned = models.FloatField(blank=True, null=True)
    cnt_act_bu_itm_days_scanned = models.FloatField(blank=True, null=True)
    sls_qty_prmry = models.FloatField(blank=True, null=True)
    sls_qty_alt = models.FloatField(blank=True, null=True)
    sls_amt = models.FloatField(blank=True, null=True)
    sls_amt_rpt = models.FloatField(blank=True, null=True)
    sls_cost_amt = models.FloatField(blank=True, null=True)
    sls_cost_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_qty_prmry = models.FloatField(blank=True, null=True)
    rtrn_qty_alt = models.FloatField(blank=True, null=True)
    rtrn_amt = models.FloatField(blank=True, null=True)
    rtrn_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_sls_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_sls_qty_alt = models.FloatField(blank=True, null=True)
    cnt_sls_amt = models.FloatField(blank=True, null=True)
    cnt_sls_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_sls_cost_amt = models.FloatField(blank=True, null=True)
    cnt_sls_cost_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_rtrn_qty_prmry = models.FloatField(blank=True, null=True)
    cnt_rtrn_qty_alt = models.FloatField(blank=True, null=True)
    cnt_rtrn_amt = models.FloatField(blank=True, null=True)
    cnt_rtrn_amt_rpt = models.FloatField(blank=True, null=True)
    cnt_rtrn_cost_amt = models.FloatField(blank=True, null=True)
    cnt_rtrn_cost_amt_rpt = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ddr_sv_slsr_mv'


class DelCfcHoldTab(models.Model):
    invoice_id = models.BigIntegerField()
    hold_lookup_code = models.CharField(max_length=25)

    class Meta:
        managed = False
        db_table = 'del_cfc_hold_tab'


class Distributions9574881(models.Model):
    total_dist_amount = models.FloatField(blank=True, null=True)
    total_dist_base_amount = models.FloatField(blank=True, null=True)
    prepay_tax_parent_id = models.BigIntegerField(blank=True, null=True)
    cancelled_flag = models.CharField(max_length=1, blank=True, null=True)
    old_distribution_id = models.BigIntegerField(blank=True, null=True)
    old_dist_line_number = models.BigIntegerField(blank=True, null=True)
    amount_variance = models.FloatField(blank=True, null=True)
    base_amount_variance = models.FloatField(blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    rcv_charge_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_related_id = models.BigIntegerField(blank=True, null=True)
    related_retainage_dist_id = models.BigIntegerField(blank=True, null=True)
    retained_amount_remaining = models.FloatField(blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    retained_invoice_dist_id = models.BigIntegerField(blank=True, null=True)
    final_release_rounding = models.FloatField(blank=True, null=True)
    fully_paid_acctd_flag = models.CharField(max_length=1, blank=True, null=True)
    root_distribution_id = models.BigIntegerField(blank=True, null=True)
    xinv_parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    recurring_payment_id = models.BigIntegerField(blank=True, null=True)
    release_inv_dist_derived_from = models.BigIntegerField(blank=True, null=True)
    mrc_posted_flag = models.CharField(max_length=2000, blank=True, null=True)
    mrc_program_application_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_program_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_program_update_date = models.CharField(max_length=2000, blank=True, null=True)
    mrc_rate_var_ccid = models.CharField(max_length=2000, blank=True, null=True)
    mrc_request_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_date = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_rate = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_rate_type = models.CharField(max_length=2000, blank=True, null=True)
    mrc_amount_to_post = models.CharField(max_length=2000, blank=True, null=True)
    mrc_base_amount_to_post = models.CharField(max_length=2000, blank=True, null=True)
    mrc_cash_je_batch_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_je_batch_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_posted_amount = models.CharField(max_length=2000, blank=True, null=True)
    mrc_posted_base_amount = models.CharField(max_length=2000, blank=True, null=True)
    mrc_receipt_conversion_rate = models.CharField(max_length=2000, blank=True, null=True)
    credit_card_trx_id = models.BigIntegerField(blank=True, null=True)
    dist_match_type = models.CharField(max_length=25, blank=True, null=True)
    rcv_transaction_id = models.BigIntegerField(blank=True, null=True)
    invoice_distribution_id = models.BigIntegerField()
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    tax_recoverable_flag = models.CharField(max_length=1, blank=True, null=True)
    pa_cc_ar_invoice_id = models.BigIntegerField(blank=True, null=True)
    pa_cc_ar_invoice_line_num = models.BigIntegerField(blank=True, null=True)
    pa_cc_processed_code = models.CharField(max_length=1, blank=True, null=True)
    merchant_document_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_name = models.CharField(max_length=80, blank=True, null=True)
    merchant_reference = models.CharField(max_length=240, blank=True, null=True)
    merchant_tax_reg_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_taxpayer_id = models.CharField(max_length=80, blank=True, null=True)
    country_of_supply = models.CharField(max_length=5, blank=True, null=True)
    matched_uom_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    gms_burdenable_raw_cost = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    upgrade_posted_amt = models.FloatField(blank=True, null=True)
    upgrade_base_posted_amt = models.FloatField(blank=True, null=True)
    inventory_transfer_status = models.CharField(max_length=1, blank=True, null=True)
    company_prepaid_invoice_id = models.BigIntegerField(blank=True, null=True)
    cc_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_withheld_amt = models.FloatField(blank=True, null=True)
    invoice_includes_prepay_flag = models.CharField(max_length=1, blank=True, null=True)
    price_correct_inv_id = models.BigIntegerField(blank=True, null=True)
    price_correct_qty = models.FloatField(blank=True, null=True)
    pa_cmt_xface_flag = models.CharField(max_length=1, blank=True, null=True)
    cancellation_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    corrected_invoice_dist_id = models.BigIntegerField(blank=True, null=True)
    rounding_amt = models.FloatField(blank=True, null=True)
    charge_applicable_to_dist_id = models.BigIntegerField(blank=True, null=True)
    corrected_quantity = models.FloatField(blank=True, null=True)
    related_id = models.BigIntegerField(blank=True, null=True)
    asset_book_type_code = models.CharField(max_length=15, blank=True, null=True)
    asset_category_id = models.BigIntegerField(blank=True, null=True)
    distribution_class = models.CharField(max_length=30, blank=True, null=True)
    final_payment_rounding = models.FloatField(blank=True, null=True)
    final_application_rounding = models.FloatField(blank=True, null=True)
    amount_at_prepay_xrate = models.FloatField(blank=True, null=True)
    cash_basis_final_app_rounding = models.FloatField(blank=True, null=True)
    amount_at_prepay_pay_xrate = models.FloatField(blank=True, null=True)
    intended_use = models.CharField(max_length=30, blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    rec_nrec_rate = models.FloatField(blank=True, null=True)
    recovery_rate_id = models.FloatField(blank=True, null=True)
    recovery_rate_name = models.CharField(max_length=150, blank=True, null=True)
    recovery_type_code = models.CharField(max_length=30, blank=True, null=True)
    recovery_rate_code = models.CharField(max_length=30, blank=True, null=True)
    withholding_tax_code_id = models.BigIntegerField(blank=True, null=True)
    tax_already_distributed_flag = models.CharField(max_length=1, blank=True, null=True)
    summary_tax_line_id = models.FloatField(blank=True, null=True)
    taxable_amount = models.FloatField(blank=True, null=True)
    taxable_base_amount = models.FloatField(blank=True, null=True)
    extra_po_erv = models.FloatField(blank=True, null=True)
    prepay_tax_diff_amount = models.FloatField(blank=True, null=True)
    tax_code_id = models.BigIntegerField(blank=True, null=True)
    vat_code = models.CharField(max_length=15, blank=True, null=True)
    amount_includes_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_calculated_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_recovery_rate = models.FloatField(blank=True, null=True)
    tax_recovery_override_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_code_override_flag = models.CharField(max_length=1, blank=True, null=True)
    stat_amount = models.FloatField(blank=True, null=True)
    amount_to_post = models.FloatField(blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    base_amount_to_post = models.FloatField(blank=True, null=True)
    cash_je_batch_id = models.BigIntegerField(blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    je_batch_id = models.BigIntegerField(blank=True, null=True)
    parent_invoice_id = models.BigIntegerField(blank=True, null=True)
    pa_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    pa_quantity = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    posted_amount = models.FloatField(blank=True, null=True)
    posted_base_amount = models.FloatField(blank=True, null=True)
    prepay_amount_remaining = models.FloatField(blank=True, null=True)
    project_accounting_context = models.CharField(max_length=30, blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    ussgl_trx_code_context = models.CharField(max_length=30, blank=True, null=True)
    earliest_settlement_date = models.DateField(blank=True, null=True)
    req_distribution_id = models.BigIntegerField(blank=True, null=True)
    quantity_variance = models.FloatField(blank=True, null=True)
    base_quantity_variance = models.FloatField(blank=True, null=True)
    packet_id = models.BigIntegerField(blank=True, null=True)
    awt_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_group_id = models.BigIntegerField(blank=True, null=True)
    awt_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    awt_gross_amount = models.FloatField(blank=True, null=True)
    awt_invoice_id = models.BigIntegerField(blank=True, null=True)
    awt_origin_group_id = models.BigIntegerField(blank=True, null=True)
    reference_1 = models.CharField(max_length=30, blank=True, null=True)
    reference_2 = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    other_invoice_id = models.BigIntegerField(blank=True, null=True)
    awt_invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    line_group_number = models.BigIntegerField(blank=True, null=True)
    receipt_verified_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_required_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_missing_flag = models.CharField(max_length=1, blank=True, null=True)
    justification = models.CharField(max_length=240, blank=True, null=True)
    expense_group = models.CharField(max_length=80, blank=True, null=True)
    start_expense_date = models.DateField(blank=True, null=True)
    end_expense_date = models.DateField(blank=True, null=True)
    receipt_currency_code = models.CharField(max_length=15, blank=True, null=True)
    receipt_conversion_rate = models.FloatField(blank=True, null=True)
    receipt_currency_amount = models.FloatField(blank=True, null=True)
    daily_amount = models.FloatField(blank=True, null=True)
    web_parameter_id = models.FloatField(blank=True, null=True)
    adjustment_reason = models.CharField(max_length=240, blank=True, null=True)
    award_id = models.BigIntegerField(blank=True, null=True)
    mrc_accrual_posted_flag = models.CharField(max_length=2000, blank=True, null=True)
    mrc_cash_posted_flag = models.CharField(max_length=2000, blank=True, null=True)
    mrc_dist_code_combination_id = models.CharField(max_length=2000, blank=True, null=True)
    mrc_amount = models.CharField(max_length=2000, blank=True, null=True)
    mrc_base_amount = models.CharField(max_length=2000, blank=True, null=True)
    mrc_base_inv_price_variance = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_rate_variance = models.CharField(max_length=2000, blank=True, null=True)
    accounting_date = models.DateField()
    accrual_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    assets_addition_flag = models.CharField(max_length=1)
    assets_tracking_flag = models.CharField(max_length=1)
    cash_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    dist_code_combination_id = models.BigIntegerField()
    invoice_id = models.BigIntegerField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    line_type_lookup_code = models.CharField(max_length=25)
    period_name = models.CharField(max_length=15)
    set_of_books_id = models.BigIntegerField()
    accts_pay_code_combination_id = models.BigIntegerField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    base_invoice_price_variance = models.FloatField(blank=True, null=True)
    batch_id = models.BigIntegerField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    exchange_rate_variance = models.FloatField(blank=True, null=True)
    final_match_flag = models.CharField(max_length=1, blank=True, null=True)
    income_tax_region = models.CharField(max_length=10, blank=True, null=True)
    invoice_price_variance = models.FloatField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    quantity_invoiced = models.FloatField(blank=True, null=True)
    rate_var_code_combination_id = models.BigIntegerField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    type_1099 = models.CharField(max_length=10, blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    amount_encumbered = models.FloatField(blank=True, null=True)
    base_amount_encumbered = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    price_adjustment_flag = models.CharField(max_length=1, blank=True, null=True)
    price_var_code_combination_id = models.BigIntegerField(blank=True, null=True)
    quantity_unencumbered = models.FloatField(blank=True, null=True)
    pay_awt_group_id = models.BigIntegerField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'distributions_9574881'


class DjangoMigrations(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    app = models.CharField(max_length=510, blank=True, null=True)
    name = models.CharField(max_length=510, blank=True, null=True)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class EniDbiArBaseMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    rev_prim_actual_g = models.FloatField(blank=True, null=True)
    count_rev_prim_actual_g = models.FloatField(blank=True, null=True)
    rev_sec_actual_g = models.FloatField(blank=True, null=True)
    count_rev_sec_actual_g = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_ar_base_mv'


class EniDbiBomComponentsMv1(models.Model):
    bill_sequence_id = models.FloatField()
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_bom_components_mv1'


class EniDbiBomComponentsMv2(models.Model):
    component_sequence_id = models.FloatField()
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_bom_components_mv2'


class EniDbiCoAllMv(models.Model):
    change_notice = models.CharField(max_length=10, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    approval_date = models.DateField(blank=True, null=True)
    need_by_date = models.DateField(blank=True, null=True)
    assignee_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)
    change_id = models.FloatField(blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_all_mv'


class EniDbiCoDnumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    item_org_id = models.CharField(max_length=141, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    approval_date = models.DateField(blank=True, null=True)
    need_by_date = models.DateField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_dnum_mv'


class EniDbiCoNewMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_new_mv'


class EniDbiCoNumMv(models.Model):
    change_notice = models.CharField(max_length=10, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    approval_date = models.DateField(blank=True, null=True)
    need_by_date = models.DateField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    assignee_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)
    change_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_num_mv'


class EniDbiCoObjidsMv(models.Model):
    object_id = models.BigIntegerField()
    obj_name = models.CharField(max_length=430)

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_objids_mv'


class EniDbiCoSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    item_org_id = models.CharField(max_length=141, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    implemented_sum = models.FloatField(blank=True, null=True)
    implemented_sum_cnt = models.FloatField(blank=True, null=True)
    cancelled_sum = models.FloatField(blank=True, null=True)
    cancelled_sum_cnt = models.FloatField(blank=True, null=True)
    new_sum = models.FloatField(blank=True, null=True)
    new_sum_cnt = models.FloatField(blank=True, null=True)
    cycle_time_sum = models.FloatField(blank=True, null=True)
    cycle_time_sum_cnt = models.FloatField(blank=True, null=True)
    cycle_time_cnt = models.FloatField(blank=True, null=True)
    cycle_time_cnt_cnt = models.FloatField(blank=True, null=True)
    approve_to_impl_sum = models.FloatField(blank=True, null=True)
    approve_to_impl_sum_cnt = models.FloatField(blank=True, null=True)
    approve_to_impl_cnt = models.FloatField(blank=True, null=True)
    approve_to_impl_cnt_cnt = models.FloatField(blank=True, null=True)
    create_to_approve_sum = models.FloatField(blank=True, null=True)
    create_to_approve_sum_cnt = models.FloatField(blank=True, null=True)
    create_to_approve_cnt = models.FloatField(blank=True, null=True)
    create_to_approve_cnt_cnt = models.FloatField(blank=True, null=True)
    bucket1_sum = models.FloatField(blank=True, null=True)
    bucket1_sum_cnt = models.FloatField(blank=True, null=True)
    bucket2_sum = models.FloatField(blank=True, null=True)
    bucket2_sum_cnt = models.FloatField(blank=True, null=True)
    bucket3_sum = models.FloatField(blank=True, null=True)
    bucket3_sum_cnt = models.FloatField(blank=True, null=True)
    bucket4_sum = models.FloatField(blank=True, null=True)
    bucket4_sum_cnt = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_sum_mv'


class EniDbiCoUnionMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    item_org_id = models.CharField(max_length=141, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    source_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    implemented_sum = models.FloatField(blank=True, null=True)
    implemented_cnt = models.FloatField(blank=True, null=True)
    cancelled_sum = models.FloatField(blank=True, null=True)
    cancelled_cnt = models.FloatField(blank=True, null=True)
    new_sum = models.FloatField(blank=True, null=True)
    new_cnt = models.FloatField(blank=True, null=True)
    cycle_time_sum = models.FloatField(blank=True, null=True)
    cycle_time_cnt = models.FloatField(blank=True, null=True)
    approve_to_impl_sum = models.FloatField(blank=True, null=True)
    approve_to_impl_cnt = models.FloatField(blank=True, null=True)
    create_to_approve_sum = models.FloatField(blank=True, null=True)
    create_to_approve_cnt = models.FloatField(blank=True, null=True)
    bucket1_sum = models.FloatField(blank=True, null=True)
    bucket1_cnt = models.FloatField(blank=True, null=True)
    bucket2_sum = models.FloatField(blank=True, null=True)
    bucket2_cnt = models.FloatField(blank=True, null=True)
    bucket3_sum = models.FloatField(blank=True, null=True)
    bucket3_cnt = models.FloatField(blank=True, null=True)
    bucket4_sum = models.FloatField(blank=True, null=True)
    bucket4_cnt = models.FloatField(blank=True, null=True)
    grouping_id_ent_year_field = models.FloatField(db_column='grouping_id(ent_year_', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_co_union_mv'


class EniDbiCogsBaseMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    c_cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    c_cogs_val_sg = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_cogs_base_mv'


class EniDbiGlBaseMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    line_of_business_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    cnt_sec_actual_g = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_gl_base_mv'


class EniDbiGlBaseSumCMv(models.Model):
    parent_prod_cat_id = models.FloatField(blank=True, null=True)
    child_prod_cat_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    cnt_sec_actual_g = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_gl_base_sum_c_mv'


class EniDbiGlBaseSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    line_of_business_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    cnt_sec_actual_g = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    gid = models.FloatField(blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_gl_base_sum_mv'


class EniDbiInvBaseMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    item_master_org_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    count_ovg = models.FloatField(blank=True, null=True)
    onhand_value_b = models.FloatField(blank=True, null=True)
    count_ovb = models.FloatField(blank=True, null=True)
    intransit_value_g = models.FloatField(blank=True, null=True)
    count_ivg = models.FloatField(blank=True, null=True)
    intransit_value_b = models.FloatField(blank=True, null=True)
    count_ivb = models.FloatField(blank=True, null=True)
    wip_value_g = models.FloatField(blank=True, null=True)
    count_wvg = models.FloatField(blank=True, null=True)
    wip_value_b = models.FloatField(blank=True, null=True)
    count_wvb = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    count_i_t_v_g = models.FloatField(blank=True, null=True)
    inv_total_value_b = models.FloatField(blank=True, null=True)
    count_i_t_v_b = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    cnt_onhand_value_sg = models.FloatField(blank=True, null=True)
    intransit_value_sg = models.FloatField(blank=True, null=True)
    cnt_intransit_value_sg = models.FloatField(blank=True, null=True)
    wip_value_sg = models.FloatField(blank=True, null=True)
    cnt_wip_value_sg = models.FloatField(blank=True, null=True)
    inv_total_value_sg = models.FloatField(blank=True, null=True)
    cnt_inv_total_value_sg = models.FloatField(blank=True, null=True)
    count_total = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_inv_base_mv'


class EniDbiInvSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    cnt_onhand_value_g = models.FloatField(blank=True, null=True)
    intransit_value_g = models.FloatField(blank=True, null=True)
    cnt_intransit_value_g = models.FloatField(blank=True, null=True)
    wip_value_g = models.FloatField(blank=True, null=True)
    cnt_wip_value_g = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    cnt_inv_total_value_g = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    cnt_onhand_value_sg = models.FloatField(blank=True, null=True)
    intransit_value_sg = models.FloatField(blank=True, null=True)
    cnt_intransit_value_sg = models.FloatField(blank=True, null=True)
    wip_value_sg = models.FloatField(blank=True, null=True)
    cnt_wip_value_sg = models.FloatField(blank=True, null=True)
    inv_total_value_sg = models.FloatField(blank=True, null=True)
    cnt_inv_total_value_sg = models.FloatField(blank=True, null=True)
    count_total = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_inv_sum_mv'


class EniDbiMfgStepsJoinMv(models.Model):
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    item_id = models.FloatField()
    organization_id = models.FloatField()
    effectivity_date = models.DateField()
    disable_date = models.DateField(blank=True, null=True)
    mfgsteps_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_mfg_steps_join_mv'


class EniDbiOrgMv(models.Model):
    organization_id = models.FloatField()
    master_organization_id = models.FloatField(blank=True, null=True)
    dummy_organization_id = models.FloatField()
    sum_organization_id_field = models.FloatField(db_column='sum(organization_id)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    count_organization_id_field = models.FloatField(db_column='count(organization_id)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_org_mv'


class EniDbiPartCountMv(models.Model):
    assembly_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    effectivity_date = models.DateField(blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    max_bom_level = models.FloatField(blank=True, null=True)
    part_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_part_count_mv'


class EniDbiPrcSum1Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    rev_amount = models.FloatField(blank=True, null=True)
    cnt_rev_amount = models.FloatField(blank=True, null=True)
    rev_sec_amount = models.FloatField(blank=True, null=True)
    cnt_rev_sec_amount = models.FloatField(blank=True, null=True)
    exp_amount = models.FloatField(blank=True, null=True)
    cnt_exp_amount = models.FloatField(blank=True, null=True)
    exp_sec_amount = models.FloatField(blank=True, null=True)
    cnt_exp_sec_amount = models.FloatField(blank=True, null=True)
    cogs_amount = models.FloatField(blank=True, null=True)
    cnt_cogs_amount = models.FloatField(blank=True, null=True)
    cogs_sec_amount = models.FloatField(blank=True, null=True)
    cnt_cogs_sec_amount = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'eni_dbi_prc_sum1_mv'


class EniDbiPrcSum2Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=2, blank=True, null=True)
    rev_amount = models.FloatField(blank=True, null=True)
    cnt_rev_amount = models.FloatField(blank=True, null=True)
    rev_sec_amount = models.FloatField(blank=True, null=True)
    cnt_rev_sec_amount = models.FloatField(blank=True, null=True)
    exp_amount = models.FloatField(blank=True, null=True)
    cnt_exp_amount = models.FloatField(blank=True, null=True)
    exp_sec_amount = models.FloatField(blank=True, null=True)
    cnt_exp_sec_amount = models.FloatField(blank=True, null=True)
    cogs_amount = models.FloatField(blank=True, null=True)
    cnt_cogs_amount = models.FloatField(blank=True, null=True)
    cogs_sec_amount = models.FloatField(blank=True, null=True)
    cnt_cogs_sec_amount = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_prc_sum2_mv'


class EniDbiPrcUnionMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    rev_prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_rev_prim_actual_g = models.FloatField(blank=True, null=True)
    rev_sec_actual_g = models.FloatField(blank=True, null=True)
    cnt_rev_sec_actual_g = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    cnt_sec_actual_g = models.FloatField(blank=True, null=True)
    cogs_value_g = models.FloatField(blank=True, null=True)
    cnt_cogs_value_g = models.FloatField(blank=True, null=True)
    cogs_value_sg = models.FloatField(blank=True, null=True)
    cnt_cogs_value_sg = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    cnt_total_value_g = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_prc_union_mv'


class EniDbiTobMv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    booked_date = models.DateField(blank=True, null=True)
    schedule_date = models.DateField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    rank_prod_item = models.FloatField(blank=True, null=True)
    rank_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_tob_mv'


class EniDbiTooMv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    opty_id = models.FloatField()
    sales_credit_amt = models.FloatField(blank=True, null=True)
    sales_credit_amt_s = models.FloatField(blank=True, null=True)
    win_probability = models.FloatField(blank=True, null=True)
    close_date = models.DateField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    rank_prod_item = models.FloatField(blank=True, null=True)
    rank_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_dbi_too_mv'


class EniRes1Mv(models.Model):
    marker = models.FloatField(blank=True, null=True)
    resdept_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    res_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dept_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    resource_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=10, blank=True, null=True)
    bom_resource_type = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_res_1_mv'


class EniRes2Mv(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    number_resource = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_res_2_mv'


class EniRes3Mv(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=10, blank=True, null=True)
    bom_resource_type = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_res_3_mv'


class EniRes4Mv(models.Model):
    mst_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    dtl_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    resource_id = models.IntegerField()
    resource_code = models.CharField(max_length=16)
    organization_id = models.FloatField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    department_id = models.CharField(max_length=8, blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=16)
    disable_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_res_4_mv'


class EniRes5Mv(models.Model):
    resource_type = models.CharField(max_length=3, blank=True, null=True)
    bom_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    id = models.CharField(unique=True, max_length=122, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=16, blank=True, null=True)
    bom_resource_type = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    department_id = models.CharField(max_length=40, blank=True, null=True)
    department_fk = models.CharField(max_length=42, blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_group_fk = models.CharField(max_length=32, blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eni_res_5_mv'


class FemBalBaseSummaryMv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    natural_account_id = models.FloatField(blank=True, null=True)
    natural_account_vs_id = models.FloatField(blank=True, null=True)
    line_item_id = models.FloatField(blank=True, null=True)
    line_item_vs_id = models.FloatField(blank=True, null=True)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)
    entity_vs_id = models.FloatField(blank=True, null=True)
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_base_summary_mv'


class FemBalLiccHierL2Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_licc_hier_l2_mv'


class FemBalLiccHierL4Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    level3_id = models.FloatField()
    level4_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_licc_hier_l4_mv'


class FemBalLiexccAttrMv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    line_item_id = models.FloatField(blank=True, null=True)
    line_item_vs_id = models.FloatField(blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_liexcc_attr_mv'


class FemBalLiexprAttrMv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    line_item_id = models.FloatField(blank=True, null=True)
    line_item_vs_id = models.FloatField(blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_liexpr_attr_mv'


class FemBalLiprHierL2Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_lipr_hier_l2_mv'


class FemBalLiprHierL4Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    level3_id = models.FloatField()
    level4_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_lipr_hier_l4_mv'


class FemBalNaccHierL2Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    natural_account_vs_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_nacc_hier_l2_mv'


class FemBalNaccHierL4Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    level3_id = models.FloatField()
    level4_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_nacc_hier_l4_mv'


class FemBalNaexccAttrMv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    company_cost_center_org_vs_id = models.FloatField(blank=True, null=True)
    natural_account_id = models.FloatField(blank=True, null=True)
    natural_account_vs_id = models.FloatField(blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_naexcc_attr_mv'


class FemBalNaexprAttrMv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    natural_account_id = models.FloatField(blank=True, null=True)
    natural_account_vs_id = models.FloatField(blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_naexpr_attr_mv'


class FemBalNaprHierL2Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_napr_hier_l2_mv'


class FemBalNaprHierL4Mv(models.Model):
    ledger_id = models.FloatField()
    dataset_code = models.FloatField()
    cal_period_id = models.FloatField()
    currency_code = models.CharField(max_length=15)
    product_id = models.FloatField(blank=True, null=True)
    product_vs_id = models.FloatField(blank=True, null=True)
    value_set_id = models.FloatField()
    object_id = models.FloatField()
    object_definition_id = models.FloatField()
    level1_id = models.FloatField()
    level2_id = models.FloatField()
    level3_id = models.FloatField()
    level4_id = models.FloatField()
    xtd_balance_e = models.FloatField(blank=True, null=True)
    xtd_balance_f = models.FloatField(blank=True, null=True)
    qtd_balance_e = models.FloatField(blank=True, null=True)
    qtd_balance_f = models.FloatField(blank=True, null=True)
    ytd_balance_e = models.FloatField(blank=True, null=True)
    ytd_balance_f = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ytd_credit_balance_e = models.FloatField(blank=True, null=True)
    ytd_debit_balance_e = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_bal_napr_hier_l4_mv'


class FemIntgDimHierC1Gt(models.Model):
    parent_depth_num = models.FloatField(blank=True, null=True)
    parent_display_code = models.CharField(max_length=150, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    child_depth_num = models.FloatField(blank=True, null=True)
    child_display_code = models.CharField(max_length=150, blank=True, null=True)
    child_id = models.FloatField(blank=True, null=True)
    single_depth_flag = models.CharField(max_length=1, blank=True, null=True)
    display_order_num = models.FloatField(blank=True, null=True)
    dimension_group_id = models.FloatField(blank=True, null=True)
    child_leaf_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_dim_hier_c1_gt'


class FemIntgDimHierC2Gt(models.Model):
    parent_depth_num = models.FloatField(blank=True, null=True)
    parent_display_code = models.CharField(max_length=150, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    child_depth_num = models.FloatField(blank=True, null=True)
    child_display_code = models.CharField(max_length=150, blank=True, null=True)
    child_id = models.FloatField(blank=True, null=True)
    single_depth_flag = models.CharField(max_length=1, blank=True, null=True)
    display_order_num = models.FloatField(blank=True, null=True)
    dimension_group_id = models.FloatField(blank=True, null=True)
    child_leaf_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_dim_hier_c2_gt'


class FemIntgDimHierC3Gt(models.Model):
    parent_depth_num = models.FloatField(blank=True, null=True)
    parent_display_code = models.CharField(max_length=150, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    child_depth_num = models.FloatField(blank=True, null=True)
    child_display_code = models.CharField(max_length=150, blank=True, null=True)
    child_id = models.FloatField(blank=True, null=True)
    single_depth_flag = models.CharField(max_length=1, blank=True, null=True)
    display_order_num = models.FloatField(blank=True, null=True)
    dimension_group_id = models.FloatField(blank=True, null=True)
    child_leaf_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_dim_hier_c3_gt'


class FemIntgDimHierC4Gt(models.Model):
    parent_depth_num = models.FloatField(blank=True, null=True)
    parent_display_code = models.CharField(max_length=150, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    child_depth_num = models.FloatField(blank=True, null=True)
    child_display_code = models.CharField(max_length=150, blank=True, null=True)
    child_id = models.FloatField(blank=True, null=True)
    single_depth_flag = models.CharField(max_length=1, blank=True, null=True)
    display_order_num = models.FloatField(blank=True, null=True)
    dimension_group_id = models.FloatField(blank=True, null=True)
    child_leaf_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_dim_hier_c4_gt'


class FemIntgDimHierC5Gt(models.Model):
    parent_depth_num = models.FloatField(blank=True, null=True)
    parent_display_code = models.CharField(max_length=150, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    child_depth_num = models.FloatField(blank=True, null=True)
    child_display_code = models.CharField(max_length=150, blank=True, null=True)
    child_id = models.FloatField(blank=True, null=True)
    single_depth_flag = models.CharField(max_length=1, blank=True, null=True)
    display_order_num = models.FloatField(blank=True, null=True)
    dimension_group_id = models.FloatField(blank=True, null=True)
    child_leaf_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_dim_hier_c5_gt'


class FemIntgGlWrtbkBalGt(models.Model):
    row_id = models.TextField(blank=True, null=True)  # This field type is a guess.
    code_combination_id = models.BigIntegerField(blank=True, null=True)
    company_cost_center_org_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    currency_type_code = models.CharField(max_length=30, blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    cost_object_id = models.FloatField(blank=True, null=True)
    financial_elem_id = models.FloatField(blank=True, null=True)
    product_id = models.FloatField(blank=True, null=True)
    natural_account_id = models.FloatField(blank=True, null=True)
    channel_id = models.FloatField(blank=True, null=True)
    line_item_id = models.FloatField(blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)
    intercompany_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    user_dim1_id = models.FloatField(blank=True, null=True)
    user_dim2_id = models.FloatField(blank=True, null=True)
    user_dim3_id = models.FloatField(blank=True, null=True)
    user_dim4_id = models.FloatField(blank=True, null=True)
    user_dim5_id = models.FloatField(blank=True, null=True)
    user_dim6_id = models.FloatField(blank=True, null=True)
    user_dim7_id = models.FloatField(blank=True, null=True)
    user_dim8_id = models.FloatField(blank=True, null=True)
    user_dim9_id = models.FloatField(blank=True, null=True)
    user_dim10_id = models.FloatField(blank=True, null=True)
    ptd_debit_balance_e = models.FloatField(blank=True, null=True)
    ptd_credit_balance_e = models.FloatField(blank=True, null=True)
    vs_mapped_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_intg_gl_wrtbk_bal_gt'


class FemLnItemsAttrdMv(models.Model):
    line_item_id = models.FloatField()
    value_set_id = models.FloatField()
    line_item_display_code = models.CharField(max_length=150)
    dimension_group_id = models.IntegerField(blank=True, null=True)
    dimension_group_display_code = models.CharField(max_length=150, blank=True, null=True)
    enabled_flag = models.CharField(max_length=1)
    read_only_flag = models.CharField(max_length=1)
    personal_flag = models.CharField(max_length=1)
    better_flag = models.CharField(max_length=30, blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    recon_leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    source_system_code = models.CharField(max_length=150, blank=True, null=True)
    default_agg_method = models.CharField(max_length=30, blank=True, null=True)
    default_number_format = models.CharField(max_length=1000, blank=True, null=True)
    monthly_accrual_basis = models.CharField(max_length=150, blank=True, null=True)
    time_agg_method = models.CharField(max_length=30, blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_ln_items_attrd_mv'


class FemNatAcctsAttrdMv(models.Model):
    natural_account_id = models.FloatField()
    value_set_id = models.FloatField()
    natural_account_display_code = models.CharField(max_length=150)
    dimension_group_id = models.IntegerField(blank=True, null=True)
    dimension_group_display_code = models.CharField(max_length=150, blank=True, null=True)
    enabled_flag = models.CharField(max_length=1)
    read_only_flag = models.CharField(max_length=1)
    personal_flag = models.CharField(max_length=1)
    budget_allowed_flag = models.CharField(max_length=30, blank=True, null=True)
    extended_account_type = models.CharField(max_length=30, blank=True, null=True)
    extended_account_sign = models.FloatField(blank=True, null=True)
    basic_account_type = models.CharField(max_length=30, blank=True, null=True)
    inventoriable_flag = models.CharField(max_length=30, blank=True, null=True)
    recon_leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    source_system_code = models.CharField(max_length=150, blank=True, null=True)
    financial_element = models.CharField(max_length=150, blank=True, null=True)
    line_item = models.CharField(max_length=150, blank=True, null=True)
    nat_acct_expense_type_code = models.CharField(max_length=30, blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fem_nat_accts_attrd_mv'


class FiiApHatyXbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_wtd_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_mtd_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_qtd_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_ytd_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_wtd_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_mtd_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_qtd_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_ytd_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_wtd_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_mtd_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_qtd_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_ytd_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_count_wtd = models.FloatField(blank=True, null=True)
    inv_on_hold_count_mtd = models.FloatField(blank=True, null=True)
    inv_on_hold_count_qtd = models.FloatField(blank=True, null=True)
    inv_on_hold_count_ytd = models.FloatField(blank=True, null=True)
    days_on_hold_wtd = models.FloatField(blank=True, null=True)
    days_on_hold_mtd = models.FloatField(blank=True, null=True)
    days_on_hold_qtd = models.FloatField(blank=True, null=True)
    days_on_hold_ytd = models.FloatField(blank=True, null=True)
    no_of_holds_placed = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_haty_xb_mv'


class FiiApHcatBMv(models.Model):
    rowid_1 = models.TextField(blank=True, null=True)  # This field type is a guess.
    marker = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    variance_count = models.FloatField(blank=True, null=True)
    po_matching_count = models.FloatField(blank=True, null=True)
    invoice_count = models.FloatField(blank=True, null=True)
    user_defined_count = models.FloatField(blank=True, null=True)
    other_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hcat_b_mv'


class FiiApHcatIMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_release_flag = models.CharField(max_length=1, blank=True, null=True)
    variance_hold_count = models.FloatField(blank=True, null=True)
    variance_hold_countc = models.FloatField(blank=True, null=True)
    po_matching_hold_count = models.FloatField(blank=True, null=True)
    po_matching_hold_countc = models.FloatField(blank=True, null=True)
    invoice_hold_count = models.FloatField(blank=True, null=True)
    invoice_hold_countc = models.FloatField(blank=True, null=True)
    user_defined_hold_count = models.FloatField(blank=True, null=True)
    user_defined_hold_countc = models.FloatField(blank=True, null=True)
    other_hold_count = models.FloatField(blank=True, null=True)
    other_hold_countc = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    gid1 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hcat_i_mv'


class FiiApHcatIbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_release_flag = models.CharField(max_length=1, blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    variance_hold_count = models.FloatField(blank=True, null=True)
    variance_hold_countc = models.FloatField(blank=True, null=True)
    po_matching_hold_count = models.FloatField(blank=True, null=True)
    po_matching_hold_countc = models.FloatField(blank=True, null=True)
    invoice_hold_count = models.FloatField(blank=True, null=True)
    invoice_hold_countc = models.FloatField(blank=True, null=True)
    user_defined_hold_count = models.FloatField(blank=True, null=True)
    user_defined_hold_countc = models.FloatField(blank=True, null=True)
    other_hold_count = models.FloatField(blank=True, null=True)
    other_hold_countc = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hcat_ib_mv'


class FiiApHhistBMv(models.Model):
    rowid_1 = models.TextField(blank=True, null=True)  # This field type is a guess.
    marker = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    seq_id = models.BigIntegerField(blank=True, null=True)
    hold_time_id = models.FloatField(blank=True, null=True)
    release_time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_date = models.DateField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hhist_b_mv'


class FiiApHhistIMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_time_id = models.FloatField(blank=True, null=True)
    hold_time_idc = models.FloatField(blank=True, null=True)
    hold_date = models.DateField(blank=True, null=True)
    hold_datec = models.FloatField(blank=True, null=True)
    release_time_id = models.FloatField(blank=True, null=True)
    release_time_idc = models.FloatField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)
    release_datec = models.FloatField(blank=True, null=True)
    seq_id = models.BigIntegerField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hhist_i_mv'


class FiiApHhistIbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_time_id = models.FloatField(blank=True, null=True)
    hold_date = models.DateField(blank=True, null=True)
    release_time_id = models.FloatField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)
    days_on_hold = models.FloatField(blank=True, null=True)
    sum_1_field = models.FloatField(db_column='sum(1)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    count_1_field = models.FloatField(db_column='count(1)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'fii_ap_hhist_ib_mv'


class FiiApHliaIMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_count = models.FloatField(blank=True, null=True)
    on_hold_due_count = models.FloatField(blank=True, null=True)
    days_on_hold = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_b = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_prim_g = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_sec_g = models.FloatField(blank=True, null=True)
    on_hold_past_due_amt_b = models.FloatField(blank=True, null=True)
    on_hold_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    on_hold_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    on_hold_past_due_count = models.FloatField(blank=True, null=True)
    on_hold_dis_remaining_b = models.FloatField(blank=True, null=True)
    on_hold_dis_remaining_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_remaining_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_b = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_b = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_sec_g = models.FloatField(blank=True, null=True)
    no_of_holds = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hlia_i_mv'


class FiiApHliaIbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    hold_date = models.DateField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)
    action = models.CharField(max_length=30, blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    on_hold_amount_b = models.FloatField(blank=True, null=True)
    on_hold_amount_prim_g = models.FloatField(blank=True, null=True)
    on_hold_amount_sec_g = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_b = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_prim_g = models.FloatField(blank=True, null=True)
    on_hold_payment_amount_sec_g = models.FloatField(blank=True, null=True)
    on_hold_past_due_amount_b = models.FloatField(blank=True, null=True)
    on_hold_past_due_amount_prim_g = models.FloatField(blank=True, null=True)
    on_hold_past_due_amount_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_offered_b = models.FloatField(blank=True, null=True)
    on_hold_dis_offered_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_offered_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_available_b = models.FloatField(blank=True, null=True)
    on_hold_dis_available_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_available_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_b = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_taken_sec_g = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_b = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_prim_g = models.FloatField(blank=True, null=True)
    on_hold_dis_lost_sec_g = models.FloatField(blank=True, null=True)
    no_of_holds = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_hlia_ib_mv'


class FiiApInvBMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_number = models.CharField(max_length=50, blank=True, null=True)
    invoice_type = models.CharField(max_length=25, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    entered_date = models.DateField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    days_past_due = models.FloatField(blank=True, null=True)
    trx_currency_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_amt_t = models.FloatField(blank=True, null=True)
    invoice_amt_b = models.FloatField(blank=True, null=True)
    invoice_amt_prim_g = models.FloatField(blank=True, null=True)
    invoice_amt_sec_g = models.FloatField(blank=True, null=True)
    unpaid_amt_b = models.FloatField(blank=True, null=True)
    unpaid_amt_prim_g = models.FloatField(blank=True, null=True)
    unpaid_amt_sec_g = models.FloatField(blank=True, null=True)
    past_due_amt_b = models.FloatField(blank=True, null=True)
    past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    on_hold = models.CharField(max_length=1, blank=True, null=True)
    days_on_hold = models.FloatField(blank=True, null=True)
    discount_lost_b = models.FloatField(blank=True, null=True)
    discount_lost_prim_g = models.FloatField(blank=True, null=True)
    discount_lost_sec_g = models.FloatField(blank=True, null=True)
    terms_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_inv_b_mv'


class FiiApInvPaymentsMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    check_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    payment_num = models.BigIntegerField(blank=True, null=True)
    payment_method = models.CharField(max_length=1, blank=True, null=True)
    inv_pymt_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    base_currency_code = models.CharField(max_length=25, blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=25, blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    no_days_late = models.FloatField(blank=True, null=True)
    payment_amount = models.FloatField(blank=True, null=True)
    payment_amount_b = models.FloatField(blank=True, null=True)
    prim_payment_amount = models.FloatField(blank=True, null=True)
    sec_payment_amount = models.FloatField(blank=True, null=True)
    discount_taken = models.FloatField(blank=True, null=True)
    discount_taken_b = models.FloatField(blank=True, null=True)
    prim_discount_taken = models.FloatField(blank=True, null=True)
    sec_discount_taken = models.FloatField(blank=True, null=True)
    ot_payment_amt = models.FloatField(blank=True, null=True)
    ot_payment_amt_b = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt = models.FloatField(blank=True, null=True)
    late_payment_amt = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    prim_late_payment_amt = models.FloatField(blank=True, null=True)
    sec_late_payment_amt = models.FloatField(blank=True, null=True)
    no_days_late_pp = models.FloatField(blank=True, null=True)
    payment_amount_pp = models.FloatField(blank=True, null=True)
    payment_amount_b_pp = models.FloatField(blank=True, null=True)
    prim_payment_amount_pp = models.FloatField(blank=True, null=True)
    sec_payment_amount_pp = models.FloatField(blank=True, null=True)
    ot_payment_amt_pp = models.FloatField(blank=True, null=True)
    ot_payment_amt_b_pp = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt_pp = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt_pp = models.FloatField(blank=True, null=True)
    late_payment_amt_pp = models.FloatField(blank=True, null=True)
    late_payment_amt_b_pp = models.FloatField(blank=True, null=True)
    prim_late_payment_amt_pp = models.FloatField(blank=True, null=True)
    sec_late_payment_amt_pp = models.FloatField(blank=True, null=True)
    no_days_late_pmt = models.FloatField(blank=True, null=True)
    payment_amount_pmt = models.FloatField(blank=True, null=True)
    payment_amount_b_pmt = models.FloatField(blank=True, null=True)
    prim_payment_amount_pmt = models.FloatField(blank=True, null=True)
    sec_payment_amount_pmt = models.FloatField(blank=True, null=True)
    ot_payment_amt_pmt = models.FloatField(blank=True, null=True)
    ot_payment_amt_b_pmt = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt_pmt = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt_pmt = models.FloatField(blank=True, null=True)
    late_payment_amt_pmt = models.FloatField(blank=True, null=True)
    late_payment_amt_b_pmt = models.FloatField(blank=True, null=True)
    prim_late_payment_amt_pmt = models.FloatField(blank=True, null=True)
    sec_late_payment_amt_pmt = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    no_days_late_ct = models.FloatField(blank=True, null=True)
    payment_amount_ct = models.FloatField(blank=True, null=True)
    payment_amount_b_ct = models.FloatField(blank=True, null=True)
    prim_payment_amount_ct = models.FloatField(blank=True, null=True)
    sec_payment_amount_ct = models.FloatField(blank=True, null=True)
    discount_taken_ct = models.FloatField(blank=True, null=True)
    discount_taken_b_ct = models.FloatField(blank=True, null=True)
    prim_discount_taken_ct = models.FloatField(blank=True, null=True)
    sec_discount_taken_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_b_ct = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt_ct = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_b_ct = models.FloatField(blank=True, null=True)
    prim_late_payment_amt_ct = models.FloatField(blank=True, null=True)
    sec_late_payment_amt_ct = models.FloatField(blank=True, null=True)
    no_days_late_pp_ct = models.FloatField(blank=True, null=True)
    payment_amount_pp_ct = models.FloatField(blank=True, null=True)
    payment_amount_pp_b_ct = models.FloatField(blank=True, null=True)
    prim_payment_amount_pp_ct = models.FloatField(blank=True, null=True)
    sec_payment_amount_pp_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_b_pp_ct = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_b_pp_ct = models.FloatField(blank=True, null=True)
    prim_late_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    sec_late_payment_amt_pp_ct = models.FloatField(blank=True, null=True)
    no_days_late_pmt_ct = models.FloatField(blank=True, null=True)
    payment_amount_pmt_ct = models.FloatField(blank=True, null=True)
    payment_amount_b_pmt_ct = models.FloatField(blank=True, null=True)
    prim_payment_amount_pmt_ct = models.FloatField(blank=True, null=True)
    sec_payment_amount_pmt_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    ot_payment_amt_b_pmt_ct = models.FloatField(blank=True, null=True)
    prim_ot_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    sec_ot_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    late_payment_amt_b_pmt_ct = models.FloatField(blank=True, null=True)
    prim_late_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    sec_late_payment_amt_pmt_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_inv_payments_mv'


class FiiApIvatyBMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    invoice_amt_b = models.FloatField(blank=True, null=True)
    invoice_amt_bc = models.FloatField(blank=True, null=True)
    prim_invoice_amt = models.FloatField(blank=True, null=True)
    prim_invoice_amtc = models.FloatField(blank=True, null=True)
    sec_invoice_amt = models.FloatField(blank=True, null=True)
    sec_invoice_amtc = models.FloatField(blank=True, null=True)
    invoice_entered_count = models.FloatField(blank=True, null=True)
    distribution_count = models.FloatField(blank=True, null=True)
    distribution_countc = models.FloatField(blank=True, null=True)
    e_invoice_amt_b = models.FloatField(blank=True, null=True)
    e_invoice_amt_bc = models.FloatField(blank=True, null=True)
    prim_e_invoice_amt = models.FloatField(blank=True, null=True)
    prim_e_invoice_amtc = models.FloatField(blank=True, null=True)
    sec_e_invoice_amt = models.FloatField(blank=True, null=True)
    sec_e_invoice_amtc = models.FloatField(blank=True, null=True)
    e_invoice_count = models.FloatField(blank=True, null=True)
    e_invoice_countc = models.FloatField(blank=True, null=True)
    e_distribution_count = models.FloatField(blank=True, null=True)
    e_distribution_countc = models.FloatField(blank=True, null=True)
    xml_count = models.FloatField(blank=True, null=True)
    xml_countc = models.FloatField(blank=True, null=True)
    edi_count = models.FloatField(blank=True, null=True)
    edi_countc = models.FloatField(blank=True, null=True)
    ers_count = models.FloatField(blank=True, null=True)
    ers_countc = models.FloatField(blank=True, null=True)
    isp_count = models.FloatField(blank=True, null=True)
    isp_countc = models.FloatField(blank=True, null=True)
    asbn_count = models.FloatField(blank=True, null=True)
    asbn_countc = models.FloatField(blank=True, null=True)
    other_integrated_count = models.FloatField(blank=True, null=True)
    other_integrated_countc = models.FloatField(blank=True, null=True)
    standard_count = models.FloatField(blank=True, null=True)
    standard_countc = models.FloatField(blank=True, null=True)
    withholding_count = models.FloatField(blank=True, null=True)
    withholding_countc = models.FloatField(blank=True, null=True)
    prepayment_count = models.FloatField(blank=True, null=True)
    prepayment_countc = models.FloatField(blank=True, null=True)
    credit_count = models.FloatField(blank=True, null=True)
    credit_countc = models.FloatField(blank=True, null=True)
    debit_count = models.FloatField(blank=True, null=True)
    debit_countc = models.FloatField(blank=True, null=True)
    mixed_count = models.FloatField(blank=True, null=True)
    mixed_countc = models.FloatField(blank=True, null=True)
    interest_count = models.FloatField(blank=True, null=True)
    interest_countc = models.FloatField(blank=True, null=True)
    gid1 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_ivaty_b_mv'


class FiiApIvatyXbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    invoice_amt_entered_b = models.FloatField(blank=True, null=True)
    invoice_amt_entered_bc = models.FloatField(blank=True, null=True)
    invoice_amt_entered_prim_g = models.FloatField(blank=True, null=True)
    invoice_amt_entered_prim_gc = models.FloatField(blank=True, null=True)
    invoice_amt_entered_sec_g = models.FloatField(blank=True, null=True)
    invoice_amt_entered_sec_gc = models.FloatField(blank=True, null=True)
    invoice_count_entered = models.FloatField(blank=True, null=True)
    invoice_count_enteredc = models.FloatField(blank=True, null=True)
    e_invoice_amt_b = models.FloatField(blank=True, null=True)
    e_invoice_amt_bc = models.FloatField(blank=True, null=True)
    e_invoice_amt_prim_g = models.FloatField(blank=True, null=True)
    e_invoice_amt_prim_gc = models.FloatField(blank=True, null=True)
    e_invoice_amt_sec_g = models.FloatField(blank=True, null=True)
    e_invoice_amt_sec_gc = models.FloatField(blank=True, null=True)
    e_invoice_count = models.FloatField(blank=True, null=True)
    e_invoice_countc = models.FloatField(blank=True, null=True)
    distribution_count = models.FloatField(blank=True, null=True)
    distribution_countc = models.FloatField(blank=True, null=True)
    e_distribution_count = models.FloatField(blank=True, null=True)
    e_distribution_countc = models.FloatField(blank=True, null=True)
    xml_count = models.FloatField(blank=True, null=True)
    xml_countc = models.FloatField(blank=True, null=True)
    edi_count = models.FloatField(blank=True, null=True)
    edi_countc = models.FloatField(blank=True, null=True)
    ers_count = models.FloatField(blank=True, null=True)
    ers_countc = models.FloatField(blank=True, null=True)
    isp_count = models.FloatField(blank=True, null=True)
    isp_countc = models.FloatField(blank=True, null=True)
    asbn_count = models.FloatField(blank=True, null=True)
    asbn_countc = models.FloatField(blank=True, null=True)
    other_integrated_count = models.FloatField(blank=True, null=True)
    other_integrated_countc = models.FloatField(blank=True, null=True)
    standard_count = models.FloatField(blank=True, null=True)
    standard_countc = models.FloatField(blank=True, null=True)
    withholding_count = models.FloatField(blank=True, null=True)
    withholding_countc = models.FloatField(blank=True, null=True)
    prepayment_count = models.FloatField(blank=True, null=True)
    prepayment_countc = models.FloatField(blank=True, null=True)
    credit_count = models.FloatField(blank=True, null=True)
    credit_countc = models.FloatField(blank=True, null=True)
    debit_count = models.FloatField(blank=True, null=True)
    debit_countc = models.FloatField(blank=True, null=True)
    mixed_count = models.FloatField(blank=True, null=True)
    mixed_countc = models.FloatField(blank=True, null=True)
    interest_count = models.FloatField(blank=True, null=True)
    interest_countc = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_ivaty_xb_mv'


class FiiApLiaBMv(models.Model):
    marker = models.FloatField(blank=True, null=True)
    row_id = models.TextField(blank=True, null=True)  # This field type is a guess.
    ps_row_id = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    unpaid_amt_b = models.FloatField(blank=True, null=True)
    prim_unpaid_amt = models.FloatField(blank=True, null=True)
    sec_unpaid_amt = models.FloatField(blank=True, null=True)
    unpaid_count = models.FloatField(blank=True, null=True)
    due_count = models.FloatField(blank=True, null=True)
    past_due_amt_b = models.FloatField(blank=True, null=True)
    prim_past_due_amt = models.FloatField(blank=True, null=True)
    sec_past_due_amt = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    payment_amt_b = models.FloatField(blank=True, null=True)
    prim_payment_amt = models.FloatField(blank=True, null=True)
    sec_payment_amt = models.FloatField(blank=True, null=True)
    discount_offered_b = models.FloatField(blank=True, null=True)
    prim_discount_offered = models.FloatField(blank=True, null=True)
    sec_discount_offered = models.FloatField(blank=True, null=True)
    discount_remaining_b = models.FloatField(blank=True, null=True)
    prim_discount_remaining = models.FloatField(blank=True, null=True)
    sec_discount_remaining = models.FloatField(blank=True, null=True)
    discount_taken_b = models.FloatField(blank=True, null=True)
    prim_discount_taken = models.FloatField(blank=True, null=True)
    sec_discount_taken = models.FloatField(blank=True, null=True)
    discount_lost_b = models.FloatField(blank=True, null=True)
    prim_discount_lost = models.FloatField(blank=True, null=True)
    sec_discount_lost = models.FloatField(blank=True, null=True)
    due_bucket1_b = models.FloatField(blank=True, null=True)
    prim_due_bucket1 = models.FloatField(blank=True, null=True)
    sec_due_bucket1 = models.FloatField(blank=True, null=True)
    due_bucket1_count = models.FloatField(blank=True, null=True)
    due_bucket2_b = models.FloatField(blank=True, null=True)
    prim_due_bucket2 = models.FloatField(blank=True, null=True)
    sec_due_bucket2 = models.FloatField(blank=True, null=True)
    due_bucket2_count = models.FloatField(blank=True, null=True)
    due_bucket3_b = models.FloatField(blank=True, null=True)
    prim_due_bucket3 = models.FloatField(blank=True, null=True)
    sec_due_bucket3 = models.FloatField(blank=True, null=True)
    due_bucket3_count = models.FloatField(blank=True, null=True)
    past_due_bucket1_b = models.FloatField(blank=True, null=True)
    prim_past_due_bucket1 = models.FloatField(blank=True, null=True)
    sec_past_due_bucket1 = models.FloatField(blank=True, null=True)
    past_due_bucket1_count = models.FloatField(blank=True, null=True)
    past_due_bucket2_b = models.FloatField(blank=True, null=True)
    prim_past_due_bucket2 = models.FloatField(blank=True, null=True)
    sec_past_due_bucket2 = models.FloatField(blank=True, null=True)
    past_due_bucket2_count = models.FloatField(blank=True, null=True)
    past_due_bucket3_b = models.FloatField(blank=True, null=True)
    prim_past_due_bucket3 = models.FloatField(blank=True, null=True)
    sec_past_due_bucket3 = models.FloatField(blank=True, null=True)
    past_due_bucket3_count = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b = models.FloatField(blank=True, null=True)
    prim_on_time_payment_amt = models.FloatField(blank=True, null=True)
    sec_on_time_payment_amt = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    prim_late_payment_amt = models.FloatField(blank=True, null=True)
    sec_late_payment_amt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_lia_b_mv'


class FiiApLiaIMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)
    open_amt_b = models.FloatField(blank=True, null=True)
    open_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_amt_prim_g = models.FloatField(blank=True, null=True)
    open_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_amt_sec_g = models.FloatField(blank=True, null=True)
    open_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    open_count_cnt = models.FloatField(blank=True, null=True)
    open_due_count = models.FloatField(blank=True, null=True)
    open_due_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_b = models.FloatField(blank=True, null=True)
    open_past_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_count = models.FloatField(blank=True, null=True)
    open_past_due_count_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_b = models.FloatField(blank=True, null=True)
    open_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    open_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    open_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_b = models.FloatField(blank=True, null=True)
    open_discount_offered_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_prim_g = models.FloatField(blank=True, null=True)
    open_dis_offered_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_sec_g = models.FloatField(blank=True, null=True)
    open_dis_offered_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_b = models.FloatField(blank=True, null=True)
    open_dis_remaining_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_prim_g = models.FloatField(blank=True, null=True)
    open_dis_remaining_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_sec_g = models.FloatField(blank=True, null=True)
    open_dis_remaining_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_b = models.FloatField(blank=True, null=True)
    open_dis_taken_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_prim_g = models.FloatField(blank=True, null=True)
    open_dis_taken_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_sec_g = models.FloatField(blank=True, null=True)
    open_dis_taken_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_b = models.FloatField(blank=True, null=True)
    open_dis_lost_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_prim_g = models.FloatField(blank=True, null=True)
    open_dis_lost_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_sec_g = models.FloatField(blank=True, null=True)
    open_dis_lost_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_due_bkt1_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt1_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt1_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_due_bkt1_count_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_due_bkt2_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt2_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt2_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_due_bkt2_count_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_due_bkt3_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt3_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt3_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_due_bkt3_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_count_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    late_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    late_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    late_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_op_past_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    gid1 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_lia_i_mv'


class FiiApLiaIbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    count_all = models.FloatField(blank=True, null=True)
    open_amt_b = models.FloatField(blank=True, null=True)
    open_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_amt_prim_g = models.FloatField(blank=True, null=True)
    open_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_amt_sec_g = models.FloatField(blank=True, null=True)
    open_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    open_count_cnt = models.FloatField(blank=True, null=True)
    open_due_count = models.FloatField(blank=True, null=True)
    open_due_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_b = models.FloatField(blank=True, null=True)
    open_past_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_count = models.FloatField(blank=True, null=True)
    open_past_due_count_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_b = models.FloatField(blank=True, null=True)
    open_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    open_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    open_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_b = models.FloatField(blank=True, null=True)
    open_discount_offered_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_prim_g = models.FloatField(blank=True, null=True)
    open_dis_offered_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_offered_sec_g = models.FloatField(blank=True, null=True)
    open_dis_offered_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_b = models.FloatField(blank=True, null=True)
    open_dis_remaining_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_prim_g = models.FloatField(blank=True, null=True)
    open_dis_remaining_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_remaining_sec_g = models.FloatField(blank=True, null=True)
    open_dis_remaining_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_b = models.FloatField(blank=True, null=True)
    open_dis_taken_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_prim_g = models.FloatField(blank=True, null=True)
    open_dis_taken_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_taken_sec_g = models.FloatField(blank=True, null=True)
    open_dis_taken_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_b = models.FloatField(blank=True, null=True)
    open_dis_lost_b_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_prim_g = models.FloatField(blank=True, null=True)
    open_dis_lost_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_discount_lost_sec_g = models.FloatField(blank=True, null=True)
    open_dis_lost_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_due_bkt1_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt1_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt1_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_due_bkt1_count_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_due_bkt2_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt2_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt2_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_due_bkt2_count_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_due_bkt3_b_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_due_bkt3_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_due_bkt3_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_due_bkt3_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt1_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt2_count_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_b_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_prim_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_sec_g_cnt = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_past_due_bkt3_count_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    on_time_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    late_payment_amt_b_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    late_payment_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    late_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    late_payment_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_op_past_due_amt_prim_g_cnt = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_lia_ib_mv'


class FiiApLiaKpiMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    open_amt_b = models.FloatField(blank=True, null=True)
    open_amt_prim_g = models.FloatField(blank=True, null=True)
    open_amt_sec_g = models.FloatField(blank=True, null=True)
    open_due_count = models.FloatField(blank=True, null=True)
    open_past_due_amt_b = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_count = models.FloatField(blank=True, null=True)
    open_discount_offered_b = models.FloatField(blank=True, null=True)
    open_discount_offered_prim_g = models.FloatField(blank=True, null=True)
    open_discount_offered_sec_g = models.FloatField(blank=True, null=True)
    open_discount_remaining_b = models.FloatField(blank=True, null=True)
    open_discount_remaining_prim_g = models.FloatField(blank=True, null=True)
    open_discount_remaining_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_b = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_prim_g = models.FloatField(blank=True, null=True)
    inv_on_hold_amt_sec_g = models.FloatField(blank=True, null=True)
    inv_on_hold_count = models.FloatField(blank=True, null=True)
    dd_open_due_amt_b = models.FloatField(blank=True, null=True)
    dd_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    dd_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    dd_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    dd_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    dd_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_lia_kpi_mv'


class FiiApMgtKpiMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    invoice_count_entered = models.FloatField(blank=True, null=True)
    e_invoice_count = models.FloatField(blank=True, null=True)
    paid_amt_b = models.FloatField(blank=True, null=True)
    paid_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_amt_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_sec_g = models.FloatField(blank=True, null=True)
    paid_inv_count_wtd = models.FloatField(blank=True, null=True)
    paid_inv_count_mtd = models.FloatField(blank=True, null=True)
    paid_inv_count_qtd = models.FloatField(blank=True, null=True)
    paid_inv_count_ytd = models.FloatField(blank=True, null=True)
    payment_count_wtd = models.FloatField(blank=True, null=True)
    payment_count_mtd = models.FloatField(blank=True, null=True)
    payment_count_qtd = models.FloatField(blank=True, null=True)
    payment_count_ytd = models.FloatField(blank=True, null=True)
    paid_on_time_amt_b = models.FloatField(blank=True, null=True)
    paid_on_time_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_on_time_amt_sec_g = models.FloatField(blank=True, null=True)
    paid_late_amt_b = models.FloatField(blank=True, null=True)
    paid_late_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_late_amt_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_taken_b = models.FloatField(blank=True, null=True)
    paid_dis_taken_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_taken_sec_g = models.FloatField(blank=True, null=True)
    invoice_to_payment_days = models.FloatField(blank=True, null=True)
    paid_on_time_count_wtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_mtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_qtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_ytd = models.FloatField(blank=True, null=True)
    paid_late_count_wtd = models.FloatField(blank=True, null=True)
    paid_late_count_mtd = models.FloatField(blank=True, null=True)
    paid_late_count_qtd = models.FloatField(blank=True, null=True)
    paid_late_count_ytd = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_mgt_kpi_mv'


class FiiApPaidXbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    paid_amt_b = models.FloatField(blank=True, null=True)
    paid_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_amt_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_b = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_prim_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_wtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_mtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_qtd_sec_g = models.FloatField(blank=True, null=True)
    paid_invoice_amt_ytd_sec_g = models.FloatField(blank=True, null=True)
    paid_inv_count_wtd = models.FloatField(blank=True, null=True)
    paid_inv_count_mtd = models.FloatField(blank=True, null=True)
    paid_inv_count_qtd = models.FloatField(blank=True, null=True)
    paid_inv_count_ytd = models.FloatField(blank=True, null=True)
    payment_count_wtd = models.FloatField(blank=True, null=True)
    payment_count_mtd = models.FloatField(blank=True, null=True)
    payment_count_qtd = models.FloatField(blank=True, null=True)
    payment_count_ytd = models.FloatField(blank=True, null=True)
    paid_on_time_amt_b = models.FloatField(blank=True, null=True)
    paid_on_time_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_on_time_amt_sec_g = models.FloatField(blank=True, null=True)
    paid_late_amt_b = models.FloatField(blank=True, null=True)
    paid_late_amt_prim_g = models.FloatField(blank=True, null=True)
    paid_late_amt_sec_g = models.FloatField(blank=True, null=True)
    e_payment_amt_b = models.FloatField(blank=True, null=True)
    e_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    e_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    e_payment_count = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_b = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_wtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_mtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_qtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_offered_ytd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_taken_b = models.FloatField(blank=True, null=True)
    paid_dis_taken_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_taken_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_wtd_b = models.FloatField(blank=True, null=True)
    paid_dis_lost_mtd_b = models.FloatField(blank=True, null=True)
    paid_dis_lost_qtd_b = models.FloatField(blank=True, null=True)
    paid_dis_lost_ytd_b = models.FloatField(blank=True, null=True)
    paid_dis_lost_wtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_mtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_qtd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_ytd_prim_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_wtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_mtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_qtd_sec_g = models.FloatField(blank=True, null=True)
    paid_dis_lost_ytd_sec_g = models.FloatField(blank=True, null=True)
    invoice_to_payment_days = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_paid_xb_mv'


class FiiApPayolXbMv(models.Model):
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    paid_on_time_count_wtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_mtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_qtd = models.FloatField(blank=True, null=True)
    paid_on_time_count_ytd = models.FloatField(blank=True, null=True)
    paid_late_count_wtd = models.FloatField(blank=True, null=True)
    paid_late_count_mtd = models.FloatField(blank=True, null=True)
    paid_late_count_qtd = models.FloatField(blank=True, null=True)
    paid_late_count_ytd = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_payol_xb_mv'


class FiiApPmtSchedulesMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    payment_num = models.BigIntegerField(blank=True, null=True)
    base_currency_code = models.CharField(max_length=25, blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=25, blank=True, null=True)
    original_amt = models.FloatField(blank=True, null=True)
    original_amt_b = models.FloatField(blank=True, null=True)
    prim_original_amt = models.FloatField(blank=True, null=True)
    sec_original_amt = models.FloatField(blank=True, null=True)
    past_due_amount = models.FloatField(blank=True, null=True)
    past_due_amount_b = models.FloatField(blank=True, null=True)
    prim_past_due_amount = models.FloatField(blank=True, null=True)
    sec_past_due_amount = models.FloatField(blank=True, null=True)
    amount_remaining = models.FloatField(blank=True, null=True)
    amount_remaining_b = models.FloatField(blank=True, null=True)
    prim_amount_remaining = models.FloatField(blank=True, null=True)
    sec_amount_remaining = models.FloatField(blank=True, null=True)
    discount_available = models.FloatField(blank=True, null=True)
    discount_available_b = models.FloatField(blank=True, null=True)
    prim_discount_available = models.FloatField(blank=True, null=True)
    sec_discount_available = models.FloatField(blank=True, null=True)
    discount_lost = models.FloatField(blank=True, null=True)
    discount_lost_b = models.FloatField(blank=True, null=True)
    prim_discount_lost = models.FloatField(blank=True, null=True)
    sec_discount_lost = models.FloatField(blank=True, null=True)
    discount_taken = models.FloatField(blank=True, null=True)
    discount_taken_b = models.FloatField(blank=True, null=True)
    prim_discount_taken = models.FloatField(blank=True, null=True)
    sec_discount_taken = models.FloatField(blank=True, null=True)
    amount_remaining_pp = models.FloatField(blank=True, null=True)
    amount_remaining_b_pp = models.FloatField(blank=True, null=True)
    prim_amount_remaining_pp = models.FloatField(blank=True, null=True)
    sec_amount_remaining_pp = models.FloatField(blank=True, null=True)
    amount_remaining_pmt = models.FloatField(blank=True, null=True)
    amount_remaining_b_pmt = models.FloatField(blank=True, null=True)
    prim_amount_remaining_pmt = models.FloatField(blank=True, null=True)
    sec_amount_remaining_pmt = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    original_amt_ct = models.FloatField(blank=True, null=True)
    original_amt_b_ct = models.FloatField(blank=True, null=True)
    prim_original_amt_ct = models.FloatField(blank=True, null=True)
    sec_original_amt_ct = models.FloatField(blank=True, null=True)
    past_due_amount_ct = models.FloatField(blank=True, null=True)
    past_due_amount_b_ct = models.FloatField(blank=True, null=True)
    prim_past_due_amount_ct = models.FloatField(blank=True, null=True)
    sec_past_due_amount_ct = models.FloatField(blank=True, null=True)
    amount_remaining_ct = models.FloatField(blank=True, null=True)
    amount_remaining_b_ct = models.FloatField(blank=True, null=True)
    prim_amount_remaining_ct = models.FloatField(blank=True, null=True)
    sec_amount_remaining_ct = models.FloatField(blank=True, null=True)
    discount_available_ct = models.FloatField(blank=True, null=True)
    discount_available_b_ct = models.FloatField(blank=True, null=True)
    prim_discount_available_ct = models.FloatField(blank=True, null=True)
    sec_discount_available_ct = models.FloatField(blank=True, null=True)
    discount_lost_ct = models.FloatField(blank=True, null=True)
    discount_lost_b_ct = models.FloatField(blank=True, null=True)
    prim_discount_lost_ct = models.FloatField(blank=True, null=True)
    sec_discount_lost_ct = models.FloatField(blank=True, null=True)
    discount_taken_ct = models.FloatField(blank=True, null=True)
    discount_taken_b_ct = models.FloatField(blank=True, null=True)
    prim_discount_taken_ct = models.FloatField(blank=True, null=True)
    sec_discount_taken_ct = models.FloatField(blank=True, null=True)
    amount_remaining_pp_ct = models.FloatField(blank=True, null=True)
    amount_remaining_b_pp_ct = models.FloatField(blank=True, null=True)
    prim_amount_remaining_pp_ct = models.FloatField(blank=True, null=True)
    sec_amount_remaining_pp_ct = models.FloatField(blank=True, null=True)
    amount_remaining_pmt_ct = models.FloatField(blank=True, null=True)
    amount_remaining_b_pmt_ct = models.FloatField(blank=True, null=True)
    prim_amount_remaining_pmt_ct = models.FloatField(blank=True, null=True)
    sec_amount_remaining_pmt_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_pmt_schedules_mv'


class FiiApRatesGt(models.Model):
    trx_currency = models.CharField(max_length=15, blank=True, null=True)
    func_currency = models.CharField(max_length=15, blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    functional_mau = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ap_rates_gt'


class FiiArBillingActAgrtMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    inv_ba_amount_func = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec = models.FloatField(blank=True, null=True)
    inv_ba_count = models.FloatField(blank=True, null=True)
    dm_ba_amount_func = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec = models.FloatField(blank=True, null=True)
    dm_ba_count = models.FloatField(blank=True, null=True)
    cb_ba_amount_func = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec = models.FloatField(blank=True, null=True)
    cb_ba_count = models.FloatField(blank=True, null=True)
    br_ba_amount_func = models.FloatField(blank=True, null=True)
    br_ba_amount_prim = models.FloatField(blank=True, null=True)
    br_ba_amount_sec = models.FloatField(blank=True, null=True)
    br_ba_count = models.FloatField(blank=True, null=True)
    dep_ba_amount_func = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec = models.FloatField(blank=True, null=True)
    dep_ba_count = models.FloatField(blank=True, null=True)
    cm_ba_amount_func = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec = models.FloatField(blank=True, null=True)
    cm_ba_count = models.FloatField(blank=True, null=True)
    inv_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    inv_ba_count_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dm_ba_count_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cb_ba_count_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    br_ba_count_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dep_ba_count_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cm_ba_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_billing_act_agrt_mv'


class FiiArBillingActBaseMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    inv_ba_amount_func = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec = models.FloatField(blank=True, null=True)
    inv_ba_count = models.FloatField(blank=True, null=True)
    dm_ba_amount_func = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec = models.FloatField(blank=True, null=True)
    dm_ba_count = models.FloatField(blank=True, null=True)
    cb_ba_amount_func = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec = models.FloatField(blank=True, null=True)
    cb_ba_count = models.FloatField(blank=True, null=True)
    br_ba_amount_func = models.FloatField(blank=True, null=True)
    br_ba_amount_prim = models.FloatField(blank=True, null=True)
    br_ba_amount_sec = models.FloatField(blank=True, null=True)
    br_ba_count = models.FloatField(blank=True, null=True)
    dep_ba_amount_func = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec = models.FloatField(blank=True, null=True)
    dep_ba_count = models.FloatField(blank=True, null=True)
    cm_ba_amount_func = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec = models.FloatField(blank=True, null=True)
    cm_ba_count = models.FloatField(blank=True, null=True)
    inv_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    inv_ba_count_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dm_ba_count_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cb_ba_count_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    br_ba_count_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dep_ba_count_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cm_ba_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_billing_act_base_mv'


class FiiArDimensionsMv(models.Model):
    umarker = models.CharField(max_length=10, blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    site_use_id = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    dummy_cnt_for_fast_refresh = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_dimensions_mv'


class FiiArDisputesAgrtMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    current_dispute_amount_func = models.FloatField(blank=True, null=True)
    current_dispute_amount_prim = models.FloatField(blank=True, null=True)
    current_dispute_amount_sec = models.FloatField(blank=True, null=True)
    current_dispute_count = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_func = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_prim = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_sec = models.FloatField(blank=True, null=True)
    past_due_dispute_count = models.FloatField(blank=True, null=True)
    total_dispute_amount_func = models.FloatField(blank=True, null=True)
    total_dispute_amount_prim = models.FloatField(blank=True, null=True)
    total_dispute_amount_sec = models.FloatField(blank=True, null=True)
    current_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_dispute_count_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_count_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_disputes_agrt_mv'


class FiiArDisputesBaseMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    current_dispute_amount_func = models.FloatField(blank=True, null=True)
    current_dispute_amount_prim = models.FloatField(blank=True, null=True)
    current_dispute_amount_sec = models.FloatField(blank=True, null=True)
    current_dispute_count = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_func = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_prim = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_sec = models.FloatField(blank=True, null=True)
    past_due_dispute_count = models.FloatField(blank=True, null=True)
    total_dispute_amount_func = models.FloatField(blank=True, null=True)
    total_dispute_amount_prim = models.FloatField(blank=True, null=True)
    total_dispute_amount_sec = models.FloatField(blank=True, null=True)
    current_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_dispute_count_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_count_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_disputes_base_mv'


class FiiArNetRecAgrtMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    header_filter_date = models.DateField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=10, blank=True, null=True)
    current_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_1_count = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_2_count = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count = models.FloatField(blank=True, null=True)
    current_open_amount_func = models.FloatField(blank=True, null=True)
    current_open_amount_prim = models.FloatField(blank=True, null=True)
    current_open_amount_sec = models.FloatField(blank=True, null=True)
    current_open_count = models.FloatField(blank=True, null=True)
    past_due_open_amount_func = models.FloatField(blank=True, null=True)
    past_due_open_amount_prim = models.FloatField(blank=True, null=True)
    past_due_open_amount_sec = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_sec = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec = models.FloatField(blank=True, null=True)
    total_open_amount_func = models.FloatField(blank=True, null=True)
    total_open_amount_prim = models.FloatField(blank=True, null=True)
    total_open_amount_sec = models.FloatField(blank=True, null=True)
    total_open_count = models.FloatField(blank=True, null=True)
    inv_amount_func = models.FloatField(blank=True, null=True)
    inv_amount_prim = models.FloatField(blank=True, null=True)
    inv_amount_sec = models.FloatField(blank=True, null=True)
    dm_amount_func = models.FloatField(blank=True, null=True)
    dm_amount_prim = models.FloatField(blank=True, null=True)
    dm_amount_sec = models.FloatField(blank=True, null=True)
    cb_amount_func = models.FloatField(blank=True, null=True)
    cb_amount_prim = models.FloatField(blank=True, null=True)
    cb_amount_sec = models.FloatField(blank=True, null=True)
    br_amount_func = models.FloatField(blank=True, null=True)
    br_amount_prim = models.FloatField(blank=True, null=True)
    br_amount_sec = models.FloatField(blank=True, null=True)
    dep_amount_func = models.FloatField(blank=True, null=True)
    dep_amount_prim = models.FloatField(blank=True, null=True)
    dep_amount_sec = models.FloatField(blank=True, null=True)
    on_account_credit_amount_func = models.FloatField(blank=True, null=True)
    on_account_credit_amount_prim = models.FloatField(blank=True, null=True)
    on_account_credit_amount_sec = models.FloatField(blank=True, null=True)
    unapp_dep_amount_func = models.FloatField(blank=True, null=True)
    unapp_dep_amount_prim = models.FloatField(blank=True, null=True)
    unapp_dep_amount_sec = models.FloatField(blank=True, null=True)
    app_amount_func = models.FloatField(blank=True, null=True)
    app_amount_prim = models.FloatField(blank=True, null=True)
    app_amount_sec = models.FloatField(blank=True, null=True)
    app_count = models.FloatField(blank=True, null=True)
    on_account_cash_amount_func = models.FloatField(blank=True, null=True)
    on_account_cash_amount_prim = models.FloatField(blank=True, null=True)
    on_account_cash_amount_sec = models.FloatField(blank=True, null=True)
    prepayment_amount_func = models.FloatField(blank=True, null=True)
    prepayment_amount_prim = models.FloatField(blank=True, null=True)
    prepayment_amount_sec = models.FloatField(blank=True, null=True)
    claim_amount_func = models.FloatField(blank=True, null=True)
    claim_amount_prim = models.FloatField(blank=True, null=True)
    claim_amount_sec = models.FloatField(blank=True, null=True)
    rev_amount_func = models.FloatField(blank=True, null=True)
    rev_amount_prim = models.FloatField(blank=True, null=True)
    rev_amount_sec = models.FloatField(blank=True, null=True)
    rev_count = models.FloatField(blank=True, null=True)
    total_receipt_amount_func = models.FloatField(blank=True, null=True)
    total_receipt_amount_prim = models.FloatField(blank=True, null=True)
    total_receipt_amount_sec = models.FloatField(blank=True, null=True)
    total_receipt_count = models.FloatField(blank=True, null=True)
    earned_discount_amount_func = models.FloatField(blank=True, null=True)
    earned_discount_amount_prim = models.FloatField(blank=True, null=True)
    earned_discount_amount_sec = models.FloatField(blank=True, null=True)
    unearned_discount_amount_func = models.FloatField(blank=True, null=True)
    unearned_discount_amount_prim = models.FloatField(blank=True, null=True)
    unearned_discount_amount_sec = models.FloatField(blank=True, null=True)
    avg_dd_num_func = models.FloatField(blank=True, null=True)
    avg_dd_num_prim = models.FloatField(blank=True, null=True)
    avg_dd_num_sec = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec = models.FloatField(blank=True, null=True)
    billed_amount_func = models.FloatField(blank=True, null=True)
    billed_amount_prim = models.FloatField(blank=True, null=True)
    billed_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_amount_func = models.FloatField(blank=True, null=True)
    billing_activity_amount_prim = models.FloatField(blank=True, null=True)
    billing_activity_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_count = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count_ct = models.FloatField(blank=True, null=True)
    current_open_amt_func_ct = models.FloatField(blank=True, null=True)
    current_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_open_count_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_count_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec_ct = models.FloatField(blank=True, null=True)
    total_open_amt_func_ct = models.FloatField(blank=True, null=True)
    total_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_open_count_ct = models.FloatField(blank=True, null=True)
    inv_amt_func_ct = models.FloatField(blank=True, null=True)
    inv_amt_prim_ct = models.FloatField(blank=True, null=True)
    inv_amt_sec_ct = models.FloatField(blank=True, null=True)
    dm_amt_func_ct = models.FloatField(blank=True, null=True)
    dm_amt_prim_ct = models.FloatField(blank=True, null=True)
    dm_amt_sec_ct = models.FloatField(blank=True, null=True)
    cb_amt_func_ct = models.FloatField(blank=True, null=True)
    cb_amt_prim_ct = models.FloatField(blank=True, null=True)
    cb_amt_sec_ct = models.FloatField(blank=True, null=True)
    br_amt_func_ct = models.FloatField(blank=True, null=True)
    br_amt_prim_ct = models.FloatField(blank=True, null=True)
    br_amt_sec_ct = models.FloatField(blank=True, null=True)
    dep_amt_func_ct = models.FloatField(blank=True, null=True)
    dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_sec_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_amt_func_ct = models.FloatField(blank=True, null=True)
    app_amt_prim_ct = models.FloatField(blank=True, null=True)
    app_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_count_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_sec_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_func_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_prim_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_sec_ct = models.FloatField(blank=True, null=True)
    claim_amt_func_ct = models.FloatField(blank=True, null=True)
    claim_amt_prim_ct = models.FloatField(blank=True, null=True)
    claim_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_amt_func_ct = models.FloatField(blank=True, null=True)
    rev_amt_prim_ct = models.FloatField(blank=True, null=True)
    rev_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_count_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_func_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_receipt_count_ct = models.FloatField(blank=True, null=True)
    earned_dsct_amt_func_ct = models.FloatField(blank=True, null=True)
    earned_dsct_amt_prim_ct = models.FloatField(blank=True, null=True)
    earned_dsct_amt_sec_ct = models.FloatField(blank=True, null=True)
    unearned_dsct_amt_func_ct = models.FloatField(blank=True, null=True)
    unearned_dsct_amt_prim_ct = models.FloatField(blank=True, null=True)
    unearned_dsct_amt_sec_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_func_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_prim_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    billed_amt_func_ct = models.FloatField(blank=True, null=True)
    billed_amt_prim_ct = models.FloatField(blank=True, null=True)
    billed_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_func_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_prim_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_net_rec_agrt_mv'


class FiiArNetRecBaseMv(models.Model):
    umarker = models.CharField(max_length=10, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    header_filter_date = models.DateField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_1_count = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_2_count = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count = models.FloatField(blank=True, null=True)
    current_open_amount_func = models.FloatField(blank=True, null=True)
    current_open_amount_prim = models.FloatField(blank=True, null=True)
    current_open_amount_sec = models.FloatField(blank=True, null=True)
    current_open_count = models.FloatField(blank=True, null=True)
    past_due_open_amount_func = models.FloatField(blank=True, null=True)
    past_due_open_amount_prim = models.FloatField(blank=True, null=True)
    past_due_open_amount_sec = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_sec = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec = models.FloatField(blank=True, null=True)
    total_open_amount_func = models.FloatField(blank=True, null=True)
    total_open_amount_prim = models.FloatField(blank=True, null=True)
    total_open_amount_sec = models.FloatField(blank=True, null=True)
    total_open_count = models.FloatField(blank=True, null=True)
    inv_amount_func = models.FloatField(blank=True, null=True)
    inv_amount_prim = models.FloatField(blank=True, null=True)
    inv_amount_sec = models.FloatField(blank=True, null=True)
    dm_amount_func = models.FloatField(blank=True, null=True)
    dm_amount_prim = models.FloatField(blank=True, null=True)
    dm_amount_sec = models.FloatField(blank=True, null=True)
    cb_amount_func = models.FloatField(blank=True, null=True)
    cb_amount_prim = models.FloatField(blank=True, null=True)
    cb_amount_sec = models.FloatField(blank=True, null=True)
    br_amount_func = models.FloatField(blank=True, null=True)
    br_amount_prim = models.FloatField(blank=True, null=True)
    br_amount_sec = models.FloatField(blank=True, null=True)
    dep_amount_func = models.FloatField(blank=True, null=True)
    dep_amount_prim = models.FloatField(blank=True, null=True)
    dep_amount_sec = models.FloatField(blank=True, null=True)
    on_account_credit_amount_func = models.FloatField(blank=True, null=True)
    on_account_credit_amount_prim = models.FloatField(blank=True, null=True)
    on_account_credit_amount_sec = models.FloatField(blank=True, null=True)
    unapp_dep_amount_func = models.FloatField(blank=True, null=True)
    unapp_dep_amount_prim = models.FloatField(blank=True, null=True)
    unapp_dep_amount_sec = models.FloatField(blank=True, null=True)
    app_amount_func = models.FloatField(blank=True, null=True)
    app_amount_prim = models.FloatField(blank=True, null=True)
    app_amount_sec = models.FloatField(blank=True, null=True)
    app_count = models.FloatField(blank=True, null=True)
    on_account_cash_amount_func = models.FloatField(blank=True, null=True)
    on_account_cash_amount_prim = models.FloatField(blank=True, null=True)
    on_account_cash_amount_sec = models.FloatField(blank=True, null=True)
    prepayment_amount_func = models.FloatField(blank=True, null=True)
    prepayment_amount_prim = models.FloatField(blank=True, null=True)
    prepayment_amount_sec = models.FloatField(blank=True, null=True)
    claim_amount_func = models.FloatField(blank=True, null=True)
    claim_amount_prim = models.FloatField(blank=True, null=True)
    claim_amount_sec = models.FloatField(blank=True, null=True)
    rev_amount_func = models.FloatField(blank=True, null=True)
    rev_amount_prim = models.FloatField(blank=True, null=True)
    rev_amount_sec = models.FloatField(blank=True, null=True)
    rev_count = models.FloatField(blank=True, null=True)
    total_receipt_amount_func = models.FloatField(blank=True, null=True)
    total_receipt_amount_prim = models.FloatField(blank=True, null=True)
    total_receipt_amount_sec = models.FloatField(blank=True, null=True)
    total_receipt_count = models.FloatField(blank=True, null=True)
    earned_discount_amount_func = models.FloatField(blank=True, null=True)
    earned_discount_amount_prim = models.FloatField(blank=True, null=True)
    earned_discount_amount_sec = models.FloatField(blank=True, null=True)
    unearned_discount_amount_func = models.FloatField(blank=True, null=True)
    unearned_discount_amount_prim = models.FloatField(blank=True, null=True)
    unearned_discount_amount_sec = models.FloatField(blank=True, null=True)
    avg_dd_num_func = models.FloatField(blank=True, null=True)
    avg_dd_num_prim = models.FloatField(blank=True, null=True)
    avg_dd_num_sec = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec = models.FloatField(blank=True, null=True)
    billed_amount_func = models.FloatField(blank=True, null=True)
    billed_amount_prim = models.FloatField(blank=True, null=True)
    billed_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_amount_func = models.FloatField(blank=True, null=True)
    billing_activity_amount_prim = models.FloatField(blank=True, null=True)
    billing_activity_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_count = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count_ct = models.FloatField(blank=True, null=True)
    current_open_amt_func_ct = models.FloatField(blank=True, null=True)
    current_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_open_count_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_count_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec_ct = models.FloatField(blank=True, null=True)
    total_open_amt_func_ct = models.FloatField(blank=True, null=True)
    total_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_open_count_ct = models.FloatField(blank=True, null=True)
    inv_amt_func_ct = models.FloatField(blank=True, null=True)
    inv_amt_prim_ct = models.FloatField(blank=True, null=True)
    inv_amt_sec_ct = models.FloatField(blank=True, null=True)
    dm_amt_func_ct = models.FloatField(blank=True, null=True)
    dm_amt_prim_ct = models.FloatField(blank=True, null=True)
    dm_amt_sec_ct = models.FloatField(blank=True, null=True)
    cb_amt_func_ct = models.FloatField(blank=True, null=True)
    cb_amt_prim_ct = models.FloatField(blank=True, null=True)
    cb_amt_sec_ct = models.FloatField(blank=True, null=True)
    br_amt_func_ct = models.FloatField(blank=True, null=True)
    br_amt_prim_ct = models.FloatField(blank=True, null=True)
    br_amt_sec_ct = models.FloatField(blank=True, null=True)
    dep_amt_func_ct = models.FloatField(blank=True, null=True)
    dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_sec_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_amt_func_ct = models.FloatField(blank=True, null=True)
    app_amt_prim_ct = models.FloatField(blank=True, null=True)
    app_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_count_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_sec_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_func_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_prim_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_sec_ct = models.FloatField(blank=True, null=True)
    claim_amt_func_ct = models.FloatField(blank=True, null=True)
    claim_amt_prim_ct = models.FloatField(blank=True, null=True)
    claim_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_amt_func_ct = models.FloatField(blank=True, null=True)
    rev_amt_prim_ct = models.FloatField(blank=True, null=True)
    rev_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_count_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_func_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_receipt_count_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_func_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_prim_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    billed_amt_func_ct = models.FloatField(blank=True, null=True)
    billed_amt_prim_ct = models.FloatField(blank=True, null=True)
    billed_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_func_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_prim_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_net_rec_base_mv'


class FiiArNetRecIntrMv(models.Model):
    umarker = models.CharField(max_length=10, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    header_filter_date = models.DateField(blank=True, null=True)
    current_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_1_count = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_2_count = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count = models.FloatField(blank=True, null=True)
    current_open_amount_func = models.FloatField(blank=True, null=True)
    current_open_amount_prim = models.FloatField(blank=True, null=True)
    current_open_amount_sec = models.FloatField(blank=True, null=True)
    current_open_count = models.FloatField(blank=True, null=True)
    past_due_open_amount_func = models.FloatField(blank=True, null=True)
    past_due_open_amount_prim = models.FloatField(blank=True, null=True)
    past_due_open_amount_sec = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_sec = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec = models.FloatField(blank=True, null=True)
    total_open_amount_func = models.FloatField(blank=True, null=True)
    total_open_amount_prim = models.FloatField(blank=True, null=True)
    total_open_amount_sec = models.FloatField(blank=True, null=True)
    total_open_count = models.FloatField(blank=True, null=True)
    inv_amount_func = models.FloatField(blank=True, null=True)
    inv_amount_prim = models.FloatField(blank=True, null=True)
    inv_amount_sec = models.FloatField(blank=True, null=True)
    dm_amount_func = models.FloatField(blank=True, null=True)
    dm_amount_prim = models.FloatField(blank=True, null=True)
    dm_amount_sec = models.FloatField(blank=True, null=True)
    cb_amount_func = models.FloatField(blank=True, null=True)
    cb_amount_prim = models.FloatField(blank=True, null=True)
    cb_amount_sec = models.FloatField(blank=True, null=True)
    br_amount_func = models.FloatField(blank=True, null=True)
    br_amount_prim = models.FloatField(blank=True, null=True)
    br_amount_sec = models.FloatField(blank=True, null=True)
    dep_amount_func = models.FloatField(blank=True, null=True)
    dep_amount_prim = models.FloatField(blank=True, null=True)
    dep_amount_sec = models.FloatField(blank=True, null=True)
    on_account_credit_amount_func = models.FloatField(blank=True, null=True)
    on_account_credit_amount_prim = models.FloatField(blank=True, null=True)
    on_account_credit_amount_sec = models.FloatField(blank=True, null=True)
    unapp_dep_amount_func = models.FloatField(blank=True, null=True)
    unapp_dep_amount_prim = models.FloatField(blank=True, null=True)
    unapp_dep_amount_sec = models.FloatField(blank=True, null=True)
    app_amount_func = models.FloatField(blank=True, null=True)
    app_amount_prim = models.FloatField(blank=True, null=True)
    app_amount_sec = models.FloatField(blank=True, null=True)
    app_count = models.FloatField(blank=True, null=True)
    on_account_cash_amount_func = models.FloatField(blank=True, null=True)
    on_account_cash_amount_prim = models.FloatField(blank=True, null=True)
    on_account_cash_amount_sec = models.FloatField(blank=True, null=True)
    prepayment_amount_func = models.FloatField(blank=True, null=True)
    prepayment_amount_prim = models.FloatField(blank=True, null=True)
    prepayment_amount_sec = models.FloatField(blank=True, null=True)
    claim_amount_func = models.FloatField(blank=True, null=True)
    claim_amount_prim = models.FloatField(blank=True, null=True)
    claim_amount_sec = models.FloatField(blank=True, null=True)
    rev_amount_func = models.FloatField(blank=True, null=True)
    rev_amount_prim = models.FloatField(blank=True, null=True)
    rev_amount_sec = models.FloatField(blank=True, null=True)
    rev_count = models.FloatField(blank=True, null=True)
    total_receipt_amount_func = models.FloatField(blank=True, null=True)
    total_receipt_amount_prim = models.FloatField(blank=True, null=True)
    total_receipt_amount_sec = models.FloatField(blank=True, null=True)
    total_receipt_count = models.FloatField(blank=True, null=True)
    earned_discount_amount_func = models.FloatField(blank=True, null=True)
    earned_discount_amount_prim = models.FloatField(blank=True, null=True)
    earned_discount_amount_sec = models.FloatField(blank=True, null=True)
    unearned_discount_amount_func = models.FloatField(blank=True, null=True)
    unearned_discount_amount_prim = models.FloatField(blank=True, null=True)
    unearned_discount_amount_sec = models.FloatField(blank=True, null=True)
    avg_dd_num_func = models.FloatField(blank=True, null=True)
    avg_dd_num_prim = models.FloatField(blank=True, null=True)
    avg_dd_num_sec = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec = models.FloatField(blank=True, null=True)
    billed_amount_func = models.FloatField(blank=True, null=True)
    billed_amount_prim = models.FloatField(blank=True, null=True)
    billed_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_amount_func = models.FloatField(blank=True, null=True)
    billing_activity_amount_prim = models.FloatField(blank=True, null=True)
    billing_activity_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_count = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count_ct = models.FloatField(blank=True, null=True)
    current_open_amt_func_ct = models.FloatField(blank=True, null=True)
    current_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_open_count_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_count_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec_ct = models.FloatField(blank=True, null=True)
    total_open_amt_func_ct = models.FloatField(blank=True, null=True)
    total_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_open_count_ct = models.FloatField(blank=True, null=True)
    inv_amt_func_ct = models.FloatField(blank=True, null=True)
    inv_amt_prim_ct = models.FloatField(blank=True, null=True)
    inv_amt_sec_ct = models.FloatField(blank=True, null=True)
    dm_amt_func_ct = models.FloatField(blank=True, null=True)
    dm_amt_prim_ct = models.FloatField(blank=True, null=True)
    dm_amt_sec_ct = models.FloatField(blank=True, null=True)
    cb_amt_func_ct = models.FloatField(blank=True, null=True)
    cb_amt_prim_ct = models.FloatField(blank=True, null=True)
    cb_amt_sec_ct = models.FloatField(blank=True, null=True)
    br_amt_func_ct = models.FloatField(blank=True, null=True)
    br_amt_prim_ct = models.FloatField(blank=True, null=True)
    br_amt_sec_ct = models.FloatField(blank=True, null=True)
    dep_amt_func_ct = models.FloatField(blank=True, null=True)
    dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_sec_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_amt_func_ct = models.FloatField(blank=True, null=True)
    app_amt_prim_ct = models.FloatField(blank=True, null=True)
    app_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_count_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_sec_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_func_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_prim_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_sec_ct = models.FloatField(blank=True, null=True)
    claim_amt_func_ct = models.FloatField(blank=True, null=True)
    claim_amt_prim_ct = models.FloatField(blank=True, null=True)
    claim_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_amt_func_ct = models.FloatField(blank=True, null=True)
    rev_amt_prim_ct = models.FloatField(blank=True, null=True)
    rev_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_count_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_func_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_receipt_count_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_func_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_prim_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    billed_amt_func_ct = models.FloatField(blank=True, null=True)
    billed_amt_prim_ct = models.FloatField(blank=True, null=True)
    billed_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_func_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_prim_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_net_rec_intr_mv'


class FiiArRctAgingAgrtMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_1_count = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_2_count = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_3_count = models.FloatField(blank=True, null=True)
    unid_amount_func = models.FloatField(blank=True, null=True)
    unid_amount_prim = models.FloatField(blank=True, null=True)
    unid_amount_sec = models.FloatField(blank=True, null=True)
    unapp_amount_func = models.FloatField(blank=True, null=True)
    unapp_amount_prim = models.FloatField(blank=True, null=True)
    unapp_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_amount_func = models.FloatField(blank=True, null=True)
    total_unapplied_amount_prim = models.FloatField(blank=True, null=True)
    total_unapplied_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_count = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    unid_amount_func_ct = models.FloatField(blank=True, null=True)
    unid_amount_prim_ct = models.FloatField(blank=True, null=True)
    unid_amount_sec_ct = models.FloatField(blank=True, null=True)
    unapp_amount_func_ct = models.FloatField(blank=True, null=True)
    unapp_amount_prim_ct = models.FloatField(blank=True, null=True)
    unapp_amount_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_func_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_rct_aging_agrt_mv'


class FiiArRctAgingBaseMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_1_count = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_2_count = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_3_count = models.FloatField(blank=True, null=True)
    unid_amount_func = models.FloatField(blank=True, null=True)
    unid_amount_prim = models.FloatField(blank=True, null=True)
    unid_amount_sec = models.FloatField(blank=True, null=True)
    unapp_amount_func = models.FloatField(blank=True, null=True)
    unapp_amount_prim = models.FloatField(blank=True, null=True)
    unapp_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_amount_func = models.FloatField(blank=True, null=True)
    total_unapplied_amount_prim = models.FloatField(blank=True, null=True)
    total_unapplied_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_count = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    unid_amt_func_ct = models.FloatField(blank=True, null=True)
    unid_amt_prim_ct = models.FloatField(blank=True, null=True)
    unid_amt_sec_ct = models.FloatField(blank=True, null=True)
    unapp_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_func_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_rct_aging_base_mv'


class FiiArRctAgingIntrMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    aging_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_1_count = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_2_count = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_3_count = models.FloatField(blank=True, null=True)
    unid_amount_func = models.FloatField(blank=True, null=True)
    unid_amount_prim = models.FloatField(blank=True, null=True)
    unid_amount_sec = models.FloatField(blank=True, null=True)
    unapp_amount_func = models.FloatField(blank=True, null=True)
    unapp_amount_prim = models.FloatField(blank=True, null=True)
    unapp_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_amount_func = models.FloatField(blank=True, null=True)
    total_unapplied_amount_prim = models.FloatField(blank=True, null=True)
    total_unapplied_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_count = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    unid_amt_func_ct = models.FloatField(blank=True, null=True)
    unid_amt_prim_ct = models.FloatField(blank=True, null=True)
    unid_amt_sec_ct = models.FloatField(blank=True, null=True)
    unapp_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_func_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_count_ct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_rct_aging_intr_mv'


class FiiArRevSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    line_of_business_id = models.FloatField(blank=True, null=True)
    manager_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    ledger_id = models.IntegerField(blank=True, null=True)
    sales_channel_code = models.CharField(max_length=30, blank=True, null=True)
    acct_currency_code = models.CharField(max_length=15, blank=True, null=True)
    count_grp = models.FloatField(blank=True, null=True)
    rev_actual_b = models.FloatField(blank=True, null=True)
    count_rev_actual_b = models.FloatField(blank=True, null=True)
    rev_prim_actual_g = models.FloatField(blank=True, null=True)
    count_rev_prim_actual_g = models.FloatField(blank=True, null=True)
    rev_sec_actual_g = models.FloatField(blank=True, null=True)
    count_rev_sec_actual_g = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_ar_rev_sum_mv'


class FiiFaExpMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    tot_amount_t = models.FloatField(blank=True, null=True)
    tot_amount_tc = models.FloatField(blank=True, null=True)
    tot_amount_b = models.FloatField(blank=True, null=True)
    tot_amount_bc = models.FloatField(blank=True, null=True)
    tot_prim_amount_g = models.FloatField(blank=True, null=True)
    tot_prim_amount_gc = models.FloatField(blank=True, null=True)
    tot_sec_amount_g = models.FloatField(blank=True, null=True)
    tot_sec_amount_gc = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    natural_account_id = models.BigIntegerField(blank=True, null=True)
    user_dim1_id = models.BigIntegerField(blank=True, null=True)
    user_dim2_id = models.BigIntegerField(blank=True, null=True)
    asset_cat_id = models.BigIntegerField(blank=True, null=True)
    asset_cat_major_id = models.BigIntegerField(blank=True, null=True)
    asset_cat_minor_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_fa_exp_mv'


class FiiGlAgrtSum2Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    fin_cat_type_code = models.CharField(max_length=30, blank=True, null=True)
    parent_fin_category_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    parent_company_dim_id = models.BigIntegerField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    parent_cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_agrt_sum2_mv'


class FiiGlAgrtSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    posted_date = models.DateField(blank=True, null=True)
    parent_fin_category_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    parent_company_dim_id = models.BigIntegerField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    parent_cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    parent_user_dim1_id = models.BigIntegerField(blank=True, null=True)
    user_dim1_id = models.BigIntegerField(blank=True, null=True)
    user_dim2_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    committed_amount_prim = models.FloatField(blank=True, null=True)
    obligated_amount_prim = models.FloatField(blank=True, null=True)
    other_amount_prim = models.FloatField(blank=True, null=True)
    baseline_amount_prim = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    committed_amount_primct = models.FloatField(blank=True, null=True)
    obligated_amount_primct = models.FloatField(blank=True, null=True)
    other_amount_primct = models.FloatField(blank=True, null=True)
    baseline_amount_primct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_agrt_sum_mv'


class FiiGlBaseMap2Mv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    fin_cat_type_code = models.CharField(max_length=30, blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_base_map2_mv'


class FiiGlBaseMapMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    posted_date = models.DateField(blank=True, null=True)
    budget_version_date = models.DateField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    user_dim1_id = models.BigIntegerField(blank=True, null=True)
    user_dim2_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    committed_amount_prim = models.FloatField(blank=True, null=True)
    obligated_amount_prim = models.FloatField(blank=True, null=True)
    other_amount_prim = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    baseline_amount_prim = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    committed_amount_primct = models.FloatField(blank=True, null=True)
    obligated_amount_primct = models.FloatField(blank=True, null=True)
    other_amount_primct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    baseline_amount_primct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_base_map_mv'


class FiiGlBaseMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    product_category_id = models.BigIntegerField(blank=True, null=True)
    cost_center_org_id = models.BigIntegerField(blank=True, null=True)
    je_source = models.CharField(max_length=25, blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    line_of_business_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    functional_currency = models.CharField(max_length=15, blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_base_mv'


class FiiGlMgmtCccMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    cost_center_org_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    line_of_business_id = models.BigIntegerField(blank=True, null=True)
    parent_fin_category_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_mgmt_ccc_mv'


class FiiGlMgmtPrdMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    product_category_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_mgmt_prd_mv'


class FiiGlMgmtSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    person_id = models.BigIntegerField(blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    line_of_business_id = models.BigIntegerField(blank=True, null=True)
    parent_fin_category_id = models.BigIntegerField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_mgmt_sum_mv'


class FiiGlTrendSumMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    budget_version_date = models.DateField(blank=True, null=True)
    posted_date = models.DateField(blank=True, null=True)
    parent_company_dim_id = models.BigIntegerField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    parent_cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    parent_fin_category_dim_id = models.BigIntegerField(blank=True, null=True)
    fin_category_dim_id = models.BigIntegerField(blank=True, null=True)
    top_node_fin_cat_type = models.CharField(max_length=10, blank=True, null=True)
    actual_b = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    committed_amount_prim = models.FloatField(blank=True, null=True)
    obligated_amount_prim = models.FloatField(blank=True, null=True)
    other_amount_prim = models.FloatField(blank=True, null=True)
    baseline_amount_prim = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    committed_amount_primct = models.FloatField(blank=True, null=True)
    obligated_amount_primct = models.FloatField(blank=True, null=True)
    other_amount_primct = models.FloatField(blank=True, null=True)
    baseline_amount_primct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_gl_trend_sum_mv'


class FiiTimeCalDayMv(models.Model):
    report_date = models.DateField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    calendar_id = models.FloatField()
    cal_period_id = models.FloatField(blank=True, null=True)
    cal_period_start_date = models.DateField()
    cal_qtr_id = models.FloatField(blank=True, null=True)
    cal_qtr_start_date = models.DateField(blank=True, null=True)
    cal_year_id = models.FloatField(blank=True, null=True)
    cal_year_start_date = models.DateField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fii_time_cal_day_mv'


class FndConcurrentRequestsBk(models.Model):
    request_id = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    request_date = models.DateField()
    requested_by = models.BigIntegerField()
    phase_code = models.CharField(max_length=1)
    status_code = models.CharField(max_length=1)
    priority_request_id = models.BigIntegerField()
    priority = models.BigIntegerField()
    requested_start_date = models.DateField()
    hold_flag = models.CharField(max_length=1)
    enforce_seriality_flag = models.CharField(max_length=1)
    single_thread_flag = models.CharField(max_length=1)
    has_sub_request = models.CharField(max_length=1)
    is_sub_request = models.CharField(max_length=1)
    implicit_code = models.CharField(max_length=1)
    update_protected = models.CharField(max_length=1)
    queue_method_code = models.CharField(max_length=1)
    argument_input_method_code = models.CharField(max_length=1)
    oracle_id = models.BigIntegerField()
    program_application_id = models.BigIntegerField()
    concurrent_program_id = models.BigIntegerField()
    responsibility_application_id = models.BigIntegerField()
    responsibility_id = models.BigIntegerField()
    number_of_arguments = models.IntegerField()
    number_of_copies = models.BigIntegerField()
    save_output_flag = models.CharField(max_length=1)
    nls_compliant = models.CharField(max_length=1)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    nls_language = models.CharField(max_length=30, blank=True, null=True)
    nls_territory = models.CharField(max_length=30, blank=True, null=True)
    printer = models.CharField(max_length=30, blank=True, null=True)
    print_style = models.CharField(max_length=30, blank=True, null=True)
    print_group = models.CharField(max_length=1, blank=True, null=True)
    request_class_application_id = models.BigIntegerField(blank=True, null=True)
    concurrent_request_class_id = models.BigIntegerField(blank=True, null=True)
    parent_request_id = models.BigIntegerField(blank=True, null=True)
    conc_login_id = models.BigIntegerField(blank=True, null=True)
    language_id = models.BigIntegerField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    req_information = models.CharField(max_length=240, blank=True, null=True)
    resubmit_interval = models.DecimalField(max_digits=15, decimal_places=10, blank=True, null=True)
    resubmit_interval_unit_code = models.CharField(max_length=30, blank=True, null=True)
    resubmit_interval_type_code = models.CharField(max_length=30, blank=True, null=True)
    resubmit_time = models.CharField(max_length=8, blank=True, null=True)
    resubmit_end_date = models.DateField(blank=True, null=True)
    resubmitted = models.CharField(max_length=1, blank=True, null=True)
    controlling_manager = models.BigIntegerField(blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_completion_date = models.DateField(blank=True, null=True)
    completion_text = models.CharField(max_length=240, blank=True, null=True)
    outcome_product = models.CharField(max_length=20, blank=True, null=True)
    outcome_code = models.BigIntegerField(blank=True, null=True)
    cpu_seconds = models.DecimalField(max_digits=15, decimal_places=3, blank=True, null=True)
    logical_ios = models.BigIntegerField(blank=True, null=True)
    physical_ios = models.BigIntegerField(blank=True, null=True)
    logfile_name = models.CharField(max_length=255, blank=True, null=True)
    logfile_node_name = models.CharField(max_length=30, blank=True, null=True)
    outfile_name = models.CharField(max_length=255, blank=True, null=True)
    outfile_node_name = models.CharField(max_length=30, blank=True, null=True)
    argument_text = models.CharField(max_length=240, blank=True, null=True)
    argument1 = models.CharField(max_length=240, blank=True, null=True)
    argument2 = models.CharField(max_length=240, blank=True, null=True)
    argument3 = models.CharField(max_length=240, blank=True, null=True)
    argument4 = models.CharField(max_length=240, blank=True, null=True)
    argument5 = models.CharField(max_length=240, blank=True, null=True)
    argument6 = models.CharField(max_length=240, blank=True, null=True)
    argument7 = models.CharField(max_length=240, blank=True, null=True)
    argument8 = models.CharField(max_length=240, blank=True, null=True)
    argument9 = models.CharField(max_length=240, blank=True, null=True)
    argument10 = models.CharField(max_length=240, blank=True, null=True)
    argument11 = models.CharField(max_length=240, blank=True, null=True)
    argument12 = models.CharField(max_length=240, blank=True, null=True)
    argument13 = models.CharField(max_length=240, blank=True, null=True)
    argument14 = models.CharField(max_length=240, blank=True, null=True)
    argument15 = models.CharField(max_length=240, blank=True, null=True)
    argument16 = models.CharField(max_length=240, blank=True, null=True)
    argument17 = models.CharField(max_length=240, blank=True, null=True)
    argument18 = models.CharField(max_length=240, blank=True, null=True)
    argument19 = models.CharField(max_length=240, blank=True, null=True)
    argument20 = models.CharField(max_length=240, blank=True, null=True)
    argument21 = models.CharField(max_length=240, blank=True, null=True)
    argument22 = models.CharField(max_length=240, blank=True, null=True)
    argument23 = models.CharField(max_length=240, blank=True, null=True)
    argument24 = models.CharField(max_length=240, blank=True, null=True)
    argument25 = models.CharField(max_length=240, blank=True, null=True)
    crm_thrshld = models.BigIntegerField(blank=True, null=True)
    crm_tstmp = models.DateField(blank=True, null=True)
    critical = models.CharField(max_length=1, blank=True, null=True)
    request_type = models.CharField(max_length=1, blank=True, null=True)
    oracle_process_id = models.CharField(max_length=30, blank=True, null=True)
    oracle_session_id = models.BigIntegerField(blank=True, null=True)
    os_process_id = models.CharField(max_length=240, blank=True, null=True)
    print_job_id = models.CharField(max_length=240, blank=True, null=True)
    output_file_type = models.CharField(max_length=4, blank=True, null=True)
    release_class_app_id = models.FloatField(blank=True, null=True)
    release_class_id = models.FloatField(blank=True, null=True)
    stale_date = models.DateField(blank=True, null=True)
    cancel_or_hold = models.CharField(max_length=1, blank=True, null=True)
    notify_on_pp_error = models.CharField(max_length=255, blank=True, null=True)
    cd_id = models.FloatField(blank=True, null=True)
    request_limit = models.CharField(max_length=1, blank=True, null=True)
    crm_release_date = models.DateField(blank=True, null=True)
    post_request_status = models.CharField(max_length=1, blank=True, null=True)
    completion_code = models.CharField(max_length=30, blank=True, null=True)
    increment_dates = models.CharField(max_length=1, blank=True, null=True)
    restart = models.CharField(max_length=1, blank=True, null=True)
    enable_trace = models.CharField(max_length=1, blank=True, null=True)
    resub_count = models.FloatField(blank=True, null=True)
    nls_codeset = models.CharField(max_length=30, blank=True, null=True)
    ofile_size = models.BigIntegerField(blank=True, null=True)
    lfile_size = models.BigIntegerField(blank=True, null=True)
    stale = models.CharField(max_length=1, blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    resource_consumer_group = models.CharField(max_length=30, blank=True, null=True)
    exp_date = models.DateField(blank=True, null=True)
    queue_app_id = models.BigIntegerField(blank=True, null=True)
    queue_id = models.BigIntegerField(blank=True, null=True)
    ops_instance = models.BigIntegerField()
    interim_status_code = models.CharField(max_length=1, blank=True, null=True)
    root_request_id = models.BigIntegerField(blank=True, null=True)
    origin = models.CharField(max_length=1, blank=True, null=True)
    nls_numeric_characters = models.CharField(max_length=2, blank=True, null=True)
    pp_start_date = models.DateField(blank=True, null=True)
    pp_end_date = models.DateField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    run_number = models.IntegerField(blank=True, null=True)
    node_name1 = models.CharField(max_length=30, blank=True, null=True)
    node_name2 = models.CharField(max_length=30, blank=True, null=True)
    connstr1 = models.CharField(max_length=255, blank=True, null=True)
    connstr2 = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fnd_concurrent_requests_bk'


class FndUserBk22052012(models.Model):
    user_id = models.BigIntegerField()
    user_name = models.CharField(max_length=100)
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    encrypted_foundation_password = models.CharField(max_length=100)
    encrypted_user_password = models.CharField(max_length=100)
    session_number = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    last_logon_date = models.DateField(blank=True, null=True)
    password_date = models.DateField(blank=True, null=True)
    password_accesses_left = models.BigIntegerField(blank=True, null=True)
    password_lifespan_accesses = models.BigIntegerField(blank=True, null=True)
    password_lifespan_days = models.BigIntegerField(blank=True, null=True)
    employee_id = models.BigIntegerField(blank=True, null=True)
    email_address = models.CharField(max_length=240, blank=True, null=True)
    fax = models.CharField(max_length=80, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    web_password = models.CharField(max_length=240, blank=True, null=True)
    user_guid = models.TextField(blank=True, null=True)  # This field type is a guess.
    gcn_code_combination_id = models.BigIntegerField(blank=True, null=True)
    person_party_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fnd_user_bk22052012'


class FvExtractDetailGt(models.Model):
    event_id = models.BigIntegerField(blank=True, null=True)
    line_number = models.BigIntegerField(blank=True, null=True)
    application_id = models.BigIntegerField(blank=True, null=True)
    fund_value = models.CharField(max_length=30, blank=True, null=True)
    fund_category = models.CharField(max_length=1, blank=True, null=True)
    fund_expired_status = models.CharField(max_length=15, blank=True, null=True)
    prior_year_flag = models.CharField(max_length=1, blank=True, null=True)
    adjustment_type = models.CharField(max_length=15, blank=True, null=True)
    net_pya_adj_amt = models.FloatField(blank=True, null=True)
    entered_pya_amt = models.FloatField(blank=True, null=True)
    entered_pya_diff_amt = models.FloatField(blank=True, null=True)
    anticipation = models.CharField(max_length=15, blank=True, null=True)
    anticipated_amt = models.FloatField(blank=True, null=True)
    unanticipated_amt = models.FloatField(blank=True, null=True)
    tcf_amt = models.FloatField(blank=True, null=True)
    unexpended_obligation = models.FloatField(blank=True, null=True)
    paid_unexpended_obligation = models.FloatField(blank=True, null=True)
    paid_received_amt = models.FloatField(blank=True, null=True)
    unpaid_unexpended_obligation = models.FloatField(blank=True, null=True)
    unpaid_received_amt = models.FloatField(blank=True, null=True)
    unpaid_open_amt = models.FloatField(blank=True, null=True)
    fund_time_frame = models.CharField(max_length=25, blank=True, null=True)
    rcv_parent_sub_ledger_id = models.FloatField(blank=True, null=True)
    account_valid_flag = models.CharField(max_length=1, blank=True, null=True)
    account_rule = models.CharField(max_length=50, blank=True, null=True)
    old_ccid = models.FloatField(blank=True, null=True)
    receivable_with_advance = models.CharField(max_length=1, blank=True, null=True)
    ent_commitment_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_obl_amount = models.FloatField(blank=True, null=True)
    acc_commitment_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_obl_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_obl_pya_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_obl_pya_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_obl_pya_off_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_obl_pya_off_amount = models.FloatField(blank=True, null=True)
    ent_anticipated_budget_amount = models.FloatField(blank=True, null=True)
    acc_anticipated_budget_amount = models.FloatField(blank=True, null=True)
    ent_unanticipated_bud_amount = models.FloatField(blank=True, null=True)
    acc_unanticipated_bud_amount = models.FloatField(blank=True, null=True)
    ent_unreserved_budget_amount = models.FloatField(blank=True, null=True)
    acc_unreserved_budget_amount = models.FloatField(blank=True, null=True)
    ent_charge_amount = models.FloatField(blank=True, null=True)
    acc_charge_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_exp_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_exp_amount = models.FloatField(blank=True, null=True)
    ent_paid_exp_amount = models.FloatField(blank=True, null=True)
    acc_paid_exp_amount = models.FloatField(blank=True, null=True)
    ar_transaction_category = models.CharField(max_length=50, blank=True, null=True)
    acc_paid_exp_pya_off_amount = models.FloatField(blank=True, null=True)
    ent_paid_exp_pya_off_amount = models.FloatField(blank=True, null=True)
    ent_paid_obl_amount = models.FloatField(blank=True, null=True)
    acc_paid_obl_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_exp_pya_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_exp_pya_amount = models.FloatField(blank=True, null=True)
    ent_unpaid_exp_pya_off_amount = models.FloatField(blank=True, null=True)
    acc_unpaid_exp_pya_off_amount = models.FloatField(blank=True, null=True)
    exp_appropriations_amount = models.FloatField(blank=True, null=True)
    ent_paid_exp_pya_amount = models.FloatField(blank=True, null=True)
    acc_paid_exp_pya_amount = models.FloatField(blank=True, null=True)
    acc_expended_approp_amount = models.FloatField(blank=True, null=True)
    ent_expended_approp_amount = models.FloatField(blank=True, null=True)
    treasury_symbol_id = models.FloatField(blank=True, null=True)
    direct_or_reimb = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'fv_extract_detail_gt'


class GatReqQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.TextField(blank=True, null=True)  # This field type is a guess.
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'gat_req_qtbl'


class GlAccessSetLedgers(models.Model):
    access_set_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    access_privilege_code = models.CharField(max_length=1, blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gl_access_set_ledgers'


class GlBcPeriodMapBkp(models.Model):
    ledger_id = models.BigIntegerField()
    boundary_code = models.CharField(max_length=1)
    transaction_period_name = models.CharField(max_length=15)
    actual_flag = models.CharField(max_length=1)
    budget_version_id = models.BigIntegerField(blank=True, null=True)
    query_period_name = models.CharField(max_length=15)
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_login = models.FloatField()
    request_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gl_bc_period_map_bkp'


class GmfBatchRequirementsGtmp(models.Model):
    vib_id = models.FloatField(blank=True, null=True)
    batch_id = models.FloatField()
    product_item_id = models.FloatField()
    prod_material_detail_id = models.FloatField()
    batchstep_id = models.FloatField(blank=True, null=True)
    ingredient_item_id = models.FloatField(blank=True, null=True)
    ing_material_detail_id = models.FloatField(blank=True, null=True)
    resources = models.CharField(max_length=32, blank=True, null=True)
    batchstep_resource_id = models.FloatField(blank=True, null=True)
    derived_cost_alloc = models.FloatField()
    required_doc_qty = models.FloatField()
    delete_mark = models.IntegerField()
    created_by = models.FloatField()
    creation_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_date = models.DateField()
    last_update_login = models.FloatField(blank=True, null=True)
    requirement_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    vib_profile_value = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gmf_batch_requirements_gtmp'


class GsgApSelectedInvoicesAll(models.Model):
    checkrun_name = models.CharField(max_length=255)
    invoice_id = models.BigIntegerField()
    payment_num = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    vendor_id = models.BigIntegerField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    vendor_num = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    customer_num = models.CharField(max_length=25, blank=True, null=True)
    address_line1 = models.CharField(max_length=240, blank=True, null=True)
    address_line2 = models.CharField(max_length=240, blank=True, null=True)
    address_line3 = models.CharField(max_length=240, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=150, blank=True, null=True)
    zip = models.CharField(max_length=60, blank=True, null=True)
    province = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    withholding_status_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    attention_ar_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    voucher_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    amount_paid = models.FloatField(blank=True, null=True)
    discount_amount_taken = models.FloatField(blank=True, null=True)
    ap_ccid = models.BigIntegerField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    discount_date = models.DateField(blank=True, null=True)
    invoice_description = models.CharField(max_length=240, blank=True, null=True)
    payment_priority = models.IntegerField(blank=True, null=True)
    amount_remaining = models.FloatField(blank=True, null=True)
    discount_amount_remaining = models.FloatField(blank=True, null=True)
    payment_amount = models.FloatField(blank=True, null=True)
    discount_amount = models.FloatField(blank=True, null=True)
    sequence_num = models.BigIntegerField(blank=True, null=True)
    ok_to_pay_flag = models.CharField(max_length=1, blank=True, null=True)
    dont_pay_reason_code = models.CharField(max_length=25, blank=True, null=True)
    always_take_discount_flag = models.CharField(max_length=1, blank=True, null=True)
    amount_modified_flag = models.CharField(max_length=1, blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    invoice_exchange_rate = models.FloatField(blank=True, null=True)
    payment_cross_rate = models.FloatField(blank=True, null=True)
    bank_account_type = models.CharField(max_length=25, blank=True, null=True)
    original_invoice_id = models.CharField(max_length=30, blank=True, null=True)
    original_payment_num = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    bank_account_num = models.CharField(max_length=30, blank=True, null=True)
    bank_num = models.CharField(max_length=25, blank=True, null=True)
    future_pay_due_date = models.DateField(blank=True, null=True)
    exclusive_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    proposed_payment_amount = models.FloatField(blank=True, null=True)
    pay_selected_check_id = models.BigIntegerField(blank=True, null=True)
    print_selected_check_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    withholding_amount = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    dont_pay_description = models.CharField(max_length=255, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    transfer_priority = models.CharField(max_length=25, blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    address_line4 = models.CharField(max_length=240, blank=True, null=True)
    iban_number = models.CharField(max_length=40, blank=True, null=True)
    checkrun_id = models.BigIntegerField(blank=True, null=True)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    payment_currency_code = models.CharField(max_length=15, blank=True, null=True)
    payment_grouping_number = models.BigIntegerField(blank=True, null=True)
    payment_exchange_rate = models.FloatField(blank=True, null=True)
    payment_exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    payment_exchange_date = models.DateField(blank=True, null=True)
    remit_to_supplier_name = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_id = models.BigIntegerField(blank=True, null=True)
    remit_to_supplier_site = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_site_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_ap_selected_invoices_all'


class GsgDebug(models.Model):
    campo1 = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_debug'


class GsgIbyDocsPayableAll(models.Model):
    pay_proc_trxn_type_code = models.CharField(max_length=100)
    calling_app_id = models.BigIntegerField()
    calling_app_doc_ref_number = models.CharField(max_length=100)
    document_payable_id = models.BigIntegerField()
    payment_function = models.CharField(max_length=30)
    payment_date = models.DateField()
    document_date = models.DateField()
    document_type = models.CharField(max_length=30)
    document_status = models.CharField(max_length=30)
    document_currency_code = models.CharField(max_length=10)
    document_amount = models.FloatField()
    payment_currency_code = models.CharField(max_length=10)
    payment_amount = models.FloatField()
    payment_service_request_id = models.BigIntegerField()
    payment_method_code = models.CharField(max_length=30)
    exclusive_payment_flag = models.CharField(max_length=1)
    straight_through_flag = models.CharField(max_length=1)
    ext_payee_id = models.BigIntegerField()
    payee_party_id = models.BigIntegerField()
    legal_entity_id = models.BigIntegerField()
    org_id = models.BigIntegerField()
    allow_removing_document_flag = models.CharField(max_length=1)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    object_version_number = models.FloatField()
    calling_app_doc_unique_ref1 = models.CharField(max_length=100)
    calling_app_doc_unique_ref2 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref3 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref4 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref5 = models.CharField(max_length=100, blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    party_site_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.BigIntegerField(blank=True, null=True)
    beneficiary_party = models.BigIntegerField(blank=True, null=True)
    org_type = models.CharField(max_length=30)
    anticipated_value_date = models.DateField(blank=True, null=True)
    po_number = models.CharField(max_length=255, blank=True, null=True)
    document_description = models.CharField(max_length=255, blank=True, null=True)
    document_currency_tax_amount = models.FloatField(blank=True, null=True)
    document_curr_charge_amount = models.FloatField(blank=True, null=True)
    amount_withheld = models.FloatField(blank=True, null=True)
    payment_curr_discount_taken = models.FloatField(blank=True, null=True)
    discount_date = models.DateField(blank=True, null=True)
    payment_due_date = models.DateField(blank=True, null=True)
    payment_profile_id = models.BigIntegerField(blank=True, null=True)
    payment_id = models.BigIntegerField(blank=True, null=True)
    formatting_payment_id = models.BigIntegerField(blank=True, null=True)
    internal_bank_account_id = models.BigIntegerField(blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    interest_rate = models.FloatField(blank=True, null=True)
    payment_grouping_number = models.BigIntegerField(blank=True, null=True)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    remittance_message1 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message2 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message3 = models.CharField(max_length=150, blank=True, null=True)
    unique_remittance_identifier = models.CharField(max_length=30, blank=True, null=True)
    uri_check_digit = models.CharField(max_length=2, blank=True, null=True)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    payment_format_code = models.CharField(max_length=30, blank=True, null=True)
    document_sequence_id = models.FloatField(blank=True, null=True)
    document_sequence_value = models.FloatField(blank=True, null=True)
    document_category_code = models.CharField(max_length=30, blank=True, null=True)
    bank_assigned_ref_code = models.CharField(max_length=30, blank=True, null=True)
    remit_to_location_id = models.BigIntegerField(blank=True, null=True)
    completed_pmts_group_id = models.BigIntegerField(blank=True, null=True)
    rejected_docs_group_id = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    address_source = models.CharField(max_length=30, blank=True, null=True)
    employee_address_code = models.CharField(max_length=30, blank=True, null=True)
    employee_person_id = models.BigIntegerField(blank=True, null=True)
    employee_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    employee_address_id = models.BigIntegerField(blank=True, null=True)
    ext_inv_payee_id = models.BigIntegerField(blank=True, null=True)
    inv_payee_party_id = models.BigIntegerField(blank=True, null=True)
    inv_party_site_id = models.BigIntegerField(blank=True, null=True)
    inv_supplier_site_id = models.BigIntegerField(blank=True, null=True)
    inv_beneficiary_party = models.BigIntegerField(blank=True, null=True)
    relationship_id = models.BigIntegerField(blank=True, null=True)
    global_attribute_category = models.CharField(max_length=240, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=240, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_iby_docs_payable_all'


class GsgIbyPayInstructionsAll(models.Model):
    payment_instruction_id = models.BigIntegerField()
    payment_profile_id = models.BigIntegerField()
    process_type = models.CharField(max_length=30)
    payment_instruction_status = models.CharField(max_length=30)
    payments_complete_code = models.CharField(max_length=30)
    generate_sep_remit_advice_flag = models.CharField(max_length=1)
    remittance_advice_created_flag = models.CharField(max_length=1)
    regulatory_report_created_flag = models.CharField(max_length=1)
    bill_payable_flag = models.CharField(max_length=1)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    payment_count = models.BigIntegerField()
    positive_pay_file_created_flag = models.CharField(max_length=1)
    print_instruction_immed_flag = models.CharField(max_length=1)
    transmit_instr_immed_flag = models.CharField(max_length=1)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    object_version_number = models.FloatField()
    internal_bank_account_id = models.BigIntegerField(blank=True, null=True)
    pay_admin_assigned_ref_code = models.CharField(max_length=100, blank=True, null=True)
    transmission_date = models.DateField(blank=True, null=True)
    acknowledgement_date = models.DateField(blank=True, null=True)
    comments = models.CharField(max_length=240, blank=True, null=True)
    bank_assigned_ref_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    org_type = models.CharField(max_length=30, blank=True, null=True)
    payment_date = models.DateField(blank=True, null=True)
    payment_currency_code = models.CharField(max_length=10, blank=True, null=True)
    payment_service_request_id = models.BigIntegerField(blank=True, null=True)
    payment_function = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    rfc_identifier = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    payment_document_id = models.BigIntegerField(blank=True, null=True)
    printer_name = models.CharField(max_length=255, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    reference_format_code = models.CharField(max_length=30, blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    payment_method_code = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_iby_pay_instructions_all'


class GsgIbyPayServiceRequests(models.Model):
    payment_service_request_id = models.BigIntegerField()
    calling_app_id = models.BigIntegerField()
    call_app_pay_service_req_code = models.CharField(max_length=255)
    payment_service_request_status = models.CharField(max_length=30)
    process_type = models.CharField(max_length=30)
    allow_zero_payments_flag = models.CharField(max_length=1)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    object_version_number = models.FloatField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    internal_bank_account_id = models.BigIntegerField(blank=True, null=True)
    payment_profile_id = models.BigIntegerField(blank=True, null=True)
    maximum_payment_amount = models.FloatField(blank=True, null=True)
    minimum_payment_amount = models.FloatField(blank=True, null=True)
    document_rejection_level_code = models.CharField(max_length=30, blank=True, null=True)
    payment_rejection_level_code = models.CharField(max_length=30, blank=True, null=True)
    require_prop_pmts_review_flag = models.CharField(max_length=1, blank=True, null=True)
    org_type = models.CharField(max_length=30, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    create_pmt_instructions_flag = models.CharField(max_length=1, blank=True, null=True)
    payment_document_id = models.BigIntegerField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_iby_pay_service_requests'


class GsgIbyPaymentsAll(models.Model):
    payment_id = models.BigIntegerField()
    payment_method_code = models.CharField(max_length=30)
    payment_service_request_id = models.BigIntegerField()
    process_type = models.CharField(max_length=30)
    payment_status = models.CharField(max_length=30)
    payments_complete_flag = models.CharField(max_length=1)
    payment_function = models.CharField(max_length=30)
    payment_amount = models.FloatField()
    payment_currency_code = models.CharField(max_length=10)
    bill_payable_flag = models.CharField(max_length=1)
    exclusive_payment_flag = models.CharField(max_length=1)
    separate_remit_advice_req_flag = models.CharField(max_length=1)
    internal_bank_account_id = models.BigIntegerField()
    org_id = models.BigIntegerField()
    org_type = models.CharField(max_length=30)
    legal_entity_id = models.BigIntegerField()
    declare_payment_flag = models.CharField(max_length=1)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    ext_payee_id = models.BigIntegerField()
    payment_instruction_id = models.BigIntegerField(blank=True, null=True)
    payment_profile_id = models.BigIntegerField()
    pregrouped_payment_flag = models.CharField(max_length=1)
    stop_confirmed_flag = models.CharField(max_length=1)
    stop_released_flag = models.CharField(max_length=1)
    stop_request_placed_flag = models.CharField(max_length=1)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    last_update_date = models.DateField()
    object_version_number = models.FloatField()
    payee_party_id = models.BigIntegerField(blank=True, null=True)
    party_site_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.BigIntegerField(blank=True, null=True)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    payment_date = models.DateField(blank=True, null=True)
    anticipated_value_date = models.DateField(blank=True, null=True)
    declaration_amount = models.FloatField(blank=True, null=True)
    declaration_currency_code = models.CharField(max_length=10, blank=True, null=True)
    discount_amount_taken = models.FloatField(blank=True, null=True)
    payment_details = models.CharField(max_length=4000, blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    bank_charge_amount = models.FloatField(blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    remittance_message1 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message2 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message3 = models.CharField(max_length=150, blank=True, null=True)
    payment_reference_number = models.BigIntegerField(blank=True, null=True)
    paper_document_number = models.BigIntegerField(blank=True, null=True)
    bank_assigned_ref_code = models.CharField(max_length=30, blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    unique_remittance_identifier = models.CharField(max_length=30, blank=True, null=True)
    uri_check_digit = models.CharField(max_length=2, blank=True, null=True)
    bank_instruction1_code = models.CharField(max_length=30, blank=True, null=True)
    bank_instruction2_code = models.CharField(max_length=30, blank=True, null=True)
    bank_instruction_details = models.CharField(max_length=255, blank=True, null=True)
    payment_text_message1 = models.CharField(max_length=150, blank=True, null=True)
    payment_text_message2 = models.CharField(max_length=150, blank=True, null=True)
    payment_text_message3 = models.CharField(max_length=150, blank=True, null=True)
    maturity_date = models.DateField(blank=True, null=True)
    payment_due_date = models.DateField(blank=True, null=True)
    document_category_code = models.CharField(max_length=30, blank=True, null=True)
    document_sequence_id = models.FloatField(blank=True, null=True)
    document_sequence_value = models.FloatField(blank=True, null=True)
    beneficiary_party = models.BigIntegerField(blank=True, null=True)
    stop_confirmed_by = models.BigIntegerField(blank=True, null=True)
    stop_confirm_date = models.DateField(blank=True, null=True)
    stop_confirm_reason = models.CharField(max_length=240, blank=True, null=True)
    stop_confirm_reference = models.CharField(max_length=100, blank=True, null=True)
    stop_released_by = models.BigIntegerField(blank=True, null=True)
    stop_release_date = models.DateField(blank=True, null=True)
    stop_release_reason = models.CharField(max_length=240, blank=True, null=True)
    stop_release_reference = models.CharField(max_length=100, blank=True, null=True)
    stop_request_date = models.DateField(blank=True, null=True)
    stop_request_placed_by = models.BigIntegerField(blank=True, null=True)
    stop_request_reason = models.CharField(max_length=240, blank=True, null=True)
    stop_request_reference = models.CharField(max_length=100, blank=True, null=True)
    voided_by = models.BigIntegerField(blank=True, null=True)
    void_date = models.DateField(blank=True, null=True)
    void_reason = models.CharField(max_length=240, blank=True, null=True)
    remit_to_location_id = models.BigIntegerField(blank=True, null=True)
    completed_pmts_group_id = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    ext_branch_number = models.CharField(max_length=30, blank=True, null=True)
    ext_bank_number = models.CharField(max_length=30, blank=True, null=True)
    ext_bank_account_name = models.CharField(max_length=80, blank=True, null=True)
    ext_bank_account_number = models.CharField(max_length=30, blank=True, null=True)
    ext_bank_account_type = models.CharField(max_length=25, blank=True, null=True)
    ext_bank_account_iban_number = models.CharField(max_length=50, blank=True, null=True)
    payee_name = models.CharField(max_length=360, blank=True, null=True)
    payee_address1 = models.CharField(max_length=240, blank=True, null=True)
    payee_address2 = models.CharField(max_length=240, blank=True, null=True)
    payee_address3 = models.CharField(max_length=240, blank=True, null=True)
    payee_address4 = models.CharField(max_length=240, blank=True, null=True)
    payee_city = models.CharField(max_length=60, blank=True, null=True)
    payee_postal_code = models.CharField(max_length=60, blank=True, null=True)
    payee_state = models.CharField(max_length=60, blank=True, null=True)
    payee_province = models.CharField(max_length=60, blank=True, null=True)
    payee_county = models.CharField(max_length=60, blank=True, null=True)
    payee_country = models.CharField(max_length=60, blank=True, null=True)
    remit_advice_delivery_method = models.CharField(max_length=30, blank=True, null=True)
    remit_advice_email = models.CharField(max_length=255, blank=True, null=True)
    remit_advice_fax = models.CharField(max_length=100, blank=True, null=True)
    payment_profile_sys_name = models.CharField(max_length=100, blank=True, null=True)
    payment_profile_acct_name = models.CharField(max_length=100, blank=True, null=True)
    payment_process_request_name = models.CharField(max_length=255, blank=True, null=True)
    source_product = models.CharField(max_length=50, blank=True, null=True)
    payment_reason_format_value = models.CharField(max_length=80, blank=True, null=True)
    declaration_exch_rate_type = models.CharField(max_length=255, blank=True, null=True)
    declaration_format = models.CharField(max_length=100, blank=True, null=True)
    delivery_channel_format_value = models.CharField(max_length=80, blank=True, null=True)
    bank_instruction1_format_value = models.CharField(max_length=80, blank=True, null=True)
    bank_instruction2_format_value = models.CharField(max_length=80, blank=True, null=True)
    sra_delivery_method = models.CharField(max_length=100, blank=True, null=True)
    int_bank_name = models.CharField(max_length=360, blank=True, null=True)
    int_bank_number = models.CharField(max_length=30, blank=True, null=True)
    int_eft_swift_code = models.CharField(max_length=30, blank=True, null=True)
    int_bank_branch_name = models.CharField(max_length=360, blank=True, null=True)
    int_bank_branch_number = models.CharField(max_length=30, blank=True, null=True)
    int_bank_account_name = models.CharField(max_length=100, blank=True, null=True)
    int_bank_account_number = models.CharField(max_length=30, blank=True, null=True)
    int_bank_account_iban = models.CharField(max_length=50, blank=True, null=True)
    ext_bank_name = models.CharField(max_length=360, blank=True, null=True)
    ext_eft_swift_code = models.CharField(max_length=30, blank=True, null=True)
    ext_bank_branch_name = models.CharField(max_length=360, blank=True, null=True)
    org_name = models.CharField(max_length=240, blank=True, null=True)
    payer_legal_entity_name = models.CharField(max_length=240, blank=True, null=True)
    payer_le_registration_num = models.CharField(max_length=240, blank=True, null=True)
    payer_tax_registration_num = models.CharField(max_length=50, blank=True, null=True)
    payee_party_name = models.CharField(max_length=360, blank=True, null=True)
    payee_le_registration_num = models.CharField(max_length=50, blank=True, null=True)
    payee_tax_registration_num = models.CharField(max_length=50, blank=True, null=True)
    payer_party_site_name = models.CharField(max_length=240, blank=True, null=True)
    payee_address_concat = models.CharField(max_length=2000, blank=True, null=True)
    beneficiary_name = models.CharField(max_length=360, blank=True, null=True)
    payer_party_number = models.CharField(max_length=30, blank=True, null=True)
    payee_party_number = models.CharField(max_length=30, blank=True, null=True)
    payee_alternate_name = models.CharField(max_length=320, blank=True, null=True)
    payee_site_alternate_name = models.CharField(max_length=320, blank=True, null=True)
    payee_supplier_number = models.CharField(max_length=30, blank=True, null=True)
    payee_first_party_reference = models.CharField(max_length=30, blank=True, null=True)
    int_bank_branch_rfc_identifier = models.CharField(max_length=30, blank=True, null=True)
    int_bank_acct_agency_loc_code = models.CharField(max_length=30, blank=True, null=True)
    payer_abbreviated_agency_code = models.CharField(max_length=30, blank=True, null=True)
    payer_federal_us_employer_id = models.CharField(max_length=20, blank=True, null=True)
    ext_bank_acct_owner_party_id = models.CharField(max_length=360, blank=True, null=True)
    ext_bank_acct_pmt_factor_flag = models.CharField(max_length=1, blank=True, null=True)
    address_source = models.CharField(max_length=30, blank=True, null=True)
    employee_address_code = models.CharField(max_length=30, blank=True, null=True)
    employee_person_id = models.BigIntegerField(blank=True, null=True)
    employee_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    employee_address_id = models.BigIntegerField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    ext_bank_branch_party_id = models.FloatField(blank=True, null=True)
    ext_bank_alt_name = models.CharField(max_length=320, blank=True, null=True)
    ext_bank_branch_alt_name = models.CharField(max_length=320, blank=True, null=True)
    ext_bank_account_alt_name = models.CharField(max_length=320, blank=True, null=True)
    ext_bank_account_num_elec = models.CharField(max_length=100, blank=True, null=True)
    ext_bank_branch_location_id = models.FloatField(blank=True, null=True)
    ext_bank_acct_owner_party_name = models.CharField(max_length=360, blank=True, null=True)
    int_bank_branch_party_id = models.FloatField(blank=True, null=True)
    int_bank_alt_name = models.CharField(max_length=320, blank=True, null=True)
    int_bank_branch_alt_name = models.CharField(max_length=320, blank=True, null=True)
    int_bank_account_alt_name = models.CharField(max_length=320, blank=True, null=True)
    int_bank_account_num_elec = models.CharField(max_length=100, blank=True, null=True)
    int_bank_branch_location_id = models.FloatField(blank=True, null=True)
    int_bank_branch_eft_user_num = models.CharField(max_length=30, blank=True, null=True)
    payer_party_id = models.FloatField(blank=True, null=True)
    payer_location_id = models.FloatField(blank=True, null=True)
    payer_party_attr_category = models.CharField(max_length=150, blank=True, null=True)
    payer_le_attr_category = models.CharField(max_length=150, blank=True, null=True)
    payee_party_attr_category = models.CharField(max_length=150, blank=True, null=True)
    payee_supplier_attr_category = models.CharField(max_length=150, blank=True, null=True)
    payee_spplr_site_attr_category = models.CharField(max_length=150, blank=True, null=True)
    payee_supplier_site_name = models.CharField(max_length=150, blank=True, null=True)
    payee_supplier_site_alt_name = models.CharField(max_length=320, blank=True, null=True)
    payee_supplier_id = models.FloatField(blank=True, null=True)
    logical_group_reference = models.CharField(max_length=200, blank=True, null=True)
    positive_pay_file_created_flag = models.CharField(max_length=1, blank=True, null=True)
    ext_inv_payee_id = models.BigIntegerField(blank=True, null=True)
    inv_payee_party_id = models.BigIntegerField(blank=True, null=True)
    inv_party_site_id = models.BigIntegerField(blank=True, null=True)
    inv_supplier_site_id = models.BigIntegerField(blank=True, null=True)
    inv_beneficiary_party = models.BigIntegerField(blank=True, null=True)
    inv_payee_name = models.CharField(max_length=360, blank=True, null=True)
    inv_payee_address1 = models.CharField(max_length=240, blank=True, null=True)
    inv_payee_address2 = models.CharField(max_length=240, blank=True, null=True)
    inv_payee_address3 = models.CharField(max_length=240, blank=True, null=True)
    inv_payee_address4 = models.CharField(max_length=240, blank=True, null=True)
    inv_payee_city = models.CharField(max_length=120, blank=True, null=True)
    inv_payee_postal_code = models.CharField(max_length=60, blank=True, null=True)
    inv_payee_state = models.CharField(max_length=120, blank=True, null=True)
    inv_payee_province = models.CharField(max_length=120, blank=True, null=True)
    inv_payee_county = models.CharField(max_length=120, blank=True, null=True)
    inv_payee_country = models.CharField(max_length=120, blank=True, null=True)
    inv_payee_party_name = models.CharField(max_length=360, blank=True, null=True)
    inv_payee_le_reg_num = models.CharField(max_length=50, blank=True, null=True)
    inv_payee_tax_reg_num = models.CharField(max_length=50, blank=True, null=True)
    inv_payee_address_concat = models.CharField(max_length=2000, blank=True, null=True)
    inv_beneficiary_name = models.CharField(max_length=360, blank=True, null=True)
    inv_payee_party_number = models.CharField(max_length=30, blank=True, null=True)
    inv_payee_alternate_name = models.CharField(max_length=320, blank=True, null=True)
    inv_payee_site_alt_name = models.CharField(max_length=320, blank=True, null=True)
    inv_payee_supplier_number = models.CharField(max_length=30, blank=True, null=True)
    inv_payee_first_party_ref = models.CharField(max_length=30, blank=True, null=True)
    ext_bnk_acct_ownr_inv_prty_id = models.CharField(max_length=360, blank=True, null=True)
    ext_bnk_branch_inv_prty_id = models.BigIntegerField(blank=True, null=True)
    ext_bnk_acct_ownr_inv_prty_nme = models.CharField(max_length=360, blank=True, null=True)
    inv_payee_party_attr_cat = models.CharField(max_length=150, blank=True, null=True)
    inv_payee_supplier_attr_cat = models.CharField(max_length=150, blank=True, null=True)
    inv_payee_spplr_site_attr_cat = models.CharField(max_length=150, blank=True, null=True)
    inv_payee_supplier_site_name = models.CharField(max_length=150, blank=True, null=True)
    inv_payee_spplr_site_alt_name = models.CharField(max_length=320, blank=True, null=True)
    inv_payee_supplier_id = models.BigIntegerField(blank=True, null=True)
    payee_addressee = models.CharField(max_length=360, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_iby_payments_all'


class GsgTempInvoiceFg(models.Model):
    ruc = models.CharField(max_length=20, blank=True, null=True)
    invoice_num = models.CharField(max_length=30, blank=True, null=True)
    numero = models.FloatField(blank=True, null=True)
    invoice_num_orig = models.CharField(max_length=30, blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_temp_invoice_fg'


class GsgTempTipServ(models.Model):
    proveedor = models.CharField(max_length=250, blank=True, null=True)
    tipo = models.CharField(max_length=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gsg_temp_tip_serv'


class HrMbsWrkfcJcxMv(models.Model):
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_id = models.BigIntegerField(blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    pay_basis_id = models.IntegerField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    med_anl_slry = models.FloatField(blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=15, blank=True, null=True)
    comparatio = models.FloatField(blank=True, null=True)
    range_position = models.FloatField(blank=True, null=True)
    quartile = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hr_mbs_wrkfc_jcx_mv'


class HrMbsWrkfcJcxSuphMv(models.Model):
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_id = models.BigIntegerField(blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    pay_basis_id = models.IntegerField(blank=True, null=True)
    supervisor_id = models.BigIntegerField()
    total_headcount = models.FloatField(blank=True, null=True)
    med_anl_slry = models.FloatField(blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=15, blank=True, null=True)
    comparatio = models.FloatField(blank=True, null=True)
    range_position = models.FloatField(blank=True, null=True)
    quartile = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hr_mbs_wrkfc_jcx_suph_mv'


class HriDbiWmvBudgetMv(models.Model):
    supervisor_id = models.BigIntegerField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    budget_value = models.FloatField(blank=True, null=True)
    count_type = models.CharField(max_length=16, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_dbi_wmv_budget_mv'


class HriDbiWmvCountMv(models.Model):
    supervisor_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    wmv_count = models.FloatField(blank=True, null=True)
    count_type = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_dbi_wmv_count_mv'


class HriMdpBdgtsHdcntMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    budget_aggregate = models.CharField(max_length=30)
    headcount_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_bdgts_hdcnt_mv'


class HriMdpBdgtsHdcntOrgMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    organization_id = models.BigIntegerField(blank=True, null=True)
    budget_aggregate = models.CharField(max_length=30)
    headcount_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_bdgts_hdcnt_org_mv'


class HriMdpBdgtsLbrcstMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    budget_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_bdgts_lbrcst_mv'


class HriMdpBdgtsLbrcstOrgMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    organization_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    budget_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_bdgts_lbrcst_org_mv'


class HriMdpBenElctnPgmMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    pgm_id = models.BigIntegerField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    not_enrt_count = models.FloatField(blank=True, null=True)
    dflt_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_elctn_pgm_mv'


class HriMdpBenElctnPgmvMv(models.Model):
    rec_type = models.CharField(max_length=8, blank=True, null=True)
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    pgm_id = models.BigIntegerField(blank=True, null=True)
    cnt_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_elctn_pgmv_mv'


class HriMdpBenElctnRptgMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    not_enrt_count = models.FloatField(blank=True, null=True)
    dflt_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_elctn_rptg_mv'


class HriMdpBenElctnRptgvMv(models.Model):
    rec_type = models.CharField(max_length=8, blank=True, null=True)
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    cnt_all = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_elctn_rptgv_mv'


class HriMdpBenEligenrlCopMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    compobj_sk_pk = models.BigIntegerField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_cop_mv'


class HriMdpBenEligenrlCppMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    plip_id = models.BigIntegerField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_cpp_mv'


class HriMdpBenEligenrlCtpMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    ptip_id = models.BigIntegerField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_ctp_mv'


class HriMdpBenEligenrlRoptMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    oipl_id = models.BigIntegerField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_ropt_mv'


class HriMdpBenEligenrlRplnMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    pl_id = models.BigIntegerField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_rpln_mv'


class HriMdpBenEligenrlRptpMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    pl_typ_id = models.BigIntegerField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    elig_count = models.FloatField(blank=True, null=True)
    enrt_count = models.FloatField(blank=True, null=True)
    enrt_per = models.FloatField(blank=True, null=True)
    waive_expl_count = models.FloatField(blank=True, null=True)
    waive_dflt_count = models.FloatField(blank=True, null=True)
    waive_total_count = models.FloatField(blank=True, null=True)
    waive_expl_per = models.FloatField(blank=True, null=True)
    waive_dflt_per = models.FloatField(blank=True, null=True)
    waive_total_per = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_eligenrl_rptp_mv'


class HriMdpBenEnrlactnPgmMv(models.Model):
    sspnd_count = models.FloatField(blank=True, null=True)
    actn_item_ind = models.FloatField(blank=True, null=True)
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    actn_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    pgm_id = models.BigIntegerField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_enrlactn_pgm_mv'


class HriMdpBenEnrlactnRpgMv(models.Model):
    sspnd_count = models.FloatField(blank=True, null=True)
    actn_item_ind = models.FloatField(blank=True, null=True)
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    actn_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_enrlactn_rpg_mv'


class HriMdpBenLestatPgmMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    pgm_id = models.BigIntegerField(blank=True, null=True)
    ler_status_cd = models.CharField(max_length=30, blank=True, null=True)
    per_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_lestat_pgm_mv'


class HriMdpBenLestatRptgMv(models.Model):
    asnd_lf_evt_dt = models.DateField(blank=True, null=True)
    rptgtyp_id = models.BigIntegerField(blank=True, null=True)
    ler_status_cd = models.CharField(max_length=30, blank=True, null=True)
    per_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_ben_lestat_rptg_mv'


class HriMdpCmntsActlsMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    commitment_value = models.FloatField(blank=True, null=True)
    actual_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_cmnts_actls_mv'


class HriMdpCmntsActlsOrgMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField()
    organization_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    commitment_value = models.FloatField(blank=True, null=True)
    actual_value = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_cmnts_actls_org_mv'


class HriMdpSupAbsncCatMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    absence_category_code = models.CharField(max_length=30, blank=True, null=True)
    direct_record_ind = models.FloatField(blank=True, null=True)
    abs_drtn_days = models.FloatField(blank=True, null=True)
    abs_drtn_hrs = models.FloatField(blank=True, null=True)
    abs_drtn_days_plnd = models.FloatField(blank=True, null=True)
    abs_drtn_days_unplnd = models.FloatField(blank=True, null=True)
    abs_drtn_hrs_plnd = models.FloatField(blank=True, null=True)
    abs_drtn_hrs_unplnd = models.FloatField(blank=True, null=True)
    abs_start_blnc = models.FloatField(blank=True, null=True)
    abs_nstart_blnc = models.FloatField(blank=True, null=True)
    abs_start_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_start_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_nstart_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_nstart_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_days_start_blnc = models.FloatField(blank=True, null=True)
    abs_ntfctn_days_nstart_blnc = models.FloatField(blank=True, null=True)
    abs_ntfctn_start_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_start_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_nstart_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_nstart_blnc_unplnd = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_absnc_cat_mv'


class HriMdpSupAbsncSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    direct_record_ind = models.FloatField(blank=True, null=True)
    abs_drtn_days = models.FloatField(blank=True, null=True)
    abs_drtn_hrs = models.FloatField(blank=True, null=True)
    abs_drtn_days_plnd = models.FloatField(blank=True, null=True)
    abs_drtn_days_unplnd = models.FloatField(blank=True, null=True)
    abs_drtn_hrs_plnd = models.FloatField(blank=True, null=True)
    abs_drtn_hrs_unplnd = models.FloatField(blank=True, null=True)
    abs_start_blnc = models.FloatField(blank=True, null=True)
    abs_nstart_blnc = models.FloatField(blank=True, null=True)
    abs_start_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_start_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_nstart_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_nstart_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_days_start_blnc = models.FloatField(blank=True, null=True)
    abs_ntfctn_days_nstart_blnc = models.FloatField(blank=True, null=True)
    abs_ntfctn_start_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_start_blnc_unplnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_nstart_blnc_plnd = models.FloatField(blank=True, null=True)
    abs_ntfctn_nstart_blnc_unplnd = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_absnc_sup_mv'


class HriMdpSupGainHireMv(models.Model):
    supervisor_id = models.FloatField(blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    currency = models.CharField(max_length=30, blank=True, null=True)
    headcount_value = models.FloatField(blank=True, null=True)
    fte_value = models.FloatField(blank=True, null=True)
    salary = models.FloatField(blank=True, null=True)
    cnt1 = models.FloatField(blank=True, null=True)
    cnt2 = models.FloatField(blank=True, null=True)
    cnt3 = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_gain_hire_mv'


class HriMdpSupWcntChgAsgMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    assignment_id = models.FloatField(blank=True, null=True)
    person_id = models.FloatField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=40, blank=True, null=True)
    change_type_id = models.FloatField(blank=True, null=True)
    direct_record_ind = models.FloatField(blank=True, null=True)
    transfer_within_count = models.FloatField(blank=True, null=True)
    hire_hdc = models.FloatField(blank=True, null=True)
    termination_hdc = models.FloatField(blank=True, null=True)
    transfer_in_hdc = models.FloatField(blank=True, null=True)
    transfer_out_hdc = models.FloatField(blank=True, null=True)
    other_gains_hdc = models.FloatField(blank=True, null=True)
    other_losses_hdc = models.FloatField(blank=True, null=True)
    hire_fte = models.FloatField(blank=True, null=True)
    termination_fte = models.FloatField(blank=True, null=True)
    transfer_in_fte = models.FloatField(blank=True, null=True)
    transfer_out_fte = models.FloatField(blank=True, null=True)
    term_voluntary_ind = models.FloatField(blank=True, null=True)
    term_involuntary_ind = models.FloatField(blank=True, null=True)
    admin_row_type = models.CharField(max_length=6, blank=True, null=True)
    admin_count_hire_hdc = models.FloatField(blank=True, null=True)
    admin_count_termination_hdc = models.FloatField(blank=True, null=True)
    admin_count_term_vol_hdc = models.FloatField(blank=True, null=True)
    admin_count_term_invol_hdc = models.FloatField(blank=True, null=True)
    admin_count_transfer_in_hdc = models.FloatField(blank=True, null=True)
    admin_count_transfer_out_hdc = models.FloatField(blank=True, null=True)
    admin_count_other_gains_hdc = models.FloatField(blank=True, null=True)
    admin_count_other_losses_hdc = models.FloatField(blank=True, null=True)
    admin_change_type_id = models.FloatField(blank=True, null=True)
    admin_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wcnt_chg_asg_mv'


class HriMdpSupWcntChgMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=40, blank=True, null=True)
    direct_record_ind = models.FloatField(blank=True, null=True)
    gain_hdc = models.FloatField(blank=True, null=True)
    loss_hdc = models.FloatField(blank=True, null=True)
    net_gain_loss_hdc = models.FloatField(blank=True, null=True)
    hire_hdc = models.FloatField(blank=True, null=True)
    termination_hdc = models.FloatField(blank=True, null=True)
    separation_hdc = models.FloatField(blank=True, null=True)
    sep_vol_hdc = models.FloatField(blank=True, null=True)
    sep_invol_hdc = models.FloatField(blank=True, null=True)
    transfer_in_hdc = models.FloatField(blank=True, null=True)
    transfer_out_hdc = models.FloatField(blank=True, null=True)
    gain_fte = models.FloatField(blank=True, null=True)
    loss_fte = models.FloatField(blank=True, null=True)
    net_gain_loss_fte = models.FloatField(blank=True, null=True)
    hire_fte = models.FloatField(blank=True, null=True)
    termination_fte = models.FloatField(blank=True, null=True)
    separation_fte = models.FloatField(blank=True, null=True)
    sep_vol_fte = models.FloatField(blank=True, null=True)
    sep_invol_fte = models.FloatField(blank=True, null=True)
    transfer_in_fte = models.FloatField(blank=True, null=True)
    transfer_out_fte = models.FloatField(blank=True, null=True)
    admin_row_type = models.CharField(max_length=6, blank=True, null=True)
    admin_count_gain_hdc = models.FloatField(blank=True, null=True)
    admin_count_loss_hdc = models.FloatField(blank=True, null=True)
    admin_count_net_hdc = models.FloatField(blank=True, null=True)
    admin_count_hire_hdc = models.FloatField(blank=True, null=True)
    admin_count_termination_hdc = models.FloatField(blank=True, null=True)
    admin_count_separation_hdc = models.FloatField(blank=True, null=True)
    admin_count_sep_vol_hdc = models.FloatField(blank=True, null=True)
    admin_count_sep_invol_hdc = models.FloatField(blank=True, null=True)
    admin_count_transfer_in_hdc = models.FloatField(blank=True, null=True)
    admin_count_transfer_out_hdc = models.FloatField(blank=True, null=True)
    admin_count_gain_fte = models.FloatField(blank=True, null=True)
    admin_count_loss_fte = models.FloatField(blank=True, null=True)
    admin_count_net_fte = models.FloatField(blank=True, null=True)
    admin_count_hire_fte = models.FloatField(blank=True, null=True)
    admin_count_termination_fte = models.FloatField(blank=True, null=True)
    admin_count_separation_fte = models.FloatField(blank=True, null=True)
    admin_count_sep_vol_fte = models.FloatField(blank=True, null=True)
    admin_count_sep_invol_fte = models.FloatField(blank=True, null=True)
    admin_count_transfer_in_fte = models.FloatField(blank=True, null=True)
    admin_count_transfer_out_fte = models.FloatField(blank=True, null=True)
    admin_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wcnt_chg_mv'


class HriMdpSupWcntSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    wkth_wktyp_code = models.CharField(max_length=30, blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    total_primary_asg_cnt = models.FloatField(blank=True, null=True)
    direct_primary_asg_cnt = models.FloatField(blank=True, null=True)
    total_primary_asg_pow = models.FloatField(blank=True, null=True)
    direct_primary_asg_pow = models.FloatField(blank=True, null=True)
    total_extn_asg_cnt = models.FloatField(blank=True, null=True)
    total_primary_extn_pow = models.FloatField(blank=True, null=True)
    direct_primary_extn_pow = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wcnt_sup_mv'


class HriMdpSupWcntTermAsgMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    direct_supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=40, blank=True, null=True)
    pow_start_date = models.DateField(blank=True, null=True)
    pow_months = models.FloatField(blank=True, null=True)
    assignment_id = models.FloatField(blank=True, null=True)
    person_id = models.FloatField(blank=True, null=True)
    geo_area_code = models.CharField(max_length=40, blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    job_fmly_code = models.CharField(max_length=240, blank=True, null=True)
    job_fnctn_code = models.CharField(max_length=240, blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    leaving_reason_code = models.CharField(max_length=30, blank=True, null=True)
    separation_category = models.CharField(max_length=30, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    location_id = models.FloatField(blank=True, null=True)
    pow_band_sk_fk = models.FloatField(blank=True, null=True)
    perf_band = models.FloatField(blank=True, null=True)
    direct_ind = models.FloatField(blank=True, null=True)
    separation_hdc = models.FloatField(blank=True, null=True)
    admin_sprtn_hdc_count = models.FloatField(blank=True, null=True)
    admin_row_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wcnt_term_asg_mv'


class HriMdpSupWmvSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    total_primary_asg_cnt = models.FloatField(blank=True, null=True)
    total_pow = models.FloatField(blank=True, null=True)
    total_primary_asg_pow = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    direct_primary_asg_cnt = models.FloatField(blank=True, null=True)
    direct_pow = models.FloatField(blank=True, null=True)
    direct_primary_asg_pow = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wmv_sup_mv'


class HriMdpSupWrkfcCitMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    geo_region_code = models.CharField(max_length=160, blank=True, null=True)
    geo_city_cid = models.CharField(max_length=300, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_cit_mv'


class HriMdpSupWrkfcCjerMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    geo_area_code = models.CharField(max_length=40, blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    job_fmly_code = models.CharField(max_length=240, blank=True, null=True)
    job_fnctn_code = models.CharField(max_length=240, blank=True, null=True)
    pow_band_sk_fk = models.FloatField(blank=True, null=True)
    perf_band = models.FloatField(blank=True, null=True)
    primary_job_role_code = models.CharField(max_length=30, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    wkth_wktyp_code = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_cjer_mv'


class HriMdpSupWrkfcCtrMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    geo_area_code = models.CharField(max_length=40, blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_ctr_mv'


class HriMdpSupWrkfcEMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    pow_band_sk_fk = models.FloatField(blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_e_mv'


class HriMdpSupWrkfcJfmMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_fmly_code = models.CharField(max_length=240, blank=True, null=True)
    job_fnctn_code = models.CharField(max_length=240, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_jfm_mv'


class HriMdpSupWrkfcJfnMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_fnctn_code = models.CharField(max_length=240, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_jfn_mv'


class HriMdpSupWrkfcJobMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_fmly_code = models.CharField(max_length=240, blank=True, null=True)
    job_fnctn_code = models.CharField(max_length=240, blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_job_mv'


class HriMdpSupWrkfcJprMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    primary_job_role_code = models.CharField(max_length=30, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)
    anl_slry_adjust = models.FloatField(blank=True, null=True)
    headcount_adjust = models.FloatField(blank=True, null=True)
    dr_anl_slry_adjust = models.FloatField(blank=True, null=True)
    dr_headcount_adjust = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_jpr_mv'


class HriMdpSupWrkfcJxMv(models.Model):
    supervisor_person_id = models.BigIntegerField()
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    job_id = models.BigIntegerField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    max_anl_slry = models.FloatField(blank=True, null=True)
    min_anl_slry = models.FloatField(blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_jx_mv'


class HriMdpSupWrkfcRMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    perf_band = models.FloatField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_r_mv'


class HriMdpSupWrkfcRgnMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    geo_region_code = models.CharField(max_length=160, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_rgn_mv'


class HriMdpSupWrkfcSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    total_anl_slry = models.FloatField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_anl_slry = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_sup_wrkfc_sup_mv'


class HriMdpWrkfcMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_wrkfc_mv'


class HriMdpWrkfcOrgmgrMv(models.Model):
    orgmgr_id = models.BigIntegerField()
    effective_start_date = models.DateField()
    effective_end_date = models.DateField(blank=True, null=True)
    organization_id = models.BigIntegerField(blank=True, null=True)
    total_headcount = models.FloatField(blank=True, null=True)
    direct_headcount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mdp_wrkfc_orgmgr_mv'


class HriMdsSupWcntChgMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    comparison_type = models.CharField(max_length=30, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=40, blank=True, null=True)
    direct_record_ind = models.FloatField(blank=True, null=True)
    gain_hdc = models.FloatField(blank=True, null=True)
    loss_hdc = models.FloatField(blank=True, null=True)
    net_gain_loss_hdc = models.FloatField(blank=True, null=True)
    hire_hdc = models.FloatField(blank=True, null=True)
    termination_hdc = models.FloatField(blank=True, null=True)
    separation_hdc = models.FloatField(blank=True, null=True)
    sep_vol_hdc = models.FloatField(blank=True, null=True)
    sep_invol_hdc = models.FloatField(blank=True, null=True)
    transfer_in_hdc = models.FloatField(blank=True, null=True)
    transfer_out_hdc = models.FloatField(blank=True, null=True)
    gain_fte = models.FloatField(blank=True, null=True)
    loss_fte = models.FloatField(blank=True, null=True)
    net_gain_loss_fte = models.FloatField(blank=True, null=True)
    hire_fte = models.FloatField(blank=True, null=True)
    termination_fte = models.FloatField(blank=True, null=True)
    separation_fte = models.FloatField(blank=True, null=True)
    term_vol_fte = models.FloatField(blank=True, null=True)
    term_invol_fte = models.FloatField(blank=True, null=True)
    transfer_in_fte = models.FloatField(blank=True, null=True)
    transfer_out_fte = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mds_sup_wcnt_chg_mv'


class HriMdsSupWcntTermCtrMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    comparison_type = models.CharField(max_length=30, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=40, blank=True, null=True)
    direct_ind = models.FloatField(blank=True, null=True)
    geo_area_code = models.CharField(max_length=40, blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    pow_days = models.FloatField(blank=True, null=True)
    pow_months = models.FloatField(blank=True, null=True)
    separation_hdc = models.FloatField(blank=True, null=True)
    sep_invol_hdc = models.FloatField(blank=True, null=True)
    sep_vol_hdc = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mds_sup_wcnt_term_ctr_mv'


class HriMdsSupWmvSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    comparison_type = models.CharField(max_length=30, blank=True, null=True)
    curr_total_hdc_end = models.FloatField(blank=True, null=True)
    curr_direct_hdc_end = models.FloatField(blank=True, null=True)
    curr_total_pasg_cnt_end = models.FloatField(blank=True, null=True)
    curr_direct_pasg_cnt_end = models.FloatField(blank=True, null=True)
    comp_total_hdc_end = models.FloatField(blank=True, null=True)
    comp_direct_hdc_end = models.FloatField(blank=True, null=True)
    comp_total_pasg_cnt_end = models.FloatField(blank=True, null=True)
    comp_direct_pasg_cnt_end = models.FloatField(blank=True, null=True)
    curr_total_hdc_start = models.FloatField(blank=True, null=True)
    curr_direct_hdc_start = models.FloatField(blank=True, null=True)
    comp_total_hdc_start = models.FloatField(blank=True, null=True)
    comp_direct_hdc_start = models.FloatField(blank=True, null=True)
    curr_total_pow_end = models.FloatField(blank=True, null=True)
    curr_direct_pow_end = models.FloatField(blank=True, null=True)
    comp_total_pow_end = models.FloatField(blank=True, null=True)
    comp_direct_pow_end = models.FloatField(blank=True, null=True)
    curr_extn_asg_cnt_end = models.FloatField(blank=True, null=True)
    curr_total_pow_extn_end = models.FloatField(blank=True, null=True)
    curr_direct_pow_extn_end = models.FloatField(blank=True, null=True)
    comp_extn_asg_cnt_end = models.FloatField(blank=True, null=True)
    comp_total_pow_extn_end = models.FloatField(blank=True, null=True)
    comp_direct_pow_extn_end = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mds_sup_wmv_sup_mv'


class HriMdsSupWrkfcCtrMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    comparison_type = models.CharField(max_length=30, blank=True, null=True)
    geo_area_code = models.CharField(max_length=40, blank=True, null=True)
    geo_country_code = models.CharField(max_length=70, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    curr_total_anl_slry_end = models.FloatField(blank=True, null=True)
    curr_total_hdc_end = models.FloatField(blank=True, null=True)
    curr_direct_anl_slry_end = models.FloatField(blank=True, null=True)
    curr_direct_hdc_end = models.FloatField(blank=True, null=True)
    comp_total_anl_slry_end = models.FloatField(blank=True, null=True)
    comp_total_hdc_end = models.FloatField(blank=True, null=True)
    comp_direct_anl_slry_end = models.FloatField(blank=True, null=True)
    comp_direct_hdc_end = models.FloatField(blank=True, null=True)
    curr_total_hdc_start = models.FloatField(blank=True, null=True)
    curr_direct_hdc_start = models.FloatField(blank=True, null=True)
    comp_total_hdc_start = models.FloatField(blank=True, null=True)
    comp_direct_hdc_start = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mds_sup_wrkfc_ctr_mv'


class HriMdsSupWrkfcSupMv(models.Model):
    supervisor_person_id = models.FloatField(blank=True, null=True)
    effective_date = models.DateField(blank=True, null=True)
    period_type = models.CharField(max_length=30, blank=True, null=True)
    comparison_type = models.CharField(max_length=30, blank=True, null=True)
    anl_slry_currency = models.CharField(max_length=30, blank=True, null=True)
    wkth_wktyp_sk_fk = models.CharField(max_length=240, blank=True, null=True)
    curr_total_anl_slry_end = models.FloatField(blank=True, null=True)
    curr_total_hdc_end = models.FloatField(blank=True, null=True)
    curr_direct_anl_slry_end = models.FloatField(blank=True, null=True)
    curr_direct_hdc_end = models.FloatField(blank=True, null=True)
    comp_total_anl_slry_end = models.FloatField(blank=True, null=True)
    comp_total_hdc_end = models.FloatField(blank=True, null=True)
    comp_direct_anl_slry_end = models.FloatField(blank=True, null=True)
    comp_direct_hdc_end = models.FloatField(blank=True, null=True)
    curr_total_hdc_start = models.FloatField(blank=True, null=True)
    curr_direct_hdc_start = models.FloatField(blank=True, null=True)
    comp_total_hdc_start = models.FloatField(blank=True, null=True)
    comp_direct_hdc_start = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hri_mds_sup_wrkfc_sup_mv'


class HzCmergeTemp(models.Model):
    type = models.CharField(max_length=30, blank=True, null=True)
    old_id = models.FloatField(blank=True, null=True)
    new_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hz_cmerge_temp'


class IbeBiCartOrdMv(models.Model):
    umarker = models.CharField(max_length=10, blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    measure_type = models.CharField(max_length=18, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    list_amount_f = models.FloatField(blank=True, null=True)
    list_amount_g = models.FloatField(blank=True, null=True)
    list_amount_g1 = models.FloatField(blank=True, null=True)
    disc_amount_f = models.FloatField(blank=True, null=True)
    disc_amount_g = models.FloatField(blank=True, null=True)
    disc_amount_g1 = models.FloatField(blank=True, null=True)
    no_lines = models.FloatField(blank=True, null=True)
    tot_count = models.FloatField(blank=True, null=True)
    con_ord = models.FloatField(blank=True, null=True)
    d_lines_f = models.FloatField(blank=True, null=True)
    d_lines_g = models.FloatField(blank=True, null=True)
    d_lines_g1 = models.FloatField(blank=True, null=True)
    d_list_lines_f = models.FloatField(blank=True, null=True)
    d_list_lines_g = models.FloatField(blank=True, null=True)
    d_list_lines_g1 = models.FloatField(blank=True, null=True)
    d_disc_lines_f = models.FloatField(blank=True, null=True)
    d_disc_lines_g = models.FloatField(blank=True, null=True)
    d_disc_lines_g1 = models.FloatField(blank=True, null=True)
    d_no_of_lines_cnt = models.FloatField(blank=True, null=True)
    d_total_number = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_cart_ord_mv'


class IbeBiCartsMv(models.Model):
    creation_date = models.DateField(blank=True, null=True)
    quote_header_id = models.FloatField(blank=True, null=True)
    quote_number = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=15, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    quote_status_id = models.FloatField(blank=True, null=True)
    cust_party_id = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    mkt_amt_f = models.FloatField(blank=True, null=True)
    mkt_amt_g = models.FloatField(blank=True, null=True)
    mkt_amt_g1 = models.FloatField(blank=True, null=True)
    mkt_lines = models.FloatField(blank=True, null=True)
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    quote_lines = models.FloatField(blank=True, null=True)
    d_mkt_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_carts_mv'


class IbeBiCatMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    booked_date_id = models.DateField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    leaf_node = models.CharField(max_length=1, blank=True, null=True)
    assist_flag = models.CharField(max_length=1, blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    list_amt_g = models.FloatField(blank=True, null=True)
    list_amt_g1 = models.FloatField(blank=True, null=True)
    list_amt_f = models.FloatField(blank=True, null=True)
    discount_amt_g = models.FloatField(blank=True, null=True)
    discount_amt_g1 = models.FloatField(blank=True, null=True)
    discount_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_tot_cnt = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_cat_mv'


class IbeBiCatTimeMv(models.Model):
    umar = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    umark = models.CharField(max_length=7, blank=True, null=True)
    umarker = models.CharField(max_length=10, blank=True, null=True)
    catid = models.FloatField(blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    leaf_node = models.CharField(max_length=1, blank=True, null=True)
    assist_flag = models.CharField(max_length=1, blank=True, null=True)
    curr_f = models.CharField(max_length=30, blank=True, null=True)
    ord_count = models.FloatField(blank=True, null=True)
    con_ord = models.FloatField(blank=True, null=True)
    ord_amt_g = models.FloatField(blank=True, null=True)
    ord_amt_g1 = models.FloatField(blank=True, null=True)
    ord_amt_f = models.FloatField(blank=True, null=True)
    ord_list_g = models.FloatField(blank=True, null=True)
    ord_list_g1 = models.FloatField(blank=True, null=True)
    ord_list_f = models.FloatField(blank=True, null=True)
    ord_disc_g = models.FloatField(blank=True, null=True)
    ord_disc_g1 = models.FloatField(blank=True, null=True)
    ord_disc_f = models.FloatField(blank=True, null=True)
    cart_count = models.FloatField(blank=True, null=True)
    cart_amt_g = models.FloatField(blank=True, null=True)
    cart_amt_g1 = models.FloatField(blank=True, null=True)
    cart_amt_f = models.FloatField(blank=True, null=True)
    t_ord_count = models.FloatField(blank=True, null=True)
    t_con_ord = models.FloatField(blank=True, null=True)
    t_ord_amt_g = models.FloatField(blank=True, null=True)
    t_ord_amt_g1 = models.FloatField(blank=True, null=True)
    t_ord_amt_f = models.FloatField(blank=True, null=True)
    t_ord_list_g = models.FloatField(blank=True, null=True)
    t_ord_list_g1 = models.FloatField(blank=True, null=True)
    t_ord_list_f = models.FloatField(blank=True, null=True)
    t_ord_disc_g = models.FloatField(blank=True, null=True)
    t_ord_disc_g1 = models.FloatField(blank=True, null=True)
    t_ord_disc_f = models.FloatField(blank=True, null=True)
    t_cart_count = models.FloatField(blank=True, null=True)
    t_cart_amt_g = models.FloatField(blank=True, null=True)
    t_cart_amt_g1 = models.FloatField(blank=True, null=True)
    t_cart_amt_f = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_ord_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_ord_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_ord_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_ord_list_g_cnt = models.FloatField(blank=True, null=True)
    d_ord_list_g1_cnt = models.FloatField(blank=True, null=True)
    d_ord_list_f_cnt = models.FloatField(blank=True, null=True)
    d_ord_disc_g_cnt = models.FloatField(blank=True, null=True)
    d_ord_disc_g1_cnt = models.FloatField(blank=True, null=True)
    d_ord_disc_f_cnt = models.FloatField(blank=True, null=True)
    d_cart_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_cart_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_cart_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_con_ord = models.FloatField(blank=True, null=True)
    d_cart_count = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    d_ord_count = models.FloatField(blank=True, null=True)
    d_ord_amt_g = models.FloatField(blank=True, null=True)
    d_ord_amt_g1 = models.FloatField(blank=True, null=True)
    d_ord_amt_f = models.FloatField(blank=True, null=True)
    d_ord_disc_g = models.FloatField(blank=True, null=True)
    d_ord_disc_g1 = models.FloatField(blank=True, null=True)
    d_ord_disc_f = models.FloatField(blank=True, null=True)
    d_ord_list_g = models.FloatField(blank=True, null=True)
    d_ord_list_g1 = models.FloatField(blank=True, null=True)
    d_ord_list_f = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_cat_time_mv'


class IbeBiCustIntmMv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    booked_date = models.DateField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_cust_intm_mv'


class IbeBiCustMv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    booked_date = models.DateField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_cust_mv'


class IbeBiCusttimeMv(models.Model):
    umarker = models.CharField(max_length=7, blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    total = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_custtime_mv'


class IbeBiItemMv(models.Model):
    umarker = models.CharField(max_length=6, blank=True, null=True)
    booked_date_id = models.DateField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    num_of_ord_cart = models.FloatField(blank=True, null=True)
    no_orders = models.FloatField(blank=True, null=True)
    order_header_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_list_amt_g = models.FloatField(blank=True, null=True)
    booked_list_amt_g1 = models.FloatField(blank=True, null=True)
    booked_list_amt_f = models.FloatField(blank=True, null=True)
    discount_amt_g = models.FloatField(blank=True, null=True)
    discount_amt_g1 = models.FloatField(blank=True, null=True)
    discount_amt_f = models.FloatField(blank=True, null=True)
    num_of_lines = models.FloatField(blank=True, null=True)
    d_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_num_of_lines_cnt = models.FloatField(blank=True, null=True)
    d_tot_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_item_mv'


class IbeBiMsiteorgMv(models.Model):
    msite_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_msiteorg_mv'


class IbeBiOrderbomMv(models.Model):
    booked_date = models.DateField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    no_lines = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    marketing_source_code_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_list_amt_f = models.FloatField(blank=True, null=True)
    booked_list_amt_g = models.FloatField(blank=True, null=True)
    booked_list_amt_g1 = models.FloatField(blank=True, null=True)
    d_booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_tot_cnt = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_orderbom_mv'


class IbeBiOrdersMv(models.Model):
    booked_date = models.DateField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    marketing_source_code_id = models.FloatField(blank=True, null=True)
    mkt_amt_f = models.FloatField(blank=True, null=True)
    mkt_amt_g = models.FloatField(blank=True, null=True)
    mkt_amt_g1 = models.FloatField(blank=True, null=True)
    mkt_lines = models.FloatField(blank=True, null=True)
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    list_amount_f = models.FloatField(blank=True, null=True)
    list_amount_g = models.FloatField(blank=True, null=True)
    list_amount_g1 = models.FloatField(blank=True, null=True)
    disc_amount_f = models.FloatField(blank=True, null=True)
    disc_amount_g = models.FloatField(blank=True, null=True)
    disc_amount_g1 = models.FloatField(blank=True, null=True)
    order_lines = models.FloatField(blank=True, null=True)
    d_mkt_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_mkt_lines_cnt = models.FloatField(blank=True, null=True)
    d_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_order_lines_cnt = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_orders_mv'


class IbeBiTopCartMv(models.Model):
    cartnumber = models.FloatField(blank=True, null=True)
    customer = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=15, blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    lines = models.FloatField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    rank = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_top_cart_mv'


class IbeBiTopCustMv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    amount_f = models.FloatField(blank=True, null=True)
    assisted_amt_g = models.FloatField(blank=True, null=True)
    assisted_amt_g1 = models.FloatField(blank=True, null=True)
    assisted_amt_f = models.FloatField(blank=True, null=True)
    list_amount_g = models.FloatField(blank=True, null=True)
    list_amount_g1 = models.FloatField(blank=True, null=True)
    list_amount_f = models.FloatField(blank=True, null=True)
    disc_amount_g = models.FloatField(blank=True, null=True)
    disc_amount_g1 = models.FloatField(blank=True, null=True)
    disc_amount_f = models.FloatField(blank=True, null=True)
    orders_cnt = models.FloatField(blank=True, null=True)
    d_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_assisted_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_assisted_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_assisted_amt_f_cnt = models.FloatField(blank=True, null=True)
    list_amount_g_cnt = models.FloatField(blank=True, null=True)
    list_amount_g1_cnt = models.FloatField(blank=True, null=True)
    list_amount_f_cnt = models.FloatField(blank=True, null=True)
    disc_amount_g_cnt = models.FloatField(blank=True, null=True)
    disc_amount_g1_cnt = models.FloatField(blank=True, null=True)
    disc_amount_f_cnt = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_top_cust_mv'


class IbeBiTopOrdMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ordernumber = models.FloatField(blank=True, null=True)
    customerid = models.FloatField(blank=True, null=True)
    source = models.CharField(max_length=1, blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    discount_g = models.FloatField(blank=True, null=True)
    discount_g1 = models.FloatField(blank=True, null=True)
    discount_f = models.FloatField(blank=True, null=True)
    lines = models.FloatField(blank=True, null=True)
    assisted = models.CharField(max_length=1, blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    rank = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_top_ord_mv'


class IbeBiTopProdMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    tot_ord_count = models.FloatField(blank=True, null=True)
    tot_cart_count = models.FloatField(blank=True, null=True)
    con_ord = models.FloatField(blank=True, null=True)
    num_of_ord_lines = models.FloatField(blank=True, null=True)
    num_of_cart_lines = models.FloatField(blank=True, null=True)
    booked_amount_f = models.FloatField(blank=True, null=True)
    booked_amount_g = models.FloatField(blank=True, null=True)
    booked_amount_g1 = models.FloatField(blank=True, null=True)
    carts_amt_f = models.FloatField(blank=True, null=True)
    carts_amt_g = models.FloatField(blank=True, null=True)
    carts_amt_g1 = models.FloatField(blank=True, null=True)
    booked_list_amt_f = models.FloatField(blank=True, null=True)
    booked_list_amt_g = models.FloatField(blank=True, null=True)
    booked_list_amt_g1 = models.FloatField(blank=True, null=True)
    discount_amount_f = models.FloatField(blank=True, null=True)
    discount_amount_g = models.FloatField(blank=True, null=True)
    discount_amount_g1 = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_tot_ord_count_cnt = models.FloatField(blank=True, null=True)
    d_tot_cart_count_cnt = models.FloatField(blank=True, null=True)
    d_con_ord_cnt = models.FloatField(blank=True, null=True)
    d_booked_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_carts_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_carts_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_carts_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_num_of_ord_lines_cnt = models.FloatField(blank=True, null=True)
    d_num_of_cart_lines_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_discount_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_discount_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_discount_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_total_count_time_mv = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_bi_top_prod_mv'


class IbeSctSearchMv(models.Model):
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    section_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    object_version_number = models.BigIntegerField()
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibe_sct_search_mv'


class IbwCartBaseMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    anonymous_carts = models.FloatField(blank=True, null=True)
    lead_rank = models.FloatField(blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    source_primary_reference = models.CharField(max_length=240, blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_cart_base_mv'


class IbwCmpanalysisMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_lead_rank = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_cmpanalysis_mv'


class IbwCmpanalysisSumMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_cmpanalysis_sum_mv'


class IbwCmpanalysisTimeMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_cmpanalysis_time_mv'


class IbwCmpanlysCmpdimTimeMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    parent_source_code_id = models.BigIntegerField(blank=True, null=True)
    prior_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_cmpanlys_cmpdim_time_mv'


class IbwKpiMetricsTimeMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    anonymous_carts = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_anonymous_carts = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_booked_web_orders = models.FloatField(blank=True, null=True)
    d_new_web_customers = models.FloatField(blank=True, null=True)
    d_repeat_web_orders = models.FloatField(blank=True, null=True)
    d_total_booked_orders = models.FloatField(blank=True, null=True)
    d_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_kpi_metrics_time_mv'


class IbwPageProductMv(models.Model):
    site_id = models.BigIntegerField()
    transaction_date = models.DateField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256)
    customer_id = models.BigIntegerField(blank=True, null=True)
    page_id = models.BigIntegerField(blank=True, null=True)
    page_instance_id = models.BigIntegerField(blank=True, null=True)
    product_id = models.CharField(max_length=480, blank=True, null=True)
    visit_id = models.BigIntegerField(blank=True, null=True)
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    page_view_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    order_visit_id = models.CharField(max_length=240, blank=True, null=True)
    d_page_view_duration = models.FloatField(blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_page_product_mv'


class IbwPageSaMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    site_area_id = models.BigIntegerField(blank=True, null=True)
    page_instance_id = models.BigIntegerField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    page_view_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_page_view_duration_cnt = models.FloatField(blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_page_sa_mv'


class IbwPageSaTimeMv(models.Model):
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    page_instance_id = models.BigIntegerField(blank=True, null=True)
    site_area_id = models.BigIntegerField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    page_view_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_page_view_duration_cnt = models.FloatField(blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_tot = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_page_sa_time_mv'


class IbwProductMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    leaf_categ_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    no_visits = models.FloatField(blank=True, null=True)
    d_no_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.CharField(max_length=281, blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    qot_order_id = models.FloatField(blank=True, null=True)
    cart_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_product_mv'


class IbwProductSumMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    leaf_categ_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    no_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.CharField(max_length=281, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    qot_order_id = models.FloatField(blank=True, null=True)
    cart_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_no_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_product_sum_mv'


class IbwProductTimeMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    leaf_categ_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    no_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.CharField(max_length=281, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    qot_order_id = models.FloatField(blank=True, null=True)
    cart_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_no_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_tot_col = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_product_time_mv'


class IbwRefanalysisMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    source_primary_reference = models.CharField(max_length=240, blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_refanalysis_mv'


class IbwRefanalysisSumMv(models.Model):
    site_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_refanalysis_sum_mv'


class IbwRefanalysisTimeMv(models.Model):
    umark = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_refanalysis_time_mv'


class IbwSiteVisitMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations_ref = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_repeat_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_orders_site_visit = models.FloatField(blank=True, null=True)
    d_web_registration_ref = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_total_order_inquiries = models.FloatField(blank=True, null=True)
    d_total_payment_inquiries = models.FloatField(blank=True, null=True)
    d_total_invoice_inquiries = models.FloatField(blank=True, null=True)
    d_opt_outs = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_site_visit_mv'


class IbwVisitCustMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    new_web_customers_all = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    anonymous_carts = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    assisted_web_orders = models.FloatField(blank=True, null=True)
    total_booked_amt_f = models.FloatField(blank=True, null=True)
    total_booked_amt_g = models.FloatField(blank=True, null=True)
    total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_repeat_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_anonymous_carts = models.FloatField(blank=True, null=True)
    d_total_order_inquiries = models.FloatField(blank=True, null=True)
    d_total_payment_inquiries = models.FloatField(blank=True, null=True)
    d_total_invoice_inquiries = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_booked_amt_f = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_opt_outs = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_visit_cust_mv'


class IbwVisitCustSumMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    new_web_customers_all = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    anonymous_carts = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    assisted_web_orders = models.FloatField(blank=True, null=True)
    total_booked_amt_f = models.FloatField(blank=True, null=True)
    total_booked_amt_g = models.FloatField(blank=True, null=True)
    total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_repeat_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_new_web_customers = models.FloatField(blank=True, null=True)
    d_new_web_customers_all = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_anonymous_carts = models.FloatField(blank=True, null=True)
    d_total_order_inquiries = models.FloatField(blank=True, null=True)
    d_total_payment_inquiries = models.FloatField(blank=True, null=True)
    d_total_invoice_inquiries = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_booked_web_orders = models.FloatField(blank=True, null=True)
    d_assisted_web_orders = models.FloatField(blank=True, null=True)
    d_total_booked_amt_f = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_booked_orders = models.FloatField(blank=True, null=True)
    d_opt_outs = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_visit_cust_sum_mv'


class IbwVisitCustTimeMv(models.Model):
    site_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    new_web_customers_all = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    anonymous_carts = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    assisted_web_orders = models.FloatField(blank=True, null=True)
    total_booked_amt_f = models.FloatField(blank=True, null=True)
    total_booked_amt_g = models.FloatField(blank=True, null=True)
    total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_visits = models.FloatField(blank=True, null=True)
    d_repeat_visits = models.FloatField(blank=True, null=True)
    d_visit_duration = models.FloatField(blank=True, null=True)
    d_page_views = models.FloatField(blank=True, null=True)
    d_daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_new_web_customers = models.FloatField(blank=True, null=True)
    d_new_web_customers_all = models.FloatField(blank=True, null=True)
    d_orders_site_visits = models.FloatField(blank=True, null=True)
    d_web_registrations = models.FloatField(blank=True, null=True)
    d_carts = models.FloatField(blank=True, null=True)
    d_orders = models.FloatField(blank=True, null=True)
    d_repeat_web_orders = models.FloatField(blank=True, null=True)
    d_anonymous_carts = models.FloatField(blank=True, null=True)
    d_total_order_inquiries = models.FloatField(blank=True, null=True)
    d_total_payment_inquiries = models.FloatField(blank=True, null=True)
    d_total_invoice_inquiries = models.FloatField(blank=True, null=True)
    d_a_leads = models.FloatField(blank=True, null=True)
    d_booked_amt_f = models.FloatField(blank=True, null=True)
    d_booked_amt_g = models.FloatField(blank=True, null=True)
    d_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_booked_web_orders = models.FloatField(blank=True, null=True)
    d_assisted_web_orders = models.FloatField(blank=True, null=True)
    d_total_booked_amt_f = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g = models.FloatField(blank=True, null=True)
    d_total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    d_total_booked_orders = models.FloatField(blank=True, null=True)
    d_opt_outs = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_visit_cust_time_mv'


class IbwVstCmpDlyuniqvstrMv(models.Model):
    site_id = models.BigIntegerField()
    customer_id = models.BigIntegerField(blank=True, null=True)
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    party_visitor_id = models.CharField(max_length=256)
    d_gid = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ibw_vst_cmp_dlyuniqvstr_mv'


class IbyDocsInPmtGt(models.Model):
    payment_id = models.BigIntegerField(blank=True, null=True)
    document_payable_id = models.BigIntegerField(primary_key=True)
    calling_app_id = models.BigIntegerField()
    calling_app_doc_unique_ref1 = models.CharField(max_length=100)
    calling_app_doc_unique_ref2 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref3 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref4 = models.CharField(max_length=100, blank=True, null=True)
    calling_app_doc_unique_ref5 = models.CharField(max_length=100, blank=True, null=True)
    pay_proc_trxn_type_code = models.CharField(max_length=100)
    document_amount = models.FloatField()
    document_currency_code = models.CharField(max_length=10)
    payment_grouping_number = models.BigIntegerField(blank=True, null=True)
    document_status = models.CharField(max_length=30)
    amount_withheld = models.FloatField(blank=True, null=True)
    payment_due_date = models.DateField(blank=True, null=True)
    discount_date = models.DateField(blank=True, null=True)
    internal_bank_account_id = models.BigIntegerField(blank=True, null=True)
    ext_payee_id = models.BigIntegerField()
    payee_party_id = models.BigIntegerField()
    party_site_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField()
    org_type = models.CharField(max_length=30)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    payment_curr_discount_taken = models.FloatField(blank=True, null=True)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    unique_remittance_identifier = models.CharField(max_length=30, blank=True, null=True)
    uri_check_digit = models.CharField(max_length=2, blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    object_version_number = models.BigIntegerField()
    dont_pay_flag = models.CharField(max_length=1, blank=True, null=True)
    dont_pay_reason_code = models.CharField(max_length=30, blank=True, null=True)
    dont_pay_description = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iby_docs_in_pmt_gt'


class IbyPyoInvoiceGt(models.Model):
    payment_id = models.BigIntegerField(blank=True, null=True)
    payment_instruction_id = models.BigIntegerField(blank=True, null=True)
    pay_selected_check_id = models.CharField(max_length=100, blank=True, null=True)
    vendor_num = models.CharField(max_length=30, blank=True, null=True)
    customer_num = models.CharField(max_length=100, blank=True, null=True)
    invoice_num = models.CharField(max_length=100)
    invoice_date = models.DateField()
    invoice_description = models.CharField(max_length=255, blank=True, null=True)
    proposed_payment_amount = models.FloatField()
    invoice_amount = models.FloatField()
    discount_amount = models.CharField(max_length=100, blank=True, null=True)
    print_selected_check_id = models.CharField(max_length=100, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    inv_global_attribute_category = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute1 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute2 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute3 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute4 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute5 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute6 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute7 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute8 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute9 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute10 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute11 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute12 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute13 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute14 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute15 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute16 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute17 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute18 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute19 = models.CharField(max_length=240, blank=True, null=True)
    inv_global_attribute20 = models.CharField(max_length=240, blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    remittance_message1 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message2 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message3 = models.CharField(max_length=150, blank=True, null=True)
    unique_remittance_identifier = models.CharField(max_length=30, blank=True, null=True)
    uri_check_digit = models.CharField(max_length=2, blank=True, null=True)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    payment_method_code = models.CharField(max_length=30)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    payment_mean = models.CharField(max_length=150, blank=True, null=True)
    payment_channel = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    payment_process_request_name = models.CharField(max_length=255, blank=True, null=True)
    bank_account_id = models.BigIntegerField(blank=True, null=True)
    vendor_bank_account_id = models.BigIntegerField(blank=True, null=True)
    payment_reference_number = models.BigIntegerField(blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iby_pyo_invoice_gt'


class IbyPyoPaymentGt(models.Model):
    communication_method = models.CharField(max_length=3, blank=True, null=True)
    test_flag = models.CharField(max_length=1, blank=True, null=True)
    document_id = models.CharField(max_length=3, blank=True, null=True)
    document_code = models.BigIntegerField()
    bk_tp_translator_code = models.CharField(max_length=30, blank=True, null=True)
    bk_tp_location_code_ext = models.CharField(max_length=40, blank=True, null=True)
    bk_tp_description = models.CharField(max_length=240, blank=True, null=True)
    bk_tp_reference_ext1 = models.CharField(max_length=240, blank=True, null=True)
    bk_tp_reference_ext2 = models.CharField(max_length=240, blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    tph_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    tph_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    tpd_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    document_standard = models.CharField(max_length=30, blank=True, null=True)
    transaction_handling_code = models.CharField(max_length=30, blank=True, null=True)
    check_amount = models.FloatField()
    currency_code = models.CharField(max_length=10)
    edi_payment_method = models.CharField(max_length=30)
    edi_payment_format = models.CharField(max_length=30, blank=True, null=True)
    bank_branch_type = models.CharField(max_length=30, blank=True, null=True)
    bank_account_type = models.CharField(max_length=25, blank=True, null=True)
    bank_account_num = models.CharField(max_length=30, blank=True, null=True)
    bank_edi_id_number = models.CharField(max_length=30, blank=True, null=True)
    vendor_bank_branch_type = models.CharField(max_length=30, blank=True, null=True)
    vendor_bank_account_type = models.CharField(max_length=25, blank=True, null=True)
    vendor_bank_account_num = models.CharField(max_length=100, blank=True, null=True)
    payment_date = models.DateField(blank=True, null=True)
    bank_num = models.CharField(max_length=30, blank=True, null=True)
    vendor_bank_num = models.CharField(max_length=30, blank=True, null=True)
    edi_remittance_method = models.CharField(max_length=30, blank=True, null=True)
    edi_remittance_instruction = models.CharField(max_length=150, blank=True, null=True)
    payment_instruction_id = models.BigIntegerField(blank=True, null=True)
    check_voucher_num = models.CharField(max_length=100, blank=True, null=True)
    selected_check_id = models.CharField(max_length=100, blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    customer_num = models.CharField(max_length=25, blank=True, null=True)
    segment1 = models.CharField(max_length=30, blank=True, null=True)
    vendor_edi_id_number = models.CharField(max_length=30, blank=True, null=True)
    segment2 = models.CharField(max_length=30, blank=True, null=True)
    segment3 = models.CharField(max_length=30, blank=True, null=True)
    segment4 = models.CharField(max_length=30, blank=True, null=True)
    segment5 = models.CharField(max_length=30, blank=True, null=True)
    bank_branch_id = models.FloatField(blank=True, null=True)
    bk_bank_branch_name = models.CharField(max_length=360, blank=True, null=True)
    bk_address_line1 = models.CharField(max_length=240, blank=True, null=True)
    bk_address_line2 = models.CharField(max_length=240, blank=True, null=True)
    bk_address_line3 = models.CharField(max_length=240, blank=True, null=True)
    bk_city = models.CharField(max_length=60, blank=True, null=True)
    bk_zip = models.CharField(max_length=60, blank=True, null=True)
    bk_country = models.CharField(max_length=60, blank=True, null=True)
    bk_state = models.CharField(max_length=60, blank=True, null=True)
    bk_province = models.CharField(max_length=60, blank=True, null=True)
    bk_contact_first_name = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_middle_name = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_last_name = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_title = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_prefix = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_area_code = models.CharField(max_length=100, blank=True, null=True)
    bk_contact_phone = models.CharField(max_length=100, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    vendor_name = models.CharField(max_length=360, blank=True, null=True)
    address_line1 = models.CharField(max_length=240, blank=True, null=True)
    address_line2 = models.CharField(max_length=240, blank=True, null=True)
    address_line3 = models.CharField(max_length=240, blank=True, null=True)
    address_line4 = models.CharField(max_length=240, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    zip = models.CharField(max_length=60, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=120, blank=True, null=True)
    province = models.CharField(max_length=120, blank=True, null=True)
    aba_global_attribute_category = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute1 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute2 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute3 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute4 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute5 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute6 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute7 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute8 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute9 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute10 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute11 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute12 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute13 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute14 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute15 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute16 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute17 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute18 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute19 = models.CharField(max_length=100, blank=True, null=True)
    aba_global_attribute20 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute_category = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute1 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute2 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute3 = models.CharField(max_length=60, blank=True, null=True)
    abas_global_attribute4 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute5 = models.CharField(max_length=30, blank=True, null=True)
    abas_global_attribute6 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute7 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute8 = models.CharField(max_length=30, blank=True, null=True)
    abas_global_attribute9 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute10 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute11 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute12 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute13 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute14 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute15 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute16 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute17 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute18 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute19 = models.CharField(max_length=100, blank=True, null=True)
    abas_global_attribute20 = models.CharField(max_length=100, blank=True, null=True)
    pvs_global_attribute_category = models.CharField(max_length=30, blank=True, null=True)
    pvs_global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    pvs_global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    bk_eft_swift_code = models.CharField(max_length=30, blank=True, null=True)
    sbk_bank_branch_number = models.CharField(max_length=30, blank=True, null=True)
    sbk_bank_branch_name = models.CharField(max_length=360, blank=True, null=True)
    sbk_address_line1 = models.CharField(max_length=240, blank=True, null=True)
    sbk_address_line2 = models.CharField(max_length=240, blank=True, null=True)
    sbk_address_line3 = models.CharField(max_length=240, blank=True, null=True)
    sbk_city = models.CharField(max_length=60, blank=True, null=True)
    sbk_state = models.CharField(max_length=60, blank=True, null=True)
    sbk_zip = models.CharField(max_length=60, blank=True, null=True)
    sbk_province = models.CharField(max_length=60, blank=True, null=True)
    sbk_country = models.CharField(max_length=60, blank=True, null=True)
    sbk_eft_swift_code = models.CharField(max_length=30, blank=True, null=True)
    bill_to_int_location_name = models.CharField(max_length=60, blank=True, null=True)
    bill_to_int_address1 = models.CharField(max_length=240, blank=True, null=True)
    bill_to_int_address2 = models.CharField(max_length=240, blank=True, null=True)
    bill_to_int_address3 = models.CharField(max_length=240, blank=True, null=True)
    bill_to_int_city = models.CharField(max_length=30, blank=True, null=True)
    bill_to_int_postal_code = models.CharField(max_length=30, blank=True, null=True)
    bill_to_int_country = models.CharField(max_length=60, blank=True, null=True)
    fi_vat_registration_num = models.CharField(max_length=50, blank=True, null=True)
    bill_to_int_location_id = models.BigIntegerField(blank=True, null=True)
    ece_tp_location_code = models.CharField(max_length=35, blank=True, null=True)
    bill_to_int_region1 = models.CharField(max_length=120, blank=True, null=True)
    bill_to_int_region2 = models.CharField(max_length=120, blank=True, null=True)
    bill_to_int_region3 = models.CharField(max_length=120, blank=True, null=True)
    map_id = models.BigIntegerField(blank=True, null=True)
    future_pay_due_date = models.DateField(blank=True, null=True)
    vendor_alternate_name = models.CharField(max_length=320, blank=True, null=True)
    vendor_alternate_site_code = models.CharField(max_length=320, blank=True, null=True)
    supplier_check_digits = models.CharField(max_length=2, blank=True, null=True)
    sbk_bank_name = models.CharField(max_length=360, blank=True, null=True)
    iban_number = models.CharField(max_length=50, blank=True, null=True)
    vendor_iban_number = models.CharField(max_length=50, blank=True, null=True)
    payment_mean = models.CharField(max_length=150, blank=True, null=True)
    payment_channel = models.CharField(max_length=150, blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_site_id = models.FloatField(blank=True, null=True)
    payment_reference_number = models.BigIntegerField(blank=True, null=True)
    sbk_bank_code = models.CharField(max_length=30, blank=True, null=True)
    payment_process_request_name = models.CharField(max_length=255, blank=True, null=True)
    payment_org_id = models.BigIntegerField(blank=True, null=True)
    bank_name = models.CharField(max_length=360, blank=True, null=True)
    branch_number = models.CharField(max_length=30, blank=True, null=True)
    bank_account_id = models.BigIntegerField(blank=True, null=True)
    bank_account_name = models.CharField(max_length=100, blank=True, null=True)
    bk_acct_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    bk_acct_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    vendor_bank_account_id = models.BigIntegerField(blank=True, null=True)
    sbk_acct_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    sbk_acct_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_county = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    vend_site_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    vendor_type_lookup_code = models.CharField(max_length=30, blank=True, null=True)
    vendor_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    vendor_attribute15 = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iby_pyo_payment_gt'


class IecTcTzPairsCache(models.Model):
    subset_id = models.FloatField(blank=True, null=True)
    territory_code = models.CharField(max_length=2, blank=True, null=True)
    region_id = models.FloatField(blank=True, null=True)
    timezone_id = models.FloatField(blank=True, null=True)
    tc_tz_pair_id = models.FloatField(blank=True, null=True)
    record_count = models.FloatField(blank=True, null=True)
    cache_only_flag = models.CharField(max_length=1, blank=True, null=True)
    security_group_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iec_tc_tz_pairs_cache'


class IecTzMappingCache(models.Model):
    territory_code = models.CharField(max_length=2, blank=True, null=True)
    area_code = models.CharField(max_length=10, blank=True, null=True)
    postal_code = models.CharField(max_length=60, blank=True, null=True)
    timezone_id = models.FloatField(blank=True, null=True)
    security_group_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iec_tz_mapping_cache'


class IecTzOffsetMapCache(models.Model):
    offset = models.CharField(max_length=500, blank=True, null=True)
    timezone_id = models.FloatField(blank=True, null=True)
    security_group_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iec_tz_offset_map_cache'


class IecValEntryCache(models.Model):
    list_entry_id = models.BigIntegerField(blank=True, null=True)
    subset_id = models.BigIntegerField(blank=True, null=True)
    postal_code = models.CharField(max_length=100, blank=True, null=True)
    callback_flag = models.CharField(max_length=1, blank=True, null=True)
    next_call_time = models.DateField(blank=True, null=True)
    do_not_use_flag = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason = models.FloatField(blank=True, null=True)
    record_out_flag = models.CharField(max_length=1, blank=True, null=True)
    record_release_time = models.DateField(blank=True, null=True)
    prev_status_code = models.CharField(max_length=32, blank=True, null=True)
    curr_cp_index = models.FloatField(blank=True, null=True)
    curr_cp_id = models.FloatField(blank=True, null=True)
    curr_cp_time_zone = models.FloatField(blank=True, null=True)
    curr_cp_country_code = models.CharField(max_length=30, blank=True, null=True)
    curr_cp_area_code = models.FloatField(blank=True, null=True)
    curr_cp_phone_number = models.CharField(max_length=60, blank=True, null=True)
    curr_cp_raw_phone_number = models.CharField(max_length=60, blank=True, null=True)
    curr_cp_territory_code = models.CharField(max_length=2, blank=True, null=True)
    curr_cp_region_id = models.BigIntegerField(blank=True, null=True)
    curr_cp_mktg_item_cc_tzs_id = models.BigIntegerField(blank=True, null=True)
    curr_cp_phone_line_type = models.CharField(max_length=30, blank=True, null=True)
    curr_cp_contact_point_purpose = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s1 = models.BigIntegerField(blank=True, null=True)
    time_zone_s1 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s1 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s1 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s1 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s1 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s1 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s1 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s1 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s1 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s1 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s1 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s1 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s2 = models.BigIntegerField(blank=True, null=True)
    time_zone_s2 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s2 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s2 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s2 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s2 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s2 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s2 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s2 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s2 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s2 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s2 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s2 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s3 = models.BigIntegerField(blank=True, null=True)
    time_zone_s3 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s3 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s3 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s3 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s3 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s3 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s3 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s3 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s3 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s3 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s3 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s3 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s4 = models.BigIntegerField(blank=True, null=True)
    time_zone_s4 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s4 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s4 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s4 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s4 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s4 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s4 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s4 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s4 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s4 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s4 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s4 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s5 = models.BigIntegerField(blank=True, null=True)
    time_zone_s5 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s5 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s5 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s5 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s5 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s5 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s5 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s5 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s5 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s5 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s5 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s5 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_id_s6 = models.BigIntegerField(blank=True, null=True)
    time_zone_s6 = models.CharField(max_length=500, blank=True, null=True)
    phone_country_code_s6 = models.CharField(max_length=30, blank=True, null=True)
    phone_area_code_s6 = models.CharField(max_length=500, blank=True, null=True)
    phone_number_s6 = models.CharField(max_length=500, blank=True, null=True)
    raw_phone_number_s6 = models.CharField(max_length=500, blank=True, null=True)
    territory_code_s6 = models.CharField(max_length=2, blank=True, null=True)
    region_id_s6 = models.BigIntegerField(blank=True, null=True)
    mktg_item_cc_tzs_id_s6 = models.BigIntegerField(blank=True, null=True)
    valid_flag_s6 = models.CharField(max_length=1, blank=True, null=True)
    do_not_use_reason_s6 = models.CharField(max_length=30, blank=True, null=True)
    phone_line_type_s6 = models.CharField(max_length=30, blank=True, null=True)
    contact_point_purpose_s6 = models.CharField(max_length=30, blank=True, null=True)
    security_group_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iec_val_entry_cache'


class IeuUwqmItemsGtt(models.Model):
    processing_set_id = models.FloatField()
    workitem_obj_code = models.CharField(max_length=30)
    workitem_pk_id = models.BigIntegerField()
    status_id = models.BigIntegerField(blank=True, null=True)
    priority_id = models.BigIntegerField(blank=True, null=True)
    priority_level = models.IntegerField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    title = models.CharField(max_length=1990)
    party_id = models.BigIntegerField(blank=True, null=True)
    owner_type = models.CharField(max_length=25, blank=True, null=True)
    owner_id = models.FloatField(blank=True, null=True)
    assignee_type = models.CharField(max_length=25, blank=True, null=True)
    assignee_id = models.FloatField(blank=True, null=True)
    source_object_id = models.FloatField(blank=True, null=True)
    source_object_type_code = models.CharField(max_length=30, blank=True, null=True)
    owner_type_actual = models.CharField(max_length=30, blank=True, null=True)
    assignee_type_actual = models.CharField(max_length=30, blank=True, null=True)
    application_id = models.FloatField()
    ieu_enum_type_uuid = models.CharField(max_length=38)
    status_update_user_id = models.FloatField(blank=True, null=True)
    work_item_number = models.CharField(max_length=64)
    reschedule_time = models.DateField(blank=True, null=True)
    ws_id = models.BigIntegerField(blank=True, null=True)
    distribution_status_id = models.IntegerField(blank=True, null=True)
    workitem_status = models.CharField(max_length=30)
    priority_code = models.CharField(max_length=30)
    ws_id1 = models.BigIntegerField(blank=True, null=True)
    ws_id2 = models.BigIntegerField(blank=True, null=True)
    association_ws_id = models.BigIntegerField(blank=True, null=True)
    dist_st_based_on_parent_flag = models.CharField(max_length=1, blank=True, null=True)
    dist_from = models.CharField(max_length=30, blank=True, null=True)
    dist_to = models.CharField(max_length=30, blank=True, null=True)
    parent_status_id = models.BigIntegerField(blank=True, null=True)
    parent_dist_status_id = models.BigIntegerField(blank=True, null=True)
    dist_id_flag = models.CharField(max_length=1, blank=True, null=True)
    planned_start_date = models.DateField(blank=True, null=True)
    planned_end_date = models.DateField(blank=True, null=True)
    scheduled_start_date = models.DateField(blank=True, null=True)
    scheduled_end_date = models.DateField(blank=True, null=True)
    actual_start_date = models.DateField(blank=True, null=True)
    actual_end_date = models.DateField(blank=True, null=True)
    date_selected = models.CharField(max_length=1, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    task_priority_id = models.FloatField(blank=True, null=True)
    uwq_def_work_item_status = models.CharField(max_length=50, blank=True, null=True)
    uwq_def_priority_code = models.CharField(max_length=30, blank=True, null=True)
    uwq_def_due_date = models.DateField(blank=True, null=True)
    uwq_def_ieu_enum_type_uuid = models.CharField(max_length=50, blank=True, null=True)
    uwq_def_original_grp_owner = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ieu_uwqm_items_gtt'


class IexMetricSummariesTemp(models.Model):
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField()
    score_comp_type_id = models.FloatField(blank=True, null=True)
    metric_value = models.CharField(max_length=1000, blank=True, null=True)
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    metric_rating = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iex_metric_summaries_temp'


class IexPopUwqSummGt(models.Model):
    object_id = models.FloatField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'iex_pop_uwq_summ_gt'


class IgiCisMthRetPayGt(models.Model):
    vendor_id = models.BigIntegerField(blank=True, null=True)
    child_vendor_id = models.BigIntegerField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    discount_amount = models.FloatField(blank=True, null=True)
    labour_cost = models.FloatField(blank=True, null=True)
    material_cost = models.FloatField(blank=True, null=True)
    total_deductions = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'igi_cis_mth_ret_pay_gt'


class InvMissingLiabTab(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_num = models.CharField(max_length=50)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15)
    vendor_id = models.BigIntegerField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    invoice_liab_ccid = models.BigIntegerField(blank=True, null=True)
    site_liab_ccid = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'inv_missing_liab_tab'


class Invoices9574881(models.Model):
    paid_on_behalf_employee_id = models.BigIntegerField(blank=True, null=True)
    amt_due_ccard_company = models.FloatField(blank=True, null=True)
    amt_due_employee = models.FloatField(blank=True, null=True)
    invoice_id = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    vendor_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50)
    set_of_books_id = models.BigIntegerField()
    invoice_currency_code = models.CharField(max_length=15)
    payment_currency_code = models.CharField(max_length=15)
    payment_cross_rate = models.FloatField()
    invoice_amount = models.FloatField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    amount_paid = models.FloatField(blank=True, null=True)
    discount_amount_taken = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    source = models.CharField(max_length=25, blank=True, null=True)
    invoice_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    batch_id = models.BigIntegerField(blank=True, null=True)
    amount_applicable_to_discount = models.FloatField(blank=True, null=True)
    tax_amount = models.FloatField(blank=True, null=True)
    terms_id = models.BigIntegerField(blank=True, null=True)
    terms_date = models.DateField(blank=True, null=True)
    payment_method_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    pay_group_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    accts_pay_code_combination_id = models.BigIntegerField(blank=True, null=True)
    payment_status_flag = models.CharField(max_length=1, blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    vat_code = models.CharField(max_length=15, blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    exclusive_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    po_header_id = models.BigIntegerField(blank=True, null=True)
    freight_amount = models.FloatField(blank=True, null=True)
    goods_received_date = models.DateField(blank=True, null=True)
    invoice_received_date = models.DateField(blank=True, null=True)
    voucher_num = models.CharField(max_length=50, blank=True, null=True)
    approved_amount = models.FloatField(blank=True, null=True)
    recurring_payment_id = models.BigIntegerField(blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    earliest_settlement_date = models.DateField(blank=True, null=True)
    original_prepayment_amount = models.FloatField(blank=True, null=True)
    party_site_id = models.BigIntegerField(blank=True, null=True)
    pay_proc_trxn_type_code = models.CharField(max_length=30, blank=True, null=True)
    payment_function = models.CharField(max_length=30, blank=True, null=True)
    requester_id = models.BigIntegerField(blank=True, null=True)
    validation_request_id = models.BigIntegerField(blank=True, null=True)
    validated_tax_amount = models.FloatField(blank=True, null=True)
    cust_registration_code = models.CharField(max_length=50, blank=True, null=True)
    cust_registration_number = models.CharField(max_length=30, blank=True, null=True)
    port_of_entry_code = models.CharField(max_length=30, blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    vendor_contact_id = models.BigIntegerField(blank=True, null=True)
    internal_contact_email = models.CharField(max_length=2000, blank=True, null=True)
    disc_is_inv_less_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    exclude_freight_from_discount = models.CharField(max_length=1, blank=True, null=True)
    approval_ready_flag = models.CharField(max_length=1)
    approval_iteration = models.IntegerField(blank=True, null=True)
    doc_sequence_id = models.FloatField(blank=True, null=True)
    doc_sequence_value = models.FloatField(blank=True, null=True)
    doc_category_code = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    approval_status = models.CharField(max_length=25, blank=True, null=True)
    approval_description = models.CharField(max_length=240, blank=True, null=True)
    invoice_distribution_total = models.FloatField(blank=True, null=True)
    posting_status = models.CharField(max_length=15, blank=True, null=True)
    prepay_flag = models.CharField(max_length=1, blank=True, null=True)
    authorized_by = models.CharField(max_length=25, blank=True, null=True)
    cancelled_date = models.DateField(blank=True, null=True)
    cancelled_by = models.BigIntegerField(blank=True, null=True)
    cancelled_amount = models.FloatField(blank=True, null=True)
    temp_cancelled_amount = models.FloatField(blank=True, null=True)
    project_accounting_context = models.CharField(max_length=30, blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    ussgl_trx_code_context = models.CharField(max_length=30, blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    pa_quantity = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    pa_default_dist_ccid = models.BigIntegerField(blank=True, null=True)
    vendor_prepay_amount = models.FloatField(blank=True, null=True)
    payment_amount_total = models.FloatField(blank=True, null=True)
    awt_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_group_id = models.BigIntegerField(blank=True, null=True)
    reference_1 = models.CharField(max_length=30, blank=True, null=True)
    reference_2 = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    pre_withholding_amount = models.FloatField(blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    auto_tax_calc_flag = models.CharField(max_length=1, blank=True, null=True)
    payment_cross_rate_type = models.CharField(max_length=30, blank=True, null=True)
    payment_cross_rate_date = models.DateField(blank=True, null=True)
    pay_curr_invoice_amount = models.FloatField(blank=True, null=True)
    mrc_base_amount = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_rate = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_rate_type = models.CharField(max_length=2000, blank=True, null=True)
    mrc_exchange_date = models.CharField(max_length=2000, blank=True, null=True)
    gl_date = models.DateField()
    award_id = models.BigIntegerField(blank=True, null=True)
    quick_credit = models.CharField(max_length=1, blank=True, null=True)
    credited_invoice_id = models.BigIntegerField(blank=True, null=True)
    distribution_set_id = models.BigIntegerField(blank=True, null=True)
    application_id = models.BigIntegerField(blank=True, null=True)
    product_table = models.CharField(max_length=30, blank=True, null=True)
    reference_key1 = models.CharField(max_length=150, blank=True, null=True)
    reference_key2 = models.CharField(max_length=150, blank=True, null=True)
    reference_key3 = models.CharField(max_length=150, blank=True, null=True)
    reference_key4 = models.CharField(max_length=150, blank=True, null=True)
    reference_key5 = models.CharField(max_length=150, blank=True, null=True)
    total_tax_amount = models.FloatField(blank=True, null=True)
    self_assessed_tax_amount = models.FloatField(blank=True, null=True)
    tax_related_invoice_id = models.BigIntegerField(blank=True, null=True)
    trx_business_category = models.CharField(max_length=240, blank=True, null=True)
    user_defined_fisc_class = models.CharField(max_length=240, blank=True, null=True)
    taxation_country = models.CharField(max_length=30, blank=True, null=True)
    document_sub_type = models.CharField(max_length=150, blank=True, null=True)
    supplier_tax_invoice_number = models.CharField(max_length=150, blank=True, null=True)
    supplier_tax_invoice_date = models.DateField(blank=True, null=True)
    pay_awt_group_id = models.BigIntegerField(blank=True, null=True)
    original_invoice_amount = models.FloatField(blank=True, null=True)
    dispute_reason = models.CharField(max_length=100, blank=True, null=True)
    remit_to_supplier_name = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_id = models.BigIntegerField(blank=True, null=True)
    remit_to_supplier_site = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_site_id = models.BigIntegerField(blank=True, null=True)
    relationship_id = models.BigIntegerField(blank=True, null=True)
    tax_invoice_internal_seq = models.CharField(max_length=150, blank=True, null=True)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    force_revalidation_flag = models.CharField(max_length=1, blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    remittance_message1 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message2 = models.CharField(max_length=150, blank=True, null=True)
    remittance_message3 = models.CharField(max_length=150, blank=True, null=True)
    unique_remittance_identifier = models.CharField(max_length=30, blank=True, null=True)
    supplier_tax_exchange_rate = models.FloatField(blank=True, null=True)
    tax_invoice_recording_date = models.DateField(blank=True, null=True)
    uri_check_digit = models.CharField(max_length=2, blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    wfapproval_status = models.CharField(max_length=50)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    payment_method_code = models.CharField(max_length=30, blank=True, null=True)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    quick_po_header_id = models.BigIntegerField(blank=True, null=True)
    net_of_retainage_flag = models.CharField(max_length=1, blank=True, null=True)
    release_amount_net_of_tax = models.FloatField(blank=True, null=True)
    control_amount = models.FloatField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'invoices_9574881'


class IscDbiCfm000Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    master_item_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g = models.FloatField(blank=True, null=True)
    booked_amt2_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g1 = models.FloatField(blank=True, null=True)
    booked_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_f = models.FloatField(blank=True, null=True)
    booked_amt2_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty2 = models.FloatField(blank=True, null=True)
    booked_qty2_cnt = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    scheduled_days = models.FloatField(blank=True, null=True)
    scheduled_days_cnt = models.FloatField(blank=True, null=True)
    requested_days = models.FloatField(blank=True, null=True)
    requested_days_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_000_mv'


class IscDbiCfm001Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    bklg_amt_g = models.FloatField(blank=True, null=True)
    bklg_amt_g_cnt = models.FloatField(blank=True, null=True)
    bklg_amt_g1 = models.FloatField(blank=True, null=True)
    bklg_amt_g1_cnt = models.FloatField(blank=True, null=True)
    bklg_amt_f = models.FloatField(blank=True, null=True)
    bklg_amt_f_cnt = models.FloatField(blank=True, null=True)
    bklog_qty = models.FloatField(blank=True, null=True)
    bklog_qty_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_001_mv'


class IscDbiCfm002Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    master_item_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_f_cnt = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    returned_qty_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_days = models.FloatField(blank=True, null=True)
    book_to_fulfill_days_c = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt_c = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_002_mv'


class IscDbiCfm003Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    master_item_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    return_reason = models.CharField(max_length=80, blank=True, null=True)
    time_fulfilled_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    fact_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    item_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_003_mv'


class IscDbiCfm004Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_004_mv'


class IscDbiCfm005Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    internal_flag = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=5, blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_005_mv'


class IscDbiCfm006Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    time_schedule_date_id = models.DateField(blank=True, null=True)
    time_promise_date_id = models.DateField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    count_pdue_line = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    fact_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sold_to_org_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    top_model_line_id = models.FloatField(blank=True, null=True)
    line_id = models.FloatField(blank=True, null=True)
    item_type_code = models.CharField(max_length=80, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_006_mv'


class IscDbiCfm007Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    master_item_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    return_reason = models.CharField(max_length=80, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    return_reason_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_f_cnt = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    returned_qty_cnt = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_007_mv'


class IscDbiCfm008Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_cnt = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    days_late_promise_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt_c = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    pdue_amt_f_cnt = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g_cnt = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    pdue_amt_g1_cnt = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    pdue_qty_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket1_days_late = models.FloatField(blank=True, null=True)
    bucket2_days_late = models.FloatField(blank=True, null=True)
    bucket3_days_late = models.FloatField(blank=True, null=True)
    bucket4_days_late = models.FloatField(blank=True, null=True)
    bucket5_days_late = models.FloatField(blank=True, null=True)
    bucket6_days_late = models.FloatField(blank=True, null=True)
    bucket7_days_late = models.FloatField(blank=True, null=True)
    bucket8_days_late = models.FloatField(blank=True, null=True)
    bucket9_days_late = models.FloatField(blank=True, null=True)
    bucket10_days_late = models.FloatField(blank=True, null=True)
    bucket1_days_late_c = models.FloatField(blank=True, null=True)
    bucket2_days_late_c = models.FloatField(blank=True, null=True)
    bucket3_days_late_c = models.FloatField(blank=True, null=True)
    bucket4_days_late_c = models.FloatField(blank=True, null=True)
    bucket5_days_late_c = models.FloatField(blank=True, null=True)
    bucket6_days_late_c = models.FloatField(blank=True, null=True)
    bucket7_days_late_c = models.FloatField(blank=True, null=True)
    bucket8_days_late_c = models.FloatField(blank=True, null=True)
    bucket9_days_late_c = models.FloatField(blank=True, null=True)
    bucket10_days_late_c = models.FloatField(blank=True, null=True)
    bucket1_qty = models.FloatField(blank=True, null=True)
    bucket2_qty = models.FloatField(blank=True, null=True)
    bucket3_qty = models.FloatField(blank=True, null=True)
    bucket4_qty = models.FloatField(blank=True, null=True)
    bucket5_qty = models.FloatField(blank=True, null=True)
    bucket6_qty = models.FloatField(blank=True, null=True)
    bucket7_qty = models.FloatField(blank=True, null=True)
    bucket8_qty = models.FloatField(blank=True, null=True)
    bucket9_qty = models.FloatField(blank=True, null=True)
    bucket10_qty = models.FloatField(blank=True, null=True)
    bucket1_qty_c = models.FloatField(blank=True, null=True)
    bucket2_qty_c = models.FloatField(blank=True, null=True)
    bucket3_qty_c = models.FloatField(blank=True, null=True)
    bucket4_qty_c = models.FloatField(blank=True, null=True)
    bucket5_qty_c = models.FloatField(blank=True, null=True)
    bucket6_qty_c = models.FloatField(blank=True, null=True)
    bucket7_qty_c = models.FloatField(blank=True, null=True)
    bucket8_qty_c = models.FloatField(blank=True, null=True)
    bucket9_qty_c = models.FloatField(blank=True, null=True)
    bucket10_qty_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket1_days_late_p = models.FloatField(blank=True, null=True)
    bucket2_days_late_p = models.FloatField(blank=True, null=True)
    bucket3_days_late_p = models.FloatField(blank=True, null=True)
    bucket4_days_late_p = models.FloatField(blank=True, null=True)
    bucket5_days_late_p = models.FloatField(blank=True, null=True)
    bucket6_days_late_p = models.FloatField(blank=True, null=True)
    bucket7_days_late_p = models.FloatField(blank=True, null=True)
    bucket8_days_late_p = models.FloatField(blank=True, null=True)
    bucket9_days_late_p = models.FloatField(blank=True, null=True)
    bucket10_days_late_p = models.FloatField(blank=True, null=True)
    bucket1_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket2_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket3_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket4_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket5_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket6_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket7_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket8_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket9_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket10_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket1_qty_p = models.FloatField(blank=True, null=True)
    bucket2_qty_p = models.FloatField(blank=True, null=True)
    bucket3_qty_p = models.FloatField(blank=True, null=True)
    bucket4_qty_p = models.FloatField(blank=True, null=True)
    bucket5_qty_p = models.FloatField(blank=True, null=True)
    bucket6_qty_p = models.FloatField(blank=True, null=True)
    bucket7_qty_p = models.FloatField(blank=True, null=True)
    bucket8_qty_p = models.FloatField(blank=True, null=True)
    bucket9_qty_p = models.FloatField(blank=True, null=True)
    bucket10_qty_p = models.FloatField(blank=True, null=True)
    bucket1_qty_p_c = models.FloatField(blank=True, null=True)
    bucket2_qty_p_c = models.FloatField(blank=True, null=True)
    bucket3_qty_p_c = models.FloatField(blank=True, null=True)
    bucket4_qty_p_c = models.FloatField(blank=True, null=True)
    bucket5_qty_p_c = models.FloatField(blank=True, null=True)
    bucket6_qty_p_c = models.FloatField(blank=True, null=True)
    bucket7_qty_p_c = models.FloatField(blank=True, null=True)
    bucket8_qty_p_c = models.FloatField(blank=True, null=True)
    bucket9_qty_p_c = models.FloatField(blank=True, null=True)
    bucket10_qty_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_008_mv'


class IscDbiCfm009Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    inv_org_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g = models.FloatField(blank=True, null=True)
    booked_amt2_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g1 = models.FloatField(blank=True, null=True)
    booked_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_f = models.FloatField(blank=True, null=True)
    booked_amt2_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty2 = models.FloatField(blank=True, null=True)
    booked_qty2_cnt = models.FloatField(blank=True, null=True)
    scheduled_days = models.FloatField(blank=True, null=True)
    scheduled_days_cnt = models.FloatField(blank=True, null=True)
    requested_days = models.FloatField(blank=True, null=True)
    requested_days_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_009_mv'


class IscDbiCfm010Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    bklg_amt_g = models.FloatField(blank=True, null=True)
    bklg_amt_g_cnt = models.FloatField(blank=True, null=True)
    bklg_amt_f = models.FloatField(blank=True, null=True)
    bklg_amt_f_cnt = models.FloatField(blank=True, null=True)
    bklog_qty = models.FloatField(blank=True, null=True)
    bklog_qty_cnt = models.FloatField(blank=True, null=True)
    bklg_amt_g1 = models.FloatField(blank=True, null=True)
    bklg_amt_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_010_mv'


class IscDbiCfm011Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    inv_org_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    returned_qty_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_days = models.FloatField(blank=True, null=True)
    book_to_fulfill_days_c = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt_c = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)
    lines_cnt_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_011_mv'


class IscDbiCfm012Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_cnt = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    days_late_promise_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt_c = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    pdue_amt_f_cnt = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g_cnt = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    pdue_amt_g1_cnt = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    pdue_qty_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket1_days_late = models.FloatField(blank=True, null=True)
    bucket2_days_late = models.FloatField(blank=True, null=True)
    bucket3_days_late = models.FloatField(blank=True, null=True)
    bucket4_days_late = models.FloatField(blank=True, null=True)
    bucket5_days_late = models.FloatField(blank=True, null=True)
    bucket6_days_late = models.FloatField(blank=True, null=True)
    bucket7_days_late = models.FloatField(blank=True, null=True)
    bucket8_days_late = models.FloatField(blank=True, null=True)
    bucket9_days_late = models.FloatField(blank=True, null=True)
    bucket10_days_late = models.FloatField(blank=True, null=True)
    bucket1_days_late_c = models.FloatField(blank=True, null=True)
    bucket2_days_late_c = models.FloatField(blank=True, null=True)
    bucket3_days_late_c = models.FloatField(blank=True, null=True)
    bucket4_days_late_c = models.FloatField(blank=True, null=True)
    bucket5_days_late_c = models.FloatField(blank=True, null=True)
    bucket6_days_late_c = models.FloatField(blank=True, null=True)
    bucket7_days_late_c = models.FloatField(blank=True, null=True)
    bucket8_days_late_c = models.FloatField(blank=True, null=True)
    bucket9_days_late_c = models.FloatField(blank=True, null=True)
    bucket10_days_late_c = models.FloatField(blank=True, null=True)
    bucket1_qty = models.FloatField(blank=True, null=True)
    bucket2_qty = models.FloatField(blank=True, null=True)
    bucket3_qty = models.FloatField(blank=True, null=True)
    bucket4_qty = models.FloatField(blank=True, null=True)
    bucket5_qty = models.FloatField(blank=True, null=True)
    bucket6_qty = models.FloatField(blank=True, null=True)
    bucket7_qty = models.FloatField(blank=True, null=True)
    bucket8_qty = models.FloatField(blank=True, null=True)
    bucket9_qty = models.FloatField(blank=True, null=True)
    bucket10_qty = models.FloatField(blank=True, null=True)
    bucket1_qty_c = models.FloatField(blank=True, null=True)
    bucket2_qty_c = models.FloatField(blank=True, null=True)
    bucket3_qty_c = models.FloatField(blank=True, null=True)
    bucket4_qty_c = models.FloatField(blank=True, null=True)
    bucket5_qty_c = models.FloatField(blank=True, null=True)
    bucket6_qty_c = models.FloatField(blank=True, null=True)
    bucket7_qty_c = models.FloatField(blank=True, null=True)
    bucket8_qty_c = models.FloatField(blank=True, null=True)
    bucket9_qty_c = models.FloatField(blank=True, null=True)
    bucket10_qty_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_c = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_p_c = models.FloatField(blank=True, null=True)
    bucket1_days_late_p = models.FloatField(blank=True, null=True)
    bucket2_days_late_p = models.FloatField(blank=True, null=True)
    bucket3_days_late_p = models.FloatField(blank=True, null=True)
    bucket4_days_late_p = models.FloatField(blank=True, null=True)
    bucket5_days_late_p = models.FloatField(blank=True, null=True)
    bucket6_days_late_p = models.FloatField(blank=True, null=True)
    bucket7_days_late_p = models.FloatField(blank=True, null=True)
    bucket8_days_late_p = models.FloatField(blank=True, null=True)
    bucket9_days_late_p = models.FloatField(blank=True, null=True)
    bucket10_days_late_p = models.FloatField(blank=True, null=True)
    bucket1_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket2_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket3_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket4_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket5_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket6_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket7_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket8_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket9_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket10_days_late_p_c = models.FloatField(blank=True, null=True)
    bucket1_qty_p = models.FloatField(blank=True, null=True)
    bucket2_qty_p = models.FloatField(blank=True, null=True)
    bucket3_qty_p = models.FloatField(blank=True, null=True)
    bucket4_qty_p = models.FloatField(blank=True, null=True)
    bucket5_qty_p = models.FloatField(blank=True, null=True)
    bucket6_qty_p = models.FloatField(blank=True, null=True)
    bucket7_qty_p = models.FloatField(blank=True, null=True)
    bucket8_qty_p = models.FloatField(blank=True, null=True)
    bucket9_qty_p = models.FloatField(blank=True, null=True)
    bucket10_qty_p = models.FloatField(blank=True, null=True)
    bucket1_qty_p_c = models.FloatField(blank=True, null=True)
    bucket2_qty_p_c = models.FloatField(blank=True, null=True)
    bucket3_qty_p_c = models.FloatField(blank=True, null=True)
    bucket4_qty_p_c = models.FloatField(blank=True, null=True)
    bucket5_qty_p_c = models.FloatField(blank=True, null=True)
    bucket6_qty_p_c = models.FloatField(blank=True, null=True)
    bucket7_qty_p_c = models.FloatField(blank=True, null=True)
    bucket8_qty_p_c = models.FloatField(blank=True, null=True)
    bucket9_qty_p_c = models.FloatField(blank=True, null=True)
    bucket10_qty_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_p_c = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_p_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_012_mv'


class IscDbiCfm013Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    pdue_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    item_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_013_mv'


class IscDbiCfm014Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g = models.FloatField(blank=True, null=True)
    booked_amt2_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_g1 = models.FloatField(blank=True, null=True)
    booked_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt2_f = models.FloatField(blank=True, null=True)
    booked_amt2_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty2 = models.FloatField(blank=True, null=True)
    booked_qty2_cnt = models.FloatField(blank=True, null=True)
    scheduled_days = models.FloatField(blank=True, null=True)
    scheduled_days_cnt = models.FloatField(blank=True, null=True)
    requested_days = models.FloatField(blank=True, null=True)
    requested_days_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt = models.FloatField(blank=True, null=True)
    booked_line_cnt_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_014_mv'


class IscDbiCfm015Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    returned_qty_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_days = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)
    lines_cnt_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_015_mv'


class IscDbiCfm016Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_016_mv'


class IscDbiCfm017Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    internal_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_f_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cfm_017_mv'


class IscDbiCpm000Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    service_item_id = models.CharField(max_length=81, blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    activated_g = models.FloatField(blank=True, null=True)
    activated_new_g = models.FloatField(blank=True, null=True)
    activated_renew_g = models.FloatField(blank=True, null=True)
    expired_g = models.FloatField(blank=True, null=True)
    expired_new_g = models.FloatField(blank=True, null=True)
    expired_renew_g = models.FloatField(blank=True, null=True)
    c_activated_g = models.FloatField(blank=True, null=True)
    c_activated_new_g = models.FloatField(blank=True, null=True)
    c_activated_renew_g = models.FloatField(blank=True, null=True)
    c_expired_g = models.FloatField(blank=True, null=True)
    c_expired_new_g = models.FloatField(blank=True, null=True)
    c_expired_renew_g = models.FloatField(blank=True, null=True)
    activated_g1 = models.FloatField(blank=True, null=True)
    activated_new_g1 = models.FloatField(blank=True, null=True)
    activated_renew_g1 = models.FloatField(blank=True, null=True)
    expired_g1 = models.FloatField(blank=True, null=True)
    expired_new_g1 = models.FloatField(blank=True, null=True)
    expired_renew_g1 = models.FloatField(blank=True, null=True)
    c_activated_g1 = models.FloatField(blank=True, null=True)
    c_activated_new_g1 = models.FloatField(blank=True, null=True)
    c_activated_renew_g1 = models.FloatField(blank=True, null=True)
    c_expired_g1 = models.FloatField(blank=True, null=True)
    c_expired_new_g1 = models.FloatField(blank=True, null=True)
    c_expired_renew_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_000_mv'


class IscDbiCpm001Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    service_item_id = models.CharField(max_length=81, blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    active_g = models.FloatField(blank=True, null=True)
    active_new_g = models.FloatField(blank=True, null=True)
    active_renew_g = models.FloatField(blank=True, null=True)
    c_active_g = models.FloatField(blank=True, null=True)
    c_active_new_g = models.FloatField(blank=True, null=True)
    c_active_renew_g = models.FloatField(blank=True, null=True)
    active_g1 = models.FloatField(blank=True, null=True)
    active_new_g1 = models.FloatField(blank=True, null=True)
    active_renew_g1 = models.FloatField(blank=True, null=True)
    c_active_g1 = models.FloatField(blank=True, null=True)
    c_active_new_g1 = models.FloatField(blank=True, null=True)
    c_active_renew_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_001_mv'


class IscDbiCpm002Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    c_booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    c_booked_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    c_returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    c_returned_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_002_mv'


class IscDbiCpm003Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    activated_g = models.FloatField(blank=True, null=True)
    activated_new_g = models.FloatField(blank=True, null=True)
    activated_renew_g = models.FloatField(blank=True, null=True)
    expired_g = models.FloatField(blank=True, null=True)
    expired_new_g = models.FloatField(blank=True, null=True)
    expired_renew_g = models.FloatField(blank=True, null=True)
    c_activated_g = models.FloatField(blank=True, null=True)
    c_activated_new_g = models.FloatField(blank=True, null=True)
    c_activated_renew_g = models.FloatField(blank=True, null=True)
    c_expired_g = models.FloatField(blank=True, null=True)
    c_expired_new_g = models.FloatField(blank=True, null=True)
    c_expired_renew_g = models.FloatField(blank=True, null=True)
    activated_g1 = models.FloatField(blank=True, null=True)
    activated_new_g1 = models.FloatField(blank=True, null=True)
    activated_renew_g1 = models.FloatField(blank=True, null=True)
    expired_g1 = models.FloatField(blank=True, null=True)
    expired_new_g1 = models.FloatField(blank=True, null=True)
    expired_renew_g1 = models.FloatField(blank=True, null=True)
    c_activated_g1 = models.FloatField(blank=True, null=True)
    c_activated_new_g1 = models.FloatField(blank=True, null=True)
    c_activated_renew_g1 = models.FloatField(blank=True, null=True)
    c_expired_g1 = models.FloatField(blank=True, null=True)
    c_expired_new_g1 = models.FloatField(blank=True, null=True)
    c_expired_renew_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_003_mv'


class IscDbiCpm004Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    active_g = models.FloatField(blank=True, null=True)
    active_new_g = models.FloatField(blank=True, null=True)
    active_renew_g = models.FloatField(blank=True, null=True)
    c_active_g = models.FloatField(blank=True, null=True)
    c_active_new_g = models.FloatField(blank=True, null=True)
    c_active_renew_g = models.FloatField(blank=True, null=True)
    active_g1 = models.FloatField(blank=True, null=True)
    active_new_g1 = models.FloatField(blank=True, null=True)
    active_renew_g1 = models.FloatField(blank=True, null=True)
    c_active_g1 = models.FloatField(blank=True, null=True)
    c_active_new_g1 = models.FloatField(blank=True, null=True)
    c_active_renew_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_004_mv'


class IscDbiCpm005Mv(models.Model):
    customer_flag = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    c_booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    c_booked_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    c_returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    c_returned_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_cpm_005_mv'


class IscDbiFm0000Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    prod_category_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    shipped_line_cnt = models.FloatField(blank=True, null=True)
    shipped_l_c = models.FloatField(blank=True, null=True)
    late_line_cnt = models.FloatField(blank=True, null=True)
    late_l_c = models.FloatField(blank=True, null=True)
    late_line_promise_cnt = models.FloatField(blank=True, null=True)
    late_l_promise_c = models.FloatField(blank=True, null=True)
    early_line_cnt = models.FloatField(blank=True, null=True)
    early_l_c = models.FloatField(blank=True, null=True)
    on_time_line_cnt = models.FloatField(blank=True, null=True)
    on_time_l_c = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_cnt = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    days_late_promise_cnt = models.FloatField(blank=True, null=True)
    shipped_late_qty = models.FloatField(blank=True, null=True)
    shipped_late_qty_cnt = models.FloatField(blank=True, null=True)
    shipped_late_p_qty = models.FloatField(blank=True, null=True)
    shipped_late_p_qty_cnt = models.FloatField(blank=True, null=True)
    book_to_ship_days = models.FloatField(blank=True, null=True)
    book_to_ship_cnt = models.FloatField(blank=True, null=True)
    book_to_ship_days_late = models.FloatField(blank=True, null=True)
    book_to_ship_late_cnt = models.FloatField(blank=True, null=True)
    book_to_ship_days_late_p = models.FloatField(blank=True, null=True)
    book_to_ship_late_p_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_c = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    shipped_qty = models.FloatField(blank=True, null=True)
    freight_charge_amt_f = models.FloatField(blank=True, null=True)
    freight_charge_amt_f_cnt = models.FloatField(blank=True, null=True)
    freight_charge_amt_g = models.FloatField(blank=True, null=True)
    freight_charge_amt_g_cnt = models.FloatField(blank=True, null=True)
    freight_charge_amt_g1 = models.FloatField(blank=True, null=True)
    freight_charge_amt_g1_cnt = models.FloatField(blank=True, null=True)
    freight_cost_amt_f = models.FloatField(blank=True, null=True)
    freight_cost_amt_f_cnt = models.FloatField(blank=True, null=True)
    freight_cost_amt_g = models.FloatField(blank=True, null=True)
    freight_cost_amt_g_cnt = models.FloatField(blank=True, null=True)
    freight_cost_amt_g1 = models.FloatField(blank=True, null=True)
    freight_cost_amt_g1_cnt = models.FloatField(blank=True, null=True)
    shipped_qty_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0000_mv'


class IscDbiFm0001Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    schedule_line_cnt = models.FloatField(blank=True, null=True)
    schedule_l_c = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0001_mv'


class IscDbiFm0003Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    time_shipped_date_id = models.DateField(blank=True, null=True)
    late_line_cnt = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    book_to_ship_days = models.FloatField(blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    shipped_late_qty = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    fact_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    item_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0003_mv'


class IscDbiFm0004Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    time_schedule_date_id = models.DateField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    count_pdue_line = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    fact_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sold_to_org_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    line_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0004_mv'


class IscDbiFm0006Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_line_cnt_c = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    pdue_qty_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_c = models.FloatField(blank=True, null=True)
    bucket1_days_late = models.FloatField(blank=True, null=True)
    bucket2_days_late = models.FloatField(blank=True, null=True)
    bucket3_days_late = models.FloatField(blank=True, null=True)
    bucket4_days_late = models.FloatField(blank=True, null=True)
    bucket5_days_late = models.FloatField(blank=True, null=True)
    bucket6_days_late = models.FloatField(blank=True, null=True)
    bucket7_days_late = models.FloatField(blank=True, null=True)
    bucket8_days_late = models.FloatField(blank=True, null=True)
    bucket9_days_late = models.FloatField(blank=True, null=True)
    bucket10_days_late = models.FloatField(blank=True, null=True)
    bucket1_days_late_c = models.FloatField(blank=True, null=True)
    bucket2_days_late_c = models.FloatField(blank=True, null=True)
    bucket3_days_late_c = models.FloatField(blank=True, null=True)
    bucket4_days_late_c = models.FloatField(blank=True, null=True)
    bucket5_days_late_c = models.FloatField(blank=True, null=True)
    bucket6_days_late_c = models.FloatField(blank=True, null=True)
    bucket7_days_late_c = models.FloatField(blank=True, null=True)
    bucket8_days_late_c = models.FloatField(blank=True, null=True)
    bucket9_days_late_c = models.FloatField(blank=True, null=True)
    bucket10_days_late_c = models.FloatField(blank=True, null=True)
    bucket1_qty = models.FloatField(blank=True, null=True)
    bucket2_qty = models.FloatField(blank=True, null=True)
    bucket3_qty = models.FloatField(blank=True, null=True)
    bucket4_qty = models.FloatField(blank=True, null=True)
    bucket5_qty = models.FloatField(blank=True, null=True)
    bucket6_qty = models.FloatField(blank=True, null=True)
    bucket7_qty = models.FloatField(blank=True, null=True)
    bucket8_qty = models.FloatField(blank=True, null=True)
    bucket9_qty = models.FloatField(blank=True, null=True)
    bucket10_qty = models.FloatField(blank=True, null=True)
    bucket1_qty_c = models.FloatField(blank=True, null=True)
    bucket2_qty_c = models.FloatField(blank=True, null=True)
    bucket3_qty_c = models.FloatField(blank=True, null=True)
    bucket4_qty_c = models.FloatField(blank=True, null=True)
    bucket5_qty_c = models.FloatField(blank=True, null=True)
    bucket6_qty_c = models.FloatField(blank=True, null=True)
    bucket7_qty_c = models.FloatField(blank=True, null=True)
    bucket8_qty_c = models.FloatField(blank=True, null=True)
    bucket9_qty_c = models.FloatField(blank=True, null=True)
    bucket10_qty_c = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0006_mv'


class IscDbiFm0007Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    time_request_date_id = models.DateField(blank=True, null=True)
    time_schedule_date_id = models.DateField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    days_late_request = models.FloatField(blank=True, null=True)
    days_late_schedule = models.FloatField(blank=True, null=True)
    backorder_qty = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    backorder_line_cnt = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    back_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    item_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0007_mv'


class IscDbiFm0008Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    pdue_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    item_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    marker = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_fm_0008_mv'


class IscDbiPm0000Mv(models.Model):
    snapshot_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    sr_supplier_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    purchasing_cost = models.FloatField(blank=True, null=True)
    purchasing_cost_cnt = models.FloatField(blank=True, null=True)
    purchasing_cost_g = models.FloatField(blank=True, null=True)
    pur_cost_g_cnt = models.FloatField(blank=True, null=True)
    purchasing_cost_g1 = models.FloatField(blank=True, null=True)
    pur_cost_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_pm_0000_mv'


class IscDbiPm0001Mv(models.Model):
    snapshot_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    carrying_cost = models.FloatField(blank=True, null=True)
    carrying_cost_cnt = models.FloatField(blank=True, null=True)
    carrying_cost_g = models.FloatField(blank=True, null=True)
    carrying_cost_g_cnt = models.FloatField(blank=True, null=True)
    carrying_cost_g1 = models.FloatField(blank=True, null=True)
    carrying_cost_g1_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall = models.FloatField(blank=True, null=True)
    cost_sh_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall_g = models.FloatField(blank=True, null=True)
    cost_sh_g_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall_g1 = models.FloatField(blank=True, null=True)
    cost_sh_g1_cnt = models.FloatField(blank=True, null=True)
    inventory_cost = models.FloatField(blank=True, null=True)
    inventory_cost_cnt = models.FloatField(blank=True, null=True)
    inventory_cost_g = models.FloatField(blank=True, null=True)
    inventory_cost_g_cnt = models.FloatField(blank=True, null=True)
    inventory_cost_g1 = models.FloatField(blank=True, null=True)
    inventory_cost_g1_cnt = models.FloatField(blank=True, null=True)
    mds_cost = models.FloatField(blank=True, null=True)
    mds_cost_cnt = models.FloatField(blank=True, null=True)
    mds_cost_g = models.FloatField(blank=True, null=True)
    mds_cost_g_cnt = models.FloatField(blank=True, null=True)
    mds_cost_g1 = models.FloatField(blank=True, null=True)
    mds_cost_g1_cnt = models.FloatField(blank=True, null=True)
    mds_price = models.FloatField(blank=True, null=True)
    mds_price_cnt = models.FloatField(blank=True, null=True)
    mds_price_g = models.FloatField(blank=True, null=True)
    mds_price_g_cnt = models.FloatField(blank=True, null=True)
    mds_price_g1 = models.FloatField(blank=True, null=True)
    mds_price_g1_cnt = models.FloatField(blank=True, null=True)
    mds_quantity = models.FloatField(blank=True, null=True)
    mds_quantity_cnt = models.FloatField(blank=True, null=True)
    production_cost = models.FloatField(blank=True, null=True)
    production_cost_cnt = models.FloatField(blank=True, null=True)
    pro_cost_g = models.FloatField(blank=True, null=True)
    pro_cost_g_cnt = models.FloatField(blank=True, null=True)
    pro_cost_g1 = models.FloatField(blank=True, null=True)
    pro_cost_g1_cnt = models.FloatField(blank=True, null=True)
    purchasing_cost = models.FloatField(blank=True, null=True)
    purchasing_cost_cnt = models.FloatField(blank=True, null=True)
    pur_cost_g = models.FloatField(blank=True, null=True)
    pur_cost_g_cnt = models.FloatField(blank=True, null=True)
    pur_cost_g1 = models.FloatField(blank=True, null=True)
    pur_cost_g1_cnt = models.FloatField(blank=True, null=True)
    late_lines = models.FloatField(blank=True, null=True)
    late_lines_cnt = models.FloatField(blank=True, null=True)
    rev_shortfall = models.FloatField(blank=True, null=True)
    rev_sh_cnt = models.FloatField(blank=True, null=True)
    rev_shortfall_g = models.FloatField(blank=True, null=True)
    rev_sh_g_cnt = models.FloatField(blank=True, null=True)
    rev_shortfall_g1 = models.FloatField(blank=True, null=True)
    rev_sh_g1_cnt = models.FloatField(blank=True, null=True)
    total_lines = models.FloatField(blank=True, null=True)
    total_lines_cnt = models.FloatField(blank=True, null=True)
    union1_flag = models.FloatField(blank=True, null=True)
    union1_flag_cnt = models.FloatField(blank=True, null=True)
    union2_flag = models.FloatField(blank=True, null=True)
    union2_flag_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_pm_0001_mv'


class IscDbiPm0002Mv(models.Model):
    snapshot_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_id = models.CharField(max_length=122, blank=True, null=True)
    department_id = models.CharField(max_length=42, blank=True, null=True)
    resource_group_id = models.CharField(max_length=32, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    res_gp_flag = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    required_hours = models.FloatField(blank=True, null=True)
    required_hours_cnt = models.FloatField(blank=True, null=True)
    available_hours = models.FloatField(blank=True, null=True)
    available_hours_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_pm_0002_mv'


class IscDbiPm0003Mv(models.Model):
    snapshot_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    parent_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    mds_cost = models.FloatField(blank=True, null=True)
    mds_cost_cnt = models.FloatField(blank=True, null=True)
    mds_cost_g = models.FloatField(blank=True, null=True)
    mds_cost_g_cnt = models.FloatField(blank=True, null=True)
    mds_cost_g1 = models.FloatField(blank=True, null=True)
    mds_cost_g1_cnt = models.FloatField(blank=True, null=True)
    mds_price = models.FloatField(blank=True, null=True)
    mds_price_cnt = models.FloatField(blank=True, null=True)
    mds_price_g = models.FloatField(blank=True, null=True)
    mds_price_g_cnt = models.FloatField(blank=True, null=True)
    mds_price_g1 = models.FloatField(blank=True, null=True)
    mds_price_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_pm_0003_mv'


class IscDbiPm0004Mv(models.Model):
    snapshot_id = models.FloatField(blank=True, null=True)
    dmd_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    r_resource_id = models.CharField(max_length=122, blank=True, null=True)
    r_org_id = models.FloatField(blank=True, null=True)
    r_department_id = models.CharField(max_length=42, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    rev_shortfall = models.FloatField(blank=True, null=True)
    rev_shortfall_cnt = models.FloatField(blank=True, null=True)
    rev_shortfall_g = models.FloatField(blank=True, null=True)
    rev_shortfall_g_cnt = models.FloatField(blank=True, null=True)
    rev_shortfall_g1 = models.FloatField(blank=True, null=True)
    rev_shortfall_g1_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall = models.FloatField(blank=True, null=True)
    cost_shortfall_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall_g = models.FloatField(blank=True, null=True)
    cost_shortfall_g_cnt = models.FloatField(blank=True, null=True)
    cost_shortfall_g1 = models.FloatField(blank=True, null=True)
    cost_shortfall_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_pm_0004_mv'


class IscDbiScr000Mv(models.Model):
    data_marker = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    master_oragnization_id = models.CharField(max_length=25, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g = models.FloatField(blank=True, null=True)
    net_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt2_g = models.FloatField(blank=True, null=True)
    net_booked_amt2_g_cnt = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt2_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    prim_recognized_amt_g = models.FloatField(blank=True, null=True)
    prim_deferred_amt_g = models.FloatField(blank=True, null=True)
    sec_recognized_amt_g = models.FloatField(blank=True, null=True)
    sec_deferred_amt_g = models.FloatField(blank=True, null=True)
    booked_rev_prim_yr = models.FloatField(blank=True, null=True)
    booked_rev_prim_qr = models.FloatField(blank=True, null=True)
    booked_rev_prim_pe = models.FloatField(blank=True, null=True)
    booked_rev_prim_wk = models.FloatField(blank=True, null=True)
    booked_rev_sec_yr = models.FloatField(blank=True, null=True)
    booked_rev_sec_qr = models.FloatField(blank=True, null=True)
    booked_rev_sec_pe = models.FloatField(blank=True, null=True)
    booked_rev_sec_wk = models.FloatField(blank=True, null=True)
    booked_rev_prim_yrct = models.FloatField(blank=True, null=True)
    booked_rev_prim_qrct = models.FloatField(blank=True, null=True)
    booked_rev_prim_pect = models.FloatField(blank=True, null=True)
    booked_rev_prim_wkct = models.FloatField(blank=True, null=True)
    booked_rev_sec_yrct = models.FloatField(blank=True, null=True)
    booked_rev_sec_qrct = models.FloatField(blank=True, null=True)
    booked_rev_sec_pect = models.FloatField(blank=True, null=True)
    booked_rev_sec_wkct = models.FloatField(blank=True, null=True)
    amount_bct = models.FloatField(blank=True, null=True)
    prim_recognized_amt_gct = models.FloatField(blank=True, null=True)
    prim_deferred_amt_gct = models.FloatField(blank=True, null=True)
    sec_recognized_amt_gct = models.FloatField(blank=True, null=True)
    sec_deferred_amt_gct = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_scr_000_mv'


class IscDbiScr001Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g = models.FloatField(blank=True, null=True)
    net_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    backlog_amt_g = models.FloatField(blank=True, null=True)
    backlog_amt_g_cnt = models.FloatField(blank=True, null=True)
    backlog_amt_g1 = models.FloatField(blank=True, null=True)
    backlog_amt_g1_cnt = models.FloatField(blank=True, null=True)
    recognized_amt_g = models.FloatField(blank=True, null=True)
    recognized_amt_g_cnt = models.FloatField(blank=True, null=True)
    recognized_amt_g1 = models.FloatField(blank=True, null=True)
    recognized_amt_g1_cnt = models.FloatField(blank=True, null=True)
    deferred_amt_g = models.FloatField(blank=True, null=True)
    deferred_amt_g_cnt = models.FloatField(blank=True, null=True)
    deferred_amt_g1 = models.FloatField(blank=True, null=True)
    deferred_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_rev_yr_g = models.FloatField(blank=True, null=True)
    booked_rev_qr_g = models.FloatField(blank=True, null=True)
    booked_rev_pe_g = models.FloatField(blank=True, null=True)
    booked_rev_wk_g = models.FloatField(blank=True, null=True)
    booked_rev_yr_g1 = models.FloatField(blank=True, null=True)
    booked_rev_qr_g1 = models.FloatField(blank=True, null=True)
    booked_rev_pe_g1 = models.FloatField(blank=True, null=True)
    booked_rev_wk_g1 = models.FloatField(blank=True, null=True)
    booked_rev_yr_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_qr_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_pe_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_wk_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_yr_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_qr_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_pe_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_wk_g1_ct = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_scr_001_mv'


class IscDbiScr002Mv(models.Model):
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    cat_top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g = models.FloatField(blank=True, null=True)
    net_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    backlog_amt_g = models.FloatField(blank=True, null=True)
    backlog_amt_g_cnt = models.FloatField(blank=True, null=True)
    backlog_amt_g1 = models.FloatField(blank=True, null=True)
    backlog_amt_g1_cnt = models.FloatField(blank=True, null=True)
    recognized_amt_g = models.FloatField(blank=True, null=True)
    recognized_amt_g_cnt = models.FloatField(blank=True, null=True)
    recognized_amt_g1 = models.FloatField(blank=True, null=True)
    recognized_amt_g1_cnt = models.FloatField(blank=True, null=True)
    deferred_amt_g = models.FloatField(blank=True, null=True)
    deferred_amt_g_cnt = models.FloatField(blank=True, null=True)
    deferred_amt_g1 = models.FloatField(blank=True, null=True)
    deferred_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_rev_yr_g = models.FloatField(blank=True, null=True)
    booked_rev_qr_g = models.FloatField(blank=True, null=True)
    booked_rev_pe_g = models.FloatField(blank=True, null=True)
    booked_rev_wk_g = models.FloatField(blank=True, null=True)
    booked_rev_yr_g1 = models.FloatField(blank=True, null=True)
    booked_rev_qr_g1 = models.FloatField(blank=True, null=True)
    booked_rev_pe_g1 = models.FloatField(blank=True, null=True)
    booked_rev_wk_g1 = models.FloatField(blank=True, null=True)
    booked_rev_yr_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_qr_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_pe_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_wk_g_ct = models.FloatField(blank=True, null=True)
    booked_rev_yr_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_qr_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_pe_g1_ct = models.FloatField(blank=True, null=True)
    booked_rev_wk_g1_ct = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_scr_002_mv'


class IscDbiScr003Mv(models.Model):
    time_booked_date_id = models.DateField(blank=True, null=True)
    org_ou_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    line_number = models.CharField(max_length=240, blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dbi_scr_003_mv'


class IscDrBklg01Mv(models.Model):
    repair_organization_id = models.BigIntegerField()
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    close_count = models.FloatField(blank=True, null=True)
    past_due_open_count = models.FloatField(blank=True, null=True)
    late_complete_count = models.FloatField(blank=True, null=True)
    complete_with_promise_date_cnt = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    count_days_late_mv = models.FloatField(blank=True, null=True)
    days_late_age_b1 = models.FloatField(blank=True, null=True)
    days_late_age_b2 = models.FloatField(blank=True, null=True)
    days_late_age_b3 = models.FloatField(blank=True, null=True)
    days_late_age_b4 = models.FloatField(blank=True, null=True)
    days_late_age_b5 = models.FloatField(blank=True, null=True)
    days_late_age_b6 = models.FloatField(blank=True, null=True)
    days_late_age_b7 = models.FloatField(blank=True, null=True)
    days_late_age_b8 = models.FloatField(blank=True, null=True)
    days_late_age_b9 = models.FloatField(blank=True, null=True)
    days_late_age_b10 = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    grp_id_mv = models.FloatField(blank=True, null=True)
    count_mv = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_bklg_01_mv'


class IscDrBklg02Mv(models.Model):
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    close_count = models.FloatField(blank=True, null=True)
    past_due_open_count = models.FloatField(blank=True, null=True)
    late_complete_count = models.FloatField(blank=True, null=True)
    complete_with_promise_date_cnt = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_age_b1 = models.FloatField(blank=True, null=True)
    days_late_age_b2 = models.FloatField(blank=True, null=True)
    days_late_age_b3 = models.FloatField(blank=True, null=True)
    days_late_age_b4 = models.FloatField(blank=True, null=True)
    days_late_age_b5 = models.FloatField(blank=True, null=True)
    days_late_age_b6 = models.FloatField(blank=True, null=True)
    days_late_age_b7 = models.FloatField(blank=True, null=True)
    days_late_age_b8 = models.FloatField(blank=True, null=True)
    days_late_age_b9 = models.FloatField(blank=True, null=True)
    days_late_age_b10 = models.FloatField(blank=True, null=True)
    count_open_mv = models.FloatField(blank=True, null=True)
    count_close_mv = models.FloatField(blank=True, null=True)
    count_past_due_mv = models.FloatField(blank=True, null=True)
    count_late_complete_mv = models.FloatField(blank=True, null=True)
    complete_with_prom_date_cnt_mv = models.FloatField(blank=True, null=True)
    count_days_late_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b1_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b2_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b3_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b4_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b5_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b6_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b7_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b8_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b9_mv = models.FloatField(blank=True, null=True)
    count_days_late_age_b10_mv = models.FloatField(blank=True, null=True)
    count_mv = models.FloatField(blank=True, null=True)
    grp_id_mv = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_bklg_02_mv'


class IscDrCharges01Mv(models.Model):
    repair_organization_id = models.BigIntegerField()
    product_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    material_charges_g = models.FloatField(blank=True, null=True)
    material_charges_sg = models.FloatField(blank=True, null=True)
    labor_charges_g = models.FloatField(blank=True, null=True)
    labor_charges_sg = models.FloatField(blank=True, null=True)
    expense_charges_g = models.FloatField(blank=True, null=True)
    expense_charges_sg = models.FloatField(blank=True, null=True)
    mv_material_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_material_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_labor_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_labor_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_expense_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_expense_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_charges_01_mv'


class IscDrCharges02Mv(models.Model):
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    material_charges_g = models.FloatField(blank=True, null=True)
    material_charges_sg = models.FloatField(blank=True, null=True)
    labor_charges_g = models.FloatField(blank=True, null=True)
    labor_charges_sg = models.FloatField(blank=True, null=True)
    expense_charges_g = models.FloatField(blank=True, null=True)
    expense_charges_sg = models.FloatField(blank=True, null=True)
    mv_material_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_material_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_labor_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_labor_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_expense_charges_g_cnt = models.FloatField(blank=True, null=True)
    mv_expense_charges_sg_cnt = models.FloatField(blank=True, null=True)
    mv_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_charges_02_mv'


class IscDrCosts01Mv(models.Model):
    repair_organization_id = models.BigIntegerField()
    product_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    material_cost_g = models.FloatField(blank=True, null=True)
    material_cost_sg = models.FloatField(blank=True, null=True)
    labor_cost_g = models.FloatField(blank=True, null=True)
    labor_cost_sg = models.FloatField(blank=True, null=True)
    expense_cost_g = models.FloatField(blank=True, null=True)
    expense_cost_sg = models.FloatField(blank=True, null=True)
    mv_material_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_material_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_labor_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_labor_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_expense_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_expense_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_costs_01_mv'


class IscDrCosts02Mv(models.Model):
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    material_cost_g = models.FloatField(blank=True, null=True)
    material_cost_sg = models.FloatField(blank=True, null=True)
    labor_cost_g = models.FloatField(blank=True, null=True)
    labor_cost_sg = models.FloatField(blank=True, null=True)
    expense_cost_g = models.FloatField(blank=True, null=True)
    expense_cost_sg = models.FloatField(blank=True, null=True)
    mv_material_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_material_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_labor_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_labor_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_expense_cost_g_cnt = models.FloatField(blank=True, null=True)
    mv_expense_cost_sg_cnt = models.FloatField(blank=True, null=True)
    mv_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_costs_02_mv'


class IscDrCurr01Mv(models.Model):
    repair_line_id = models.BigIntegerField()
    inventory_item_id = models.BigIntegerField()
    repair_organization_id = models.BigIntegerField()
    master_organization_id = models.BigIntegerField()
    item_org_id = models.CharField(max_length=25)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    serial_number = models.CharField(max_length=30, blank=True, null=True)
    repair_number = models.CharField(max_length=30)
    quantity = models.BigIntegerField()
    status = models.CharField(max_length=1)
    flow_status_id = models.FloatField(blank=True, null=True)
    promise_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=3)
    incident_number = models.CharField(max_length=64, blank=True, null=True)
    incident_id = models.BigIntegerField(blank=True, null=True)
    past_due_days = models.FloatField(blank=True, null=True)
    past_due_flag = models.CharField(max_length=1, blank=True, null=True)
    days_until_promised = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_curr_01_mv'


class IscDrCurr02Mv(models.Model):
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField()
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    not_promised_count = models.FloatField(blank=True, null=True)
    days_until_promised_b1 = models.FloatField(blank=True, null=True)
    days_until_promised_b2 = models.FloatField(blank=True, null=True)
    days_until_promised_b3 = models.FloatField(blank=True, null=True)
    days_until_promised_b4 = models.FloatField(blank=True, null=True)
    days_until_promised_b5 = models.FloatField(blank=True, null=True)
    days_until_promised_b6 = models.FloatField(blank=True, null=True)
    days_until_promised_b7 = models.FloatField(blank=True, null=True)
    days_until_promised_b8 = models.FloatField(blank=True, null=True)
    days_until_promised_b9 = models.FloatField(blank=True, null=True)
    days_until_promised_b10 = models.FloatField(blank=True, null=True)
    past_due_age_b1 = models.FloatField(blank=True, null=True)
    past_due_age_b2 = models.FloatField(blank=True, null=True)
    past_due_age_b3 = models.FloatField(blank=True, null=True)
    past_due_age_b4 = models.FloatField(blank=True, null=True)
    past_due_age_b5 = models.FloatField(blank=True, null=True)
    past_due_age_b6 = models.FloatField(blank=True, null=True)
    past_due_age_b7 = models.FloatField(blank=True, null=True)
    past_due_age_b8 = models.FloatField(blank=True, null=True)
    past_due_age_b9 = models.FloatField(blank=True, null=True)
    past_due_age_b10 = models.FloatField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_curr_02_mv'


class IscDrMttr01Mv(models.Model):
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField()
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_to_repair = models.FloatField(blank=True, null=True)
    mv_time_to_repair_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    ro_count = models.FloatField(blank=True, null=True)
    time_to_repair_b1 = models.FloatField(blank=True, null=True)
    time_to_repair_b2 = models.FloatField(blank=True, null=True)
    time_to_repair_b3 = models.FloatField(blank=True, null=True)
    time_to_repair_b4 = models.FloatField(blank=True, null=True)
    time_to_repair_b5 = models.FloatField(blank=True, null=True)
    time_to_repair_b6 = models.FloatField(blank=True, null=True)
    time_to_repair_b7 = models.FloatField(blank=True, null=True)
    time_to_repair_b8 = models.FloatField(blank=True, null=True)
    time_to_repair_b9 = models.FloatField(blank=True, null=True)
    time_to_repair_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_mttr_01_mv'


class IscDrMttr02Mv(models.Model):
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    aggregation_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_to_repair = models.FloatField(blank=True, null=True)
    mv_time_to_repair_count = models.FloatField(blank=True, null=True)
    ro_count = models.FloatField(blank=True, null=True)
    mv_ro_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    time_to_repair_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b1_count = models.FloatField(blank=True, null=True)
    time_to_repair_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b2_count = models.FloatField(blank=True, null=True)
    time_to_repair_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b3_count = models.FloatField(blank=True, null=True)
    time_to_repair_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b4_count = models.FloatField(blank=True, null=True)
    time_to_repair_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b5_count = models.FloatField(blank=True, null=True)
    time_to_repair_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b6_count = models.FloatField(blank=True, null=True)
    time_to_repair_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b7_count = models.FloatField(blank=True, null=True)
    time_to_repair_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b8_count = models.FloatField(blank=True, null=True)
    time_to_repair_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b9_count = models.FloatField(blank=True, null=True)
    time_to_repair_b10 = models.FloatField(blank=True, null=True)
    mv_time_to_repair_b10_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_mttr_02_mv'


class IscDrServiceCodeMv(models.Model):
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField()
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    service_code_id = models.FloatField()
    aggregation_flag = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ro_count = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_dr_service_code_mv'


class IscFs001Mv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    group_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'isc_fs_001_mv'


class IscFs002Mv(models.Model):
    record_type = models.CharField(max_length=8, blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    parent_prg_id = models.FloatField(blank=True, null=True)
    immediate_parent_flag = models.CharField(max_length=1, blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_002_mv'


class IscFs003Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    first_opened = models.FloatField(blank=True, null=True)
    reopened = models.FloatField(blank=True, null=True)
    closed = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_first_opened = models.FloatField(blank=True, null=True)
    mv_reopened = models.FloatField(blank=True, null=True)
    mv_closed = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_003_mv'


class IscFs004Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    first_opened = models.FloatField(blank=True, null=True)
    reopened = models.FloatField(blank=True, null=True)
    closed = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_first_opened = models.FloatField(blank=True, null=True)
    mv_reopened = models.FloatField(blank=True, null=True)
    mv_closed = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_004_mv'


class IscFs005Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    in_planning_count = models.FloatField(blank=True, null=True)
    assigned_count = models.FloatField(blank=True, null=True)
    working_count = models.FloatField(blank=True, null=True)
    completed_count = models.FloatField(blank=True, null=True)
    other_count = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_backlog_count = models.FloatField(blank=True, null=True)
    mv_in_planning_count = models.FloatField(blank=True, null=True)
    mv_assigned_count = models.FloatField(blank=True, null=True)
    mv_working_count = models.FloatField(blank=True, null=True)
    mv_completed_count = models.FloatField(blank=True, null=True)
    mv_other_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_005_mv'


class IscFs006Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    in_planning_count = models.FloatField(blank=True, null=True)
    assigned_count = models.FloatField(blank=True, null=True)
    working_count = models.FloatField(blank=True, null=True)
    completed_count = models.FloatField(blank=True, null=True)
    other_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_backlog_count = models.FloatField(blank=True, null=True)
    mv_in_planning_count = models.FloatField(blank=True, null=True)
    mv_assigned_count = models.FloatField(blank=True, null=True)
    mv_working_count = models.FloatField(blank=True, null=True)
    mv_completed_count = models.FloatField(blank=True, null=True)
    mv_other_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_006_mv'


class IscFs007Mv(models.Model):
    report_date = models.DateField()
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    total_backlog_age = models.FloatField(blank=True, null=True)
    backlog_age_b1 = models.FloatField(blank=True, null=True)
    backlog_age_b2 = models.FloatField(blank=True, null=True)
    backlog_age_b3 = models.FloatField(blank=True, null=True)
    backlog_age_b4 = models.FloatField(blank=True, null=True)
    backlog_age_b5 = models.FloatField(blank=True, null=True)
    backlog_age_b6 = models.FloatField(blank=True, null=True)
    backlog_age_b7 = models.FloatField(blank=True, null=True)
    backlog_age_b8 = models.FloatField(blank=True, null=True)
    backlog_age_b9 = models.FloatField(blank=True, null=True)
    backlog_age_b10 = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_total_backlog_age = models.FloatField(blank=True, null=True)
    mv_backlog_age_b1 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b2 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b3 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b4 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b5 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b6 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b7 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b8 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b9 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_007_mv'


class IscFs008Mv(models.Model):
    report_date = models.DateField()
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    total_backlog_age = models.FloatField(blank=True, null=True)
    backlog_age_b1 = models.FloatField(blank=True, null=True)
    backlog_age_b2 = models.FloatField(blank=True, null=True)
    backlog_age_b3 = models.FloatField(blank=True, null=True)
    backlog_age_b4 = models.FloatField(blank=True, null=True)
    backlog_age_b5 = models.FloatField(blank=True, null=True)
    backlog_age_b6 = models.FloatField(blank=True, null=True)
    backlog_age_b7 = models.FloatField(blank=True, null=True)
    backlog_age_b8 = models.FloatField(blank=True, null=True)
    backlog_age_b9 = models.FloatField(blank=True, null=True)
    backlog_age_b10 = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_backlog_count = models.FloatField(blank=True, null=True)
    mv_total_backlog_age = models.FloatField(blank=True, null=True)
    mv_backlog_age_b1 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b2 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b3 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b4 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b5 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b6 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b7 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b8 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b9 = models.FloatField(blank=True, null=True)
    mv_backlog_age_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_008_mv'


class IscFs009Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    resolved_count = models.FloatField(blank=True, null=True)
    total_time_to_resolve = models.FloatField(blank=True, null=True)
    time_to_resolve_b1 = models.FloatField(blank=True, null=True)
    time_to_resolve_b2 = models.FloatField(blank=True, null=True)
    time_to_resolve_b3 = models.FloatField(blank=True, null=True)
    time_to_resolve_b4 = models.FloatField(blank=True, null=True)
    time_to_resolve_b5 = models.FloatField(blank=True, null=True)
    time_to_resolve_b6 = models.FloatField(blank=True, null=True)
    time_to_resolve_b7 = models.FloatField(blank=True, null=True)
    time_to_resolve_b8 = models.FloatField(blank=True, null=True)
    time_to_resolve_b9 = models.FloatField(blank=True, null=True)
    time_to_resolve_b10 = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_total_time_to_resolve = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_009_mv'


class IscFs010Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    resolved_count = models.FloatField(blank=True, null=True)
    total_time_to_resolve = models.FloatField(blank=True, null=True)
    time_to_resolve_b1 = models.FloatField(blank=True, null=True)
    time_to_resolve_b2 = models.FloatField(blank=True, null=True)
    time_to_resolve_b3 = models.FloatField(blank=True, null=True)
    time_to_resolve_b4 = models.FloatField(blank=True, null=True)
    time_to_resolve_b5 = models.FloatField(blank=True, null=True)
    time_to_resolve_b6 = models.FloatField(blank=True, null=True)
    time_to_resolve_b7 = models.FloatField(blank=True, null=True)
    time_to_resolve_b8 = models.FloatField(blank=True, null=True)
    time_to_resolve_b9 = models.FloatField(blank=True, null=True)
    time_to_resolve_b10 = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_resolved_count = models.FloatField(blank=True, null=True)
    mv_total_time_to_resolve = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b1 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b2 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b3 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b4 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b5 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b6 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b7 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b8 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b9 = models.FloatField(blank=True, null=True)
    mv_time_to_resolve_b10 = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_010_mv'


class IscFs011Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    ftf_count = models.FloatField(blank=True, null=True)
    non_ftf_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_ftf_count = models.FloatField(blank=True, null=True)
    mv_non_ftf_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_011_mv'


class IscFs012Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    ftf_count = models.FloatField(blank=True, null=True)
    non_ftf_count = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_ftf_count = models.FloatField(blank=True, null=True)
    mv_non_ftf_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_012_mv'


class IscFs013Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    actual_effort_hrs = models.FloatField(blank=True, null=True)
    actual_travel_duration_hrs = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_actual_effort_hrs = models.FloatField(blank=True, null=True)
    mv_actual_travel_duration_hrs = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_013_mv'


class IscFs014Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    planned_hrs = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)
    mv_planned_hrs = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_014_mv'


class IscFs015Mv(models.Model):
    record_type = models.CharField(max_length=8, blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    onhand_value_b = models.FloatField(blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_onhand_value_b = models.FloatField(blank=True, null=True)
    mv_onhand_value_g = models.FloatField(blank=True, null=True)
    mv_onhand_value_sg = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_015_mv'


class IscFs016Mv(models.Model):
    record_type = models.CharField(max_length=8, blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    uonhand_value_b = models.FloatField(blank=True, null=True)
    uonhand_value_g = models.FloatField(blank=True, null=True)
    uonhand_value_sg = models.FloatField(blank=True, null=True)
    donhand_value_b = models.FloatField(blank=True, null=True)
    donhand_value_g = models.FloatField(blank=True, null=True)
    donhand_value_sg = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_uonhand_value_b = models.FloatField(blank=True, null=True)
    mv_uonhand_value_g = models.FloatField(blank=True, null=True)
    mv_uonhand_value_sg = models.FloatField(blank=True, null=True)
    mv_donhand_value_b = models.FloatField(blank=True, null=True)
    mv_donhand_value_g = models.FloatField(blank=True, null=True)
    mv_donhand_value_sg = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_016_mv'


class IscFs017Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_duration_count = models.FloatField(blank=True, null=True)
    sched_travel_duration_min = models.FloatField(blank=True, null=True)
    actual_travel_duration_min = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b1 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b2 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b3 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b4 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b5 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b6 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b7 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b8 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b9 = models.FloatField(blank=True, null=True)
    actual_travel_duration_min_b10 = models.FloatField(blank=True, null=True)
    task_dist_count = models.FloatField(blank=True, null=True)
    sched_travel_distance_km = models.FloatField(blank=True, null=True)
    actual_travel_distance_km = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_task_duration_count = models.FloatField(blank=True, null=True)
    mv_task_dist_count = models.FloatField(blank=True, null=True)
    mv_count_sched_travel_dur_min = models.FloatField(blank=True, null=True)
    mv_count_actual_travel_dur_min = models.FloatField(blank=True, null=True)
    mv_count_sched_travel_dist_km = models.FloatField(blank=True, null=True)
    mv_count_actual_travel_dist_km = models.FloatField(blank=True, null=True)
    mv_count_time_b1 = models.FloatField(blank=True, null=True)
    mv_count_time_b2 = models.FloatField(blank=True, null=True)
    mv_count_time_b3 = models.FloatField(blank=True, null=True)
    mv_count_time_b4 = models.FloatField(blank=True, null=True)
    mv_count_time_b5 = models.FloatField(blank=True, null=True)
    mv_count_time_b6 = models.FloatField(blank=True, null=True)
    mv_count_time_b7 = models.FloatField(blank=True, null=True)
    mv_count_time_b8 = models.FloatField(blank=True, null=True)
    mv_count_time_b9 = models.FloatField(blank=True, null=True)
    mv_count_time_b10 = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_017_mv'


class IscFs018Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    task_dist_count = models.FloatField(blank=True, null=True)
    sched_travel_distance_km = models.FloatField(blank=True, null=True)
    actual_travel_distance_km = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b1 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b2 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b3 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b4 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b5 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b6 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b7 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b8 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b9 = models.FloatField(blank=True, null=True)
    actual_travel_dist_km_b10 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b1 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b2 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b3 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b4 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b5 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b6 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b7 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b8 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b9 = models.FloatField(blank=True, null=True)
    actual_travel_dist_mi_b10 = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_count_sched_travel_dist_km = models.FloatField(blank=True, null=True)
    mv_count_actual_travel_dist_km = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b1 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b2 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b3 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b4 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b5 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b6 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b7 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b8 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b9 = models.FloatField(blank=True, null=True)
    mv_count_dist_km_b10 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b1 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b2 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b3 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b4 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b5 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b6 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b7 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b8 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b9 = models.FloatField(blank=True, null=True)
    mv_count_dist_mi_b10 = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_018_mv'


class IscFs019Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    den_record_type = models.CharField(max_length=8, blank=True, null=True)
    task_duration_count = models.FloatField(blank=True, null=True)
    sched_travel_duration_min = models.FloatField(blank=True, null=True)
    actual_travel_duration_min = models.FloatField(blank=True, null=True)
    bucket_num = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_count_sched_duration_min = models.FloatField(blank=True, null=True)
    mv_count_actual_duration_min = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_019_mv'


class IscFs020Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    den_record_type = models.CharField(max_length=8, blank=True, null=True)
    task_distance_count = models.FloatField(blank=True, null=True)
    sched_travel_distance_km = models.FloatField(blank=True, null=True)
    actual_travel_distance_km = models.FloatField(blank=True, null=True)
    bucket_num = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_count_sched_distance_km = models.FloatField(blank=True, null=True)
    mv_count_actual_distance_km = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_fs_020_mv'


class IscMaint001Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    asset_criticality_code = models.CharField(max_length=30, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    dt_non_overlap_hrs = models.FloatField(blank=True, null=True)
    mv_grp_id = models.FloatField(blank=True, null=True)
    mv_year_id = models.FloatField(blank=True, null=True)
    mv_qtr_id = models.FloatField(blank=True, null=True)
    mv_month_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_non_overlap_count = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_001_mv'


class IscMaint002Mv(models.Model):
    organization_id = models.FloatField()
    user_defined_status_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    hours_required = models.FloatField(blank=True, null=True)
    hours_charged = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_002_mv'


class IscMaint003Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    request_type = models.CharField(max_length=30, blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    bucket_num = models.FloatField(blank=True, null=True)
    total_requests = models.FloatField(blank=True, null=True)
    total_response_days = models.FloatField(blank=True, null=True)
    total_completion_days = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_total_response_days = models.FloatField(blank=True, null=True)
    mv_total_completion_days = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_003_mv'


class IscMaint004Mv(models.Model):
    organization_id = models.FloatField()
    department_id = models.FloatField(blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    work_order_type = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    num_completion = models.FloatField(blank=True, null=True)
    num_past_due_cmpl = models.FloatField(blank=True, null=True)
    num_late_completion = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    num_past_due = models.FloatField(blank=True, null=True)
    num_created = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_year_id = models.FloatField(blank=True, null=True)
    mv_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_num_past_due_cmpl = models.FloatField(blank=True, null=True)
    mv_num_completion = models.FloatField(blank=True, null=True)
    mv_num_created = models.FloatField(blank=True, null=True)
    mv_num_late_completion = models.FloatField(blank=True, null=True)
    mv_days_late = models.FloatField(blank=True, null=True)
    mv_num_past_due = models.FloatField(blank=True, null=True)
    mv_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_004_mv'


class IscMaint005Mv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    maint_cost_category = models.FloatField(blank=True, null=True)
    e_actual_mat_cost_b = models.FloatField(blank=True, null=True)
    e_actual_lab_cost_b = models.FloatField(blank=True, null=True)
    e_actual_eqp_cost_b = models.FloatField(blank=True, null=True)
    ne_actual_mat_cost_b = models.FloatField(blank=True, null=True)
    ne_actual_lab_cost_b = models.FloatField(blank=True, null=True)
    ne_actual_eqp_cost_b = models.FloatField(blank=True, null=True)
    estimated_mat_cost_b = models.FloatField(blank=True, null=True)
    estimated_lab_cost_b = models.FloatField(blank=True, null=True)
    estimated_eqp_cost_b = models.FloatField(blank=True, null=True)
    e_actual_mat_cost_g = models.FloatField(blank=True, null=True)
    e_actual_lab_cost_g = models.FloatField(blank=True, null=True)
    e_actual_eqp_cost_g = models.FloatField(blank=True, null=True)
    ne_actual_mat_cost_g = models.FloatField(blank=True, null=True)
    ne_actual_lab_cost_g = models.FloatField(blank=True, null=True)
    ne_actual_eqp_cost_g = models.FloatField(blank=True, null=True)
    estimated_mat_cost_g = models.FloatField(blank=True, null=True)
    estimated_lab_cost_g = models.FloatField(blank=True, null=True)
    estimated_eqp_cost_g = models.FloatField(blank=True, null=True)
    e_actual_mat_cost_sg = models.FloatField(blank=True, null=True)
    e_actual_lab_cost_sg = models.FloatField(blank=True, null=True)
    e_actual_eqp_cost_sg = models.FloatField(blank=True, null=True)
    ne_actual_mat_cost_sg = models.FloatField(blank=True, null=True)
    ne_actual_lab_cost_sg = models.FloatField(blank=True, null=True)
    ne_actual_eqp_cost_sg = models.FloatField(blank=True, null=True)
    estimated_mat_cost_sg = models.FloatField(blank=True, null=True)
    estimated_lab_cost_sg = models.FloatField(blank=True, null=True)
    estimated_eqp_cost_sg = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_ent_qtr_id = models.FloatField(blank=True, null=True)
    mv_ent_year_id = models.FloatField(blank=True, null=True)
    mv_e_actual_mat_cost_b = models.FloatField(blank=True, null=True)
    mv_e_actual_lab_cost_b = models.FloatField(blank=True, null=True)
    mv_e_actual_eqp_cost_b = models.FloatField(blank=True, null=True)
    mv_ne_actual_mat_cost_b = models.FloatField(blank=True, null=True)
    mv_ne_actual_lab_cost_b = models.FloatField(blank=True, null=True)
    mv_ne_actual_eqp_cost_b = models.FloatField(blank=True, null=True)
    mv_estimated_mat_cost_b = models.FloatField(blank=True, null=True)
    mv_estimated_lab_cost_b = models.FloatField(blank=True, null=True)
    mv_estimated_eqp_cost_b = models.FloatField(blank=True, null=True)
    mv_e_actual_mat_cost_g = models.FloatField(blank=True, null=True)
    mv_e_actual_lab_cost_g = models.FloatField(blank=True, null=True)
    mv_e_actual_eqp_cost_g = models.FloatField(blank=True, null=True)
    mv_ne_actual_mat_cost_g = models.FloatField(blank=True, null=True)
    mv_ne_actual_lab_cost_g = models.FloatField(blank=True, null=True)
    mv_ne_actual_eqp_cost_g = models.FloatField(blank=True, null=True)
    mv_estimated_mat_cost_g = models.FloatField(blank=True, null=True)
    mv_estimated_lab_cost_g = models.FloatField(blank=True, null=True)
    mv_estimated_eqp_cost_g = models.FloatField(blank=True, null=True)
    mv_e_actual_mat_cost_sg = models.FloatField(blank=True, null=True)
    mv_e_actual_lab_cost_sg = models.FloatField(blank=True, null=True)
    mv_e_actual_eqp_cost_sg = models.FloatField(blank=True, null=True)
    mv_ne_actual_mat_cost_sg = models.FloatField(blank=True, null=True)
    mv_ne_actual_lab_cost_sg = models.FloatField(blank=True, null=True)
    mv_ne_actual_eqp_cost_sg = models.FloatField(blank=True, null=True)
    mv_estimated_mat_cost_sg = models.FloatField(blank=True, null=True)
    mv_estimated_lab_cost_sg = models.FloatField(blank=True, null=True)
    mv_estimated_eqp_cost_sg = models.FloatField(blank=True, null=True)
    mv_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_005_mv'


class IscMaint006Mv(models.Model):
    organization_id = models.FloatField()
    department_id = models.FloatField(blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    work_order_type = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    bucket_num = models.FloatField(blank=True, null=True)
    num_count = models.FloatField(blank=True, null=True)
    mv_grouping_id = models.FloatField(blank=True, null=True)
    mv_qtr_id = models.FloatField(blank=True, null=True)
    mv_period_id = models.FloatField(blank=True, null=True)
    mv_week_id = models.FloatField(blank=True, null=True)
    mv_day_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_006_mv'


class IscMaint007Mv(models.Model):
    organization_id = models.FloatField()
    department_id = models.FloatField(blank=True, null=True)
    asset_group_id = models.FloatField(blank=True, null=True)
    instance_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    work_order_type = models.CharField(max_length=30, blank=True, null=True)
    user_defined_status_id = models.FloatField(blank=True, null=True)
    day = models.DateField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    bucket_num = models.FloatField(blank=True, null=True)
    num_pastdue = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_maint_007_mv'


class IscSam000Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    commit_e_t_amt_g = models.FloatField(blank=True, null=True)
    commit_e_t_amt_g1 = models.FloatField(blank=True, null=True)
    commit_calc1_twk_amt_g = models.FloatField(blank=True, null=True)
    commit_calc1_twk_amt_g1 = models.FloatField(blank=True, null=True)
    commit_calc1_tpd_amt_g = models.FloatField(blank=True, null=True)
    commit_calc1_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    commit_calc1_tqr_amt_g = models.FloatField(blank=True, null=True)
    commit_calc1_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_calc1_tyr_amt_g = models.FloatField(blank=True, null=True)
    commit_calc1_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_twk_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_twk_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_tpd_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_tqr_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_tyr_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_e_t_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_e_t_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_twk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_twk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tpd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_calc2_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_twk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_twk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tpd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_e_t_amt_g = models.FloatField(blank=True, null=True)
    c_commit_e_t_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_calc1_twk_amt_g = models.FloatField(blank=True, null=True)
    c_commit_calc1_twk_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_calc1_tpd_amt_g = models.FloatField(blank=True, null=True)
    c_commit_calc1_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_calc1_tqr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_calc1_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_calc1_tyr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_calc1_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_twk_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_twk_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_tpd_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_tqr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_tyr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_e_t_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_e_t_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_twk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_twk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tpd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_calc2_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_twk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_twk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tpd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_000_mv'


class IscSam001Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    commit_amt_g = models.FloatField(blank=True, null=True)
    commit_amt_g1 = models.FloatField(blank=True, null=True)
    commit_ewk_amt_g = models.FloatField(blank=True, null=True)
    commit_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    commit_epd_amt_g = models.FloatField(blank=True, null=True)
    commit_epd_amt_g1 = models.FloatField(blank=True, null=True)
    commit_eqr_amt_g = models.FloatField(blank=True, null=True)
    commit_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_eyr_amt_g = models.FloatField(blank=True, null=True)
    commit_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    new_agr_cnt = models.FloatField(blank=True, null=True)
    c_commit_amt_g = models.FloatField(blank=True, null=True)
    c_commit_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_commit_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_epd_amt_g = models.FloatField(blank=True, null=True)
    c_commit_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_new_agr_cnt = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_001_mv'


class IscSam002Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    commit_amt_g = models.FloatField(blank=True, null=True)
    commit_amt_g1 = models.FloatField(blank=True, null=True)
    commit_e_t_ewk_amt_g = models.FloatField(blank=True, null=True)
    commit_e_t_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    commit_e_t_epd_amt_g = models.FloatField(blank=True, null=True)
    commit_e_t_epd_amt_g1 = models.FloatField(blank=True, null=True)
    commit_e_t_eqr_amt_g = models.FloatField(blank=True, null=True)
    commit_e_t_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_e_t_eyr_amt_g = models.FloatField(blank=True, null=True)
    commit_e_t_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_ewk_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_epd_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_epd_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_eqr_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    commit_t_e_eyr_amt_g = models.FloatField(blank=True, null=True)
    commit_t_e_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_ewk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_epd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_epd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_eqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_eyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_ef_t_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_ewk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_epd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_epd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_eqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_eyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_t_e_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_amt_g = models.FloatField(blank=True, null=True)
    c_commit_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_e_t_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_commit_e_t_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_e_t_epd_amt_g = models.FloatField(blank=True, null=True)
    c_commit_e_t_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_e_t_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_e_t_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_e_t_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_e_t_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_epd_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_t_e_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_commit_t_e_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_epd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_ef_t_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_epd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_t_e_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_002_mv'


class IscSam003Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    commit_amt_g = models.FloatField(blank=True, null=True)
    commit_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_amt_g = models.FloatField(blank=True, null=True)
    c_commit_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_003_mv'


class IscSam004Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    commit_amt_g = models.FloatField(blank=True, null=True)
    commit_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_f_ee_amt_g = models.FloatField(blank=True, null=True)
    fulfill_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_ee_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    c_commit_amt_g = models.FloatField(blank=True, null=True)
    c_commit_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_f_ee_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_ee_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_004_mv'


class IscSam005Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    agreement_type_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_ewk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_epd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_epd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_eqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_eyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_e_ft_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_twk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_twk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tpd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_t_f_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_ewk_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_epd_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_epd_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_eqr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_eyr_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_et_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_f_ee_amt_g = models.FloatField(blank=True, null=True)
    fulfill_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_out_f_ee_amt_g = models.FloatField(blank=True, null=True)
    fulfill_out_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    fulfill_line_cnt = models.FloatField(blank=True, null=True)
    fulfill_amt_g = models.FloatField(blank=True, null=True)
    fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_epd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_e_ft_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_twk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_twk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tpd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tpd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_t_f_tyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_ewk_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_ewk_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_epd_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_epd_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_eqr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_eqr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_eyr_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_et_eyr_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_f_ee_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_ee_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_out_f_ee_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_line_cnt = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_005_mv'


class IscSam006Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    fulfill_amt_g = models.FloatField(blank=True, null=True)
    fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_006_mv'


class IscSam007Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    fulfill_amt_g = models.FloatField(blank=True, null=True)
    fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g = models.FloatField(blank=True, null=True)
    c_fulfill_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_sam_007_mv'


class IscTrn000Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    shipment_direction = models.CharField(max_length=80, blank=True, null=True)
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    freight_cost_wt_f = models.FloatField(blank=True, null=True)
    cost_wt_f_cnt = models.FloatField(blank=True, null=True)
    freight_cost_wt_g = models.FloatField(blank=True, null=True)
    cost_wt_g_cnt = models.FloatField(blank=True, null=True)
    freight_cost_wt_g1 = models.FloatField(blank=True, null=True)
    cost_wt_g1_cnt = models.FloatField(blank=True, null=True)
    freight_cost_vol_f = models.FloatField(blank=True, null=True)
    cost_vol_f_cnt = models.FloatField(blank=True, null=True)
    freight_cost_vol_g = models.FloatField(blank=True, null=True)
    cost_vol_g_cnt = models.FloatField(blank=True, null=True)
    freight_cost_vol_g1 = models.FloatField(blank=True, null=True)
    cost_vol_g1_cnt = models.FloatField(blank=True, null=True)
    freight_weight_g = models.FloatField(blank=True, null=True)
    freight_weight_g_cnt = models.FloatField(blank=True, null=True)
    freight_volume_g = models.FloatField(blank=True, null=True)
    freight_volume_g_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_000_mv'


class IscTrn001Mv(models.Model):
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    trip_arrivals = models.FloatField(blank=True, null=True)
    trip_arrivals_cnt = models.FloatField(blank=True, null=True)
    early_stop_arrivals = models.FloatField(blank=True, null=True)
    early_stop_arrl_cnt = models.FloatField(blank=True, null=True)
    late_stop_arrivals = models.FloatField(blank=True, null=True)
    late_stop_arrl_cnt = models.FloatField(blank=True, null=True)
    on_time_stop_arrivals = models.FloatField(blank=True, null=True)
    on_time_stop_arrl_cnt = models.FloatField(blank=True, null=True)
    stop_arrivals = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_001_mv'


class IscTrn002Mv(models.Model):
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    planned_stop_arrivals = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_002_mv'


class IscTrn003Mv(models.Model):
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    bill_amt_g = models.FloatField(blank=True, null=True)
    bill_amt_g_cnt = models.FloatField(blank=True, null=True)
    bill_amt_g1 = models.FloatField(blank=True, null=True)
    bill_amt_g1_cnt = models.FloatField(blank=True, null=True)
    approved_amt_g = models.FloatField(blank=True, null=True)
    approved_amt_g_cnt = models.FloatField(blank=True, null=True)
    approved_amt_g1 = models.FloatField(blank=True, null=True)
    approved_amt_g1_cnt = models.FloatField(blank=True, null=True)
    fully_paid_amt_g = models.FloatField(blank=True, null=True)
    fully_paid_amt_g_cnt = models.FloatField(blank=True, null=True)
    fully_paid_amt_g1 = models.FloatField(blank=True, null=True)
    fully_paid_amt_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_003_mv'


class IscTrn004Mv(models.Model):
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    payment_amt_g = models.FloatField(blank=True, null=True)
    payment_amt_g_cnt = models.FloatField(blank=True, null=True)
    payment_amt_g1 = models.FloatField(blank=True, null=True)
    payment_amt_g1_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_004_mv'


class IscTrn005Mv(models.Model):
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prod_category_id = models.FloatField(blank=True, null=True)
    imm_child_id = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    freight_cost_amt_f = models.FloatField(blank=True, null=True)
    c_cost_amt_f = models.FloatField(blank=True, null=True)
    freight_cost_amt_g = models.FloatField(blank=True, null=True)
    c_cost_amt_g = models.FloatField(blank=True, null=True)
    freight_cost_amt_g1 = models.FloatField(blank=True, null=True)
    c_cost_amt_g1 = models.FloatField(blank=True, null=True)
    freight_charge_amt_f = models.FloatField(blank=True, null=True)
    c_charge_amt_f = models.FloatField(blank=True, null=True)
    freight_charge_amt_g = models.FloatField(blank=True, null=True)
    c_charge_amt_g = models.FloatField(blank=True, null=True)
    freight_charge_amt_g1 = models.FloatField(blank=True, null=True)
    c_charge_amt_g1 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_005_mv'


class IscTrn006Mv(models.Model):
    carrier_id = models.FloatField(blank=True, null=True)
    mode_of_transport = models.CharField(max_length=80, blank=True, null=True)
    service_level = models.CharField(max_length=80, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    freight_cost_g = models.FloatField(blank=True, null=True)
    freight_cost_g_cnt = models.FloatField(blank=True, null=True)
    freight_cost_g1 = models.FloatField(blank=True, null=True)
    freight_cost_g1_cnt = models.FloatField(blank=True, null=True)
    freight_distance_g = models.FloatField(blank=True, null=True)
    freight_distance_g_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_trn_006_mv'


class IscWms000Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    pick_release_qty = models.FloatField(blank=True, null=True)
    pick_release_qty_cnt = models.FloatField(blank=True, null=True)
    pick_release_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_wms_000_mv'


class IscWms001Mv(models.Model):
    inv_org_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=71, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    ship_confirm_qty = models.FloatField(blank=True, null=True)
    ship_confirm_qty_cnt = models.FloatField(blank=True, null=True)
    release_to_ship = models.FloatField(blank=True, null=True)
    release_to_ship_cnt = models.FloatField(blank=True, null=True)
    ship_confirm_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'isc_wms_001_mv'


class JaInLocalizationErrors(models.Model):
    application_id = models.CharField(max_length=30)
    error_message = models.CharField(max_length=240)
    additional_error_mesg = models.CharField(max_length=240, blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ja_in_localization_errors'


class JlRemit1Gt(models.Model):
    document_id = models.FloatField(blank=True, null=True)
    occurrence_id = models.FloatField(blank=True, null=True)
    set_of_books_id = models.FloatField(blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    account_date = models.DateField(blank=True, null=True)
    period_name = models.CharField(max_length=100, blank=True, null=True)
    category_name = models.CharField(max_length=100, blank=True, null=True)
    jlbr_transfer_to_gl_flag = models.CharField(max_length=1, blank=True, null=True)
    gl_transfer_date = models.DateField(blank=True, null=True)
    bordero_id = models.FloatField(blank=True, null=True)
    bordero_type = models.CharField(max_length=30, blank=True, null=True)
    bank_occurrence_code = models.CharField(max_length=30, blank=True, null=True)
    bank_occurrence_type = models.CharField(max_length=100, blank=True, null=True)
    bank_party_id = models.FloatField(blank=True, null=True)
    std_occurrence_code = models.CharField(max_length=30, blank=True, null=True)
    customer_trx_id = models.FloatField(blank=True, null=True)
    bank_charges_credit_ccid = models.FloatField(blank=True, null=True)
    bank_charges_debit_ccid = models.FloatField(blank=True, null=True)
    endorsement_credit_ccid = models.FloatField(blank=True, null=True)
    endorsement_debit_ccid = models.FloatField(blank=True, null=True)
    factor_interest_credit_ccid = models.FloatField(blank=True, null=True)
    factor_interest_debit_ccid = models.FloatField(blank=True, null=True)
    occurrence_status = models.CharField(max_length=30, blank=True, null=True)
    bill_to_customer_id = models.FloatField(blank=True, null=True)
    bill_to_site_use_id = models.FloatField(blank=True, null=True)
    reverse_charges_cred_ccid = models.FloatField(blank=True, null=True)
    reverse_charges_deb_ccid = models.FloatField(blank=True, null=True)
    trx_number = models.CharField(max_length=100, blank=True, null=True)
    event_id = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jl_remit1_gt'


class JlRevTmp(models.Model):
    distribution_id = models.FloatField(blank=True, null=True)
    document_id = models.FloatField(blank=True, null=True)
    occurrence_id = models.FloatField(blank=True, null=True)
    distribution_type = models.CharField(max_length=80, blank=True, null=True)
    accounting_reversal_option = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jl_rev_tmp'


class JtfFmIntRequestLines(models.Model):
    request_id = models.FloatField(blank=True, null=True)
    request_line_id = models.FloatField(blank=True, null=True)
    partition_id = models.FloatField(blank=True, null=True)
    server_instance_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_name = models.CharField(max_length=200, blank=True, null=True)
    email_address = models.CharField(max_length=200, blank=True, null=True)
    outcome_code = models.CharField(max_length=30, blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField(blank=True, null=True)
    email_status = models.CharField(max_length=30, blank=True, null=True)
    contact_preference_flag = models.CharField(max_length=1, blank=True, null=True)
    domain_email = models.CharField(max_length=100, blank=True, null=True)
    enabled_flag = models.CharField(max_length=1, blank=True, null=True)
    batch_no = models.FloatField(blank=True, null=True)
    col1 = models.CharField(max_length=2000, blank=True, null=True)
    col2 = models.CharField(max_length=2000, blank=True, null=True)
    col3 = models.CharField(max_length=2000, blank=True, null=True)
    col4 = models.CharField(max_length=2000, blank=True, null=True)
    col5 = models.CharField(max_length=2000, blank=True, null=True)
    col6 = models.CharField(max_length=2000, blank=True, null=True)
    col7 = models.CharField(max_length=2000, blank=True, null=True)
    col8 = models.CharField(max_length=2000, blank=True, null=True)
    col9 = models.CharField(max_length=2000, blank=True, null=True)
    col10 = models.CharField(max_length=2000, blank=True, null=True)
    col11 = models.CharField(max_length=2000, blank=True, null=True)
    col12 = models.CharField(max_length=2000, blank=True, null=True)
    col13 = models.CharField(max_length=2000, blank=True, null=True)
    col14 = models.CharField(max_length=2000, blank=True, null=True)
    col15 = models.CharField(max_length=2000, blank=True, null=True)
    col16 = models.CharField(max_length=2000, blank=True, null=True)
    col17 = models.CharField(max_length=2000, blank=True, null=True)
    col18 = models.CharField(max_length=2000, blank=True, null=True)
    col19 = models.CharField(max_length=2000, blank=True, null=True)
    col20 = models.CharField(max_length=2000, blank=True, null=True)
    col21 = models.CharField(max_length=2000, blank=True, null=True)
    col22 = models.CharField(max_length=2000, blank=True, null=True)
    col23 = models.CharField(max_length=2000, blank=True, null=True)
    col24 = models.CharField(max_length=2000, blank=True, null=True)
    col25 = models.CharField(max_length=2000, blank=True, null=True)
    col26 = models.CharField(max_length=2000, blank=True, null=True)
    col27 = models.CharField(max_length=2000, blank=True, null=True)
    col28 = models.CharField(max_length=2000, blank=True, null=True)
    col29 = models.CharField(max_length=2000, blank=True, null=True)
    col30 = models.CharField(max_length=2000, blank=True, null=True)
    col31 = models.CharField(max_length=2000, blank=True, null=True)
    col32 = models.CharField(max_length=2000, blank=True, null=True)
    col33 = models.CharField(max_length=2000, blank=True, null=True)
    col34 = models.CharField(max_length=2000, blank=True, null=True)
    col35 = models.CharField(max_length=2000, blank=True, null=True)
    col36 = models.CharField(max_length=2000, blank=True, null=True)
    col37 = models.CharField(max_length=2000, blank=True, null=True)
    col38 = models.CharField(max_length=2000, blank=True, null=True)
    col39 = models.CharField(max_length=2000, blank=True, null=True)
    col40 = models.CharField(max_length=2000, blank=True, null=True)
    col41 = models.CharField(max_length=2000, blank=True, null=True)
    col42 = models.CharField(max_length=2000, blank=True, null=True)
    col43 = models.CharField(max_length=2000, blank=True, null=True)
    col44 = models.CharField(max_length=2000, blank=True, null=True)
    col45 = models.CharField(max_length=2000, blank=True, null=True)
    col46 = models.CharField(max_length=2000, blank=True, null=True)
    col47 = models.CharField(max_length=2000, blank=True, null=True)
    col48 = models.CharField(max_length=2000, blank=True, null=True)
    col49 = models.CharField(max_length=2000, blank=True, null=True)
    col50 = models.CharField(max_length=2000, blank=True, null=True)
    col51 = models.CharField(max_length=2000, blank=True, null=True)
    col52 = models.CharField(max_length=2000, blank=True, null=True)
    col53 = models.CharField(max_length=2000, blank=True, null=True)
    col54 = models.CharField(max_length=2000, blank=True, null=True)
    col55 = models.CharField(max_length=2000, blank=True, null=True)
    col56 = models.CharField(max_length=2000, blank=True, null=True)
    col57 = models.CharField(max_length=2000, blank=True, null=True)
    col58 = models.CharField(max_length=2000, blank=True, null=True)
    col59 = models.CharField(max_length=2000, blank=True, null=True)
    col60 = models.CharField(max_length=2000, blank=True, null=True)
    col61 = models.CharField(max_length=2000, blank=True, null=True)
    col62 = models.CharField(max_length=2000, blank=True, null=True)
    col63 = models.CharField(max_length=2000, blank=True, null=True)
    col64 = models.CharField(max_length=2000, blank=True, null=True)
    col65 = models.CharField(max_length=2000, blank=True, null=True)
    col66 = models.CharField(max_length=2000, blank=True, null=True)
    col67 = models.CharField(max_length=2000, blank=True, null=True)
    col68 = models.CharField(max_length=2000, blank=True, null=True)
    col69 = models.CharField(max_length=2000, blank=True, null=True)
    col70 = models.CharField(max_length=2000, blank=True, null=True)
    col71 = models.CharField(max_length=2000, blank=True, null=True)
    col72 = models.CharField(max_length=2000, blank=True, null=True)
    col73 = models.CharField(max_length=2000, blank=True, null=True)
    col74 = models.CharField(max_length=2000, blank=True, null=True)
    col75 = models.CharField(max_length=2000, blank=True, null=True)
    col76 = models.CharField(max_length=2000, blank=True, null=True)
    col77 = models.CharField(max_length=2000, blank=True, null=True)
    col78 = models.CharField(max_length=2000, blank=True, null=True)
    col79 = models.CharField(max_length=2000, blank=True, null=True)
    col80 = models.CharField(max_length=2000, blank=True, null=True)
    col81 = models.CharField(max_length=2000, blank=True, null=True)
    col82 = models.CharField(max_length=2000, blank=True, null=True)
    col83 = models.CharField(max_length=2000, blank=True, null=True)
    col84 = models.CharField(max_length=2000, blank=True, null=True)
    col85 = models.CharField(max_length=2000, blank=True, null=True)
    col86 = models.CharField(max_length=2000, blank=True, null=True)
    col87 = models.CharField(max_length=2000, blank=True, null=True)
    col88 = models.CharField(max_length=2000, blank=True, null=True)
    col89 = models.CharField(max_length=2000, blank=True, null=True)
    col90 = models.CharField(max_length=2000, blank=True, null=True)
    col91 = models.CharField(max_length=2000, blank=True, null=True)
    col92 = models.CharField(max_length=2000, blank=True, null=True)
    col93 = models.CharField(max_length=2000, blank=True, null=True)
    col94 = models.CharField(max_length=2000, blank=True, null=True)
    col95 = models.CharField(max_length=2000, blank=True, null=True)
    col96 = models.CharField(max_length=2000, blank=True, null=True)
    col97 = models.CharField(max_length=2000, blank=True, null=True)
    col98 = models.CharField(max_length=2000, blank=True, null=True)
    col99 = models.CharField(max_length=2000, blank=True, null=True)
    col100 = models.CharField(max_length=2000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_fm_int_request_lines'


class JtfFmRapidBQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_b_qtbl'


class JtfFmRapidBpQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_bp_qtbl'


class JtfFmRapidErQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_er_qtbl'


class JtfFmRapidMQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_m_qtbl'


class JtfFmRapidMpQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_mp_qtbl'


class JtfFmRapidQ1Qtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_q1_qtbl'


class JtfFmRapidQ2Qtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.BinaryField(blank=True, null=True)
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_fm_rapid_q2_qtbl'


class JtfIhBulkQtbl(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.TextField(blank=True, null=True)  # This field type is a guess.
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_ih_bulk_qtbl'


class JtfPfLoggingTable(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    user_data = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'jtf_pf_logging_table'


class JtfTerrCnrQualBtwnMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_qual_id = models.FloatField()
    terr_value_id = models.FloatField()
    low_value_char = models.CharField(max_length=360, blank=True, null=True)
    high_value_char = models.CharField(max_length=360, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_cnr_qual_btwn_mv'


class JtfTerrCnrQualLikeMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_qual_id = models.FloatField()
    terr_value_id = models.FloatField()
    low_value_char = models.CharField(max_length=360, blank=True, null=True)
    first_char = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_cnr_qual_like_mv'


class JtfTerrCnrgBtwnMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    terr_qual_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_value_id = models.FloatField()
    cnr_group_id = models.FloatField()
    cnr_group_value_id = models.FloatField()
    comparison_operator = models.CharField(max_length=30)
    low_value_char = models.CharField(max_length=360, blank=True, null=True)
    high_value_char = models.CharField(max_length=360, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_cnrg_btwn_mv'


class JtfTerrCnrgEqualMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    terr_qual_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_value_id = models.FloatField()
    cnr_group_id = models.FloatField()
    cnr_group_value_id = models.FloatField()
    comparison_operator = models.CharField(max_length=30)
    low_value_char = models.CharField(max_length=360, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_cnrg_equal_mv'


class JtfTerrCnrgLikeMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cnrg_val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    terr_qual_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_value_id = models.FloatField()
    cnr_group_id = models.FloatField()
    cnr_group_value_id = models.FloatField()
    comparison_operator = models.CharField(max_length=30)
    low_value_char = models.CharField(max_length=360, blank=True, null=True)
    first_char = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_cnrg_like_mv'


class JtfTerrQualRulesMv(models.Model):
    rule_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qual_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    val_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    terr_id = models.FloatField()
    absolute_rank = models.FloatField(blank=True, null=True)
    related_terr_id = models.FloatField()
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    source_id = models.FloatField()
    terr_qual_id = models.FloatField()
    qual_usg_id = models.FloatField()
    terr_value_id = models.FloatField()
    comparison_operator = models.CharField(max_length=30)
    low_value_char_id = models.FloatField(blank=True, null=True)
    low_value_char = models.CharField(max_length=360, blank=True, null=True)
    high_value_char = models.CharField(max_length=360, blank=True, null=True)
    low_value_number = models.FloatField(blank=True, null=True)
    high_value_number = models.FloatField(blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_code_id = models.FloatField(blank=True, null=True)
    secondary_interest_code_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    value1_id = models.FloatField(blank=True, null=True)
    value2_id = models.FloatField(blank=True, null=True)
    value3_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_qual_rules_mv'


class JtfTerrResultsGtL1(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_l1'


class JtfTerrResultsGtL2(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_l2'


class JtfTerrResultsGtL3(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_l3'


class JtfTerrResultsGtL4(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_l4'


class JtfTerrResultsGtL5(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_l5'


class JtfTerrResultsGtMt(models.Model):
    result_id = models.FloatField(blank=True, null=True)
    trans_id = models.FloatField(blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    qual_type_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    terr_id = models.FloatField(blank=True, null=True)
    absolute_rank = models.FloatField(blank=True, null=True)
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_mt'


class JtfTerrResultsGtWt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)
    win_terr_id = models.FloatField(blank=True, null=True)
    ul_terr_id = models.FloatField(blank=True, null=True)
    ll_terr_id = models.FloatField(blank=True, null=True)
    ll_num_winners = models.FloatField(blank=True, null=True)
    worker_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_terr_results_gt_wt'


class JtfTtyMyDirectsGt(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    resource_name = models.CharField(max_length=360, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    group_name = models.CharField(max_length=60, blank=True, null=True)
    role_code = models.CharField(max_length=30, blank=True, null=True)
    role_name = models.CharField(max_length=60, blank=True, null=True)
    dir_user_id = models.FloatField(blank=True, null=True)
    current_user_id = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField(blank=True, null=True)
    current_user_role_code = models.CharField(max_length=30, blank=True, null=True)
    current_user_rsc_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_tty_my_directs_gt'


class JtfTtyMyResourcesGt(models.Model):
    resource_id = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    role_code = models.CharField(max_length=30, blank=True, null=True)
    current_user_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jtf_tty_my_resources_gt'


class JtyChangedTerrsGt(models.Model):
    terr_id = models.FloatField()
    rank_calc_flag = models.CharField(max_length=1, blank=True, null=True)
    process_attr_values_flag = models.CharField(max_length=1, blank=True, null=True)
    matching_sql_flag = models.CharField(max_length=1, blank=True, null=True)
    hier_processing_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_changed_terrs_gt'


class JtyDenormTerrAttrValuesGt(models.Model):
    terr_id = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField()
    source_id = models.FloatField()
    trans_type_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    absolute_rank = models.FloatField(blank=True, null=True)
    top_level_terr_id = models.FloatField(blank=True, null=True)
    num_winners = models.FloatField(blank=True, null=True)
    attr_relation_product = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_login_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    object_version_number = models.FloatField(blank=True, null=True)
    dummy1 = models.CharField(max_length=360, blank=True, null=True)
    dummy2 = models.CharField(max_length=360, blank=True, null=True)
    dummy3 = models.CharField(max_length=360, blank=True, null=True)
    dummy4 = models.CharField(max_length=360, blank=True, null=True)
    dummy5 = models.CharField(max_length=360, blank=True, null=True)
    dummy6 = models.CharField(max_length=360, blank=True, null=True)
    dummy7 = models.CharField(max_length=360, blank=True, null=True)
    dummy8 = models.CharField(max_length=360, blank=True, null=True)
    dummy9 = models.CharField(max_length=360, blank=True, null=True)
    dummy10 = models.CharField(max_length=360, blank=True, null=True)
    dummy11 = models.CharField(max_length=360, blank=True, null=True)
    dummy12 = models.CharField(max_length=360, blank=True, null=True)
    dummy13 = models.CharField(max_length=360, blank=True, null=True)
    dummy14 = models.CharField(max_length=360, blank=True, null=True)
    q1065_cp = models.CharField(max_length=30, blank=True, null=True)
    q1065_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1068_cp = models.CharField(max_length=30, blank=True, null=True)
    q1068_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1066_cp = models.CharField(max_length=30, blank=True, null=True)
    q1066_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1073_cp = models.CharField(max_length=30, blank=True, null=True)
    q1073_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1069_cp = models.CharField(max_length=30, blank=True, null=True)
    q1069_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1076_cp = models.CharField(max_length=30, blank=True, null=True)
    q1076_interest_type_id = models.FloatField(blank=True, null=True)
    q1076_primary_interest_code_id = models.FloatField(blank=True, null=True)
    q1076_sec_interest_code_id = models.FloatField(blank=True, null=True)
    q1075_cp = models.CharField(max_length=30, blank=True, null=True)
    q1075_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1079_cp = models.CharField(max_length=30, blank=True, null=True)
    q1079_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1324_cp = models.CharField(max_length=30, blank=True, null=True)
    q1324_value1_id = models.FloatField(blank=True, null=True)
    q1324_value2_id = models.FloatField(blank=True, null=True)
    q1322_cp = models.CharField(max_length=30, blank=True, null=True)
    q1322_low_value_char_id = models.FloatField(blank=True, null=True)
    q1217_cp = models.CharField(max_length=30, blank=True, null=True)
    q1217_low_value_char_id = models.FloatField(blank=True, null=True)
    q1216_cp = models.CharField(max_length=30, blank=True, null=True)
    q1216_value1_id = models.FloatField(blank=True, null=True)
    q1216_value2_id = models.FloatField(blank=True, null=True)
    q1215_cp = models.CharField(max_length=30, blank=True, null=True)
    q1215_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1213_cp = models.CharField(max_length=30, blank=True, null=True)
    q1213_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1210_cp = models.CharField(max_length=30, blank=True, null=True)
    q1210_value1_id = models.FloatField(blank=True, null=True)
    q1210_value2_id = models.FloatField(blank=True, null=True)
    q1210_value3_id = models.FloatField(blank=True, null=True)
    q1323_cp = models.CharField(max_length=30, blank=True, null=True)
    q1323_low_value_char_id = models.FloatField(blank=True, null=True)
    q1321_cp = models.CharField(max_length=30, blank=True, null=True)
    q1321_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1218_cp = models.CharField(max_length=30, blank=True, null=True)
    q1218_value1_id = models.FloatField(blank=True, null=True)
    q1218_value2_id = models.FloatField(blank=True, null=True)
    q1214_cp = models.CharField(max_length=30, blank=True, null=True)
    q1214_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1211_cp = models.CharField(max_length=30, blank=True, null=True)
    q1211_value1_id = models.FloatField(blank=True, null=True)
    q1211_value2_id = models.FloatField(blank=True, null=True)
    q1077_cp = models.CharField(max_length=30, blank=True, null=True)
    q1077_low_value_char_id = models.FloatField(blank=True, null=True)
    q1074_cp = models.CharField(max_length=30, blank=True, null=True)
    q1074_low_value_char_id = models.FloatField(blank=True, null=True)
    q1071_cp = models.CharField(max_length=30, blank=True, null=True)
    q1071_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1067_cp = models.CharField(max_length=30, blank=True, null=True)
    q1067_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1067_high_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1064_cp = models.CharField(max_length=30, blank=True, null=True)
    q1064_low_value_char_id = models.FloatField(blank=True, null=True)
    q1063_cp = models.CharField(max_length=30, blank=True, null=True)
    q1063_low_value_char = models.CharField(max_length=360, blank=True, null=True)
    q1063_low_value_char_id = models.FloatField(blank=True, null=True)
    q1081_cp = models.CharField(max_length=30, blank=True, null=True)
    q1081_low_value_char = models.CharField(max_length=360, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_denorm_terr_attr_values_gt'


class JtyStrToTableGt(models.Model):
    text_col = models.CharField(max_length=1000, blank=True, null=True)
    num_col = models.FloatField(blank=True, null=True)
    date_col = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_str_to_table_gt'


class JtyTerr1001AccountTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=360, blank=True, null=True)
    postal_code = models.CharField(max_length=360, blank=True, null=True)
    state = models.CharField(max_length=360, blank=True, null=True)
    province = models.CharField(max_length=360, blank=True, null=True)
    county = models.CharField(max_length=360, blank=True, null=True)
    country = models.CharField(max_length=360, blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_id = models.FloatField(blank=True, null=True)
    secondary_interest_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_site_id = models.FloatField(blank=True, null=True)
    area_code = models.CharField(max_length=360, blank=True, null=True)
    comp_name_range = models.CharField(max_length=360, blank=True, null=True)
    partner_id = models.FloatField(blank=True, null=True)
    num_of_employees = models.FloatField(blank=True, null=True)
    category_code = models.CharField(max_length=360, blank=True, null=True)
    party_relationship_id = models.FloatField(blank=True, null=True)
    sic_code = models.CharField(max_length=360, blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    car_currency_code = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1001_account_trans_gt'


class JtyTerr1001LeadTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    sales_lead_id = models.FloatField(blank=True, null=True)
    sales_lead_line_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=360, blank=True, null=True)
    postal_code = models.CharField(max_length=360, blank=True, null=True)
    state = models.CharField(max_length=360, blank=True, null=True)
    province = models.CharField(max_length=360, blank=True, null=True)
    county = models.CharField(max_length=360, blank=True, null=True)
    country = models.CharField(max_length=360, blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_id = models.FloatField(blank=True, null=True)
    secondary_interest_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_site_id = models.FloatField(blank=True, null=True)
    area_code = models.CharField(max_length=360, blank=True, null=True)
    comp_name_range = models.CharField(max_length=360, blank=True, null=True)
    partner_id = models.FloatField(blank=True, null=True)
    num_of_employees = models.FloatField(blank=True, null=True)
    category_code = models.CharField(max_length=360, blank=True, null=True)
    party_relationship_id = models.FloatField(blank=True, null=True)
    sic_code = models.CharField(max_length=360, blank=True, null=True)
    budget_amount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=360, blank=True, null=True)
    pricing_date = models.DateField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    lead_interest_type_id = models.FloatField(blank=True, null=True)
    lead_primary_interest_id = models.FloatField(blank=True, null=True)
    lead_secondary_interest_id = models.FloatField(blank=True, null=True)
    purchase_amount = models.FloatField(blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    car_currency_code = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1001_lead_trans_gt'


class JtyTerr1001OpporTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    lead_id = models.FloatField(blank=True, null=True)
    lead_line_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=360, blank=True, null=True)
    postal_code = models.CharField(max_length=360, blank=True, null=True)
    state = models.CharField(max_length=360, blank=True, null=True)
    province = models.CharField(max_length=360, blank=True, null=True)
    county = models.CharField(max_length=360, blank=True, null=True)
    country = models.CharField(max_length=360, blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_id = models.FloatField(blank=True, null=True)
    secondary_interest_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_site_id = models.FloatField(blank=True, null=True)
    area_code = models.CharField(max_length=360, blank=True, null=True)
    comp_name_range = models.CharField(max_length=360, blank=True, null=True)
    partner_id = models.FloatField(blank=True, null=True)
    num_of_employees = models.FloatField(blank=True, null=True)
    category_code = models.CharField(max_length=360, blank=True, null=True)
    party_relationship_id = models.FloatField(blank=True, null=True)
    sic_code = models.CharField(max_length=360, blank=True, null=True)
    target_segment_current = models.CharField(max_length=360, blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=360, blank=True, null=True)
    pricing_date = models.DateField(blank=True, null=True)
    channel_code = models.CharField(max_length=360, blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    opp_interest_type_id = models.FloatField(blank=True, null=True)
    opp_primary_interest_id = models.FloatField(blank=True, null=True)
    opp_secondary_interest_id = models.FloatField(blank=True, null=True)
    opclss_interest_type_id = models.FloatField(blank=True, null=True)
    opclss_primary_interest_id = models.FloatField(blank=True, null=True)
    opclss_secondary_interest_id = models.FloatField(blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    car_currency_code = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1001_oppor_trans_gt'


class JtyTerr1001PropTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=360, blank=True, null=True)
    postal_code = models.CharField(max_length=360, blank=True, null=True)
    state = models.CharField(max_length=360, blank=True, null=True)
    province = models.CharField(max_length=360, blank=True, null=True)
    county = models.CharField(max_length=360, blank=True, null=True)
    country = models.CharField(max_length=360, blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_id = models.FloatField(blank=True, null=True)
    secondary_interest_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_site_id = models.FloatField(blank=True, null=True)
    area_code = models.CharField(max_length=360, blank=True, null=True)
    comp_name_range = models.CharField(max_length=360, blank=True, null=True)
    partner_id = models.FloatField(blank=True, null=True)
    num_of_employees = models.FloatField(blank=True, null=True)
    category_code = models.CharField(max_length=360, blank=True, null=True)
    party_relationship_id = models.FloatField(blank=True, null=True)
    sic_code = models.CharField(max_length=360, blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    car_currency_code = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1001_prop_trans_gt'


class JtyTerr1001QuoteTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    city = models.CharField(max_length=360, blank=True, null=True)
    postal_code = models.CharField(max_length=360, blank=True, null=True)
    state = models.CharField(max_length=360, blank=True, null=True)
    province = models.CharField(max_length=360, blank=True, null=True)
    county = models.CharField(max_length=360, blank=True, null=True)
    country = models.CharField(max_length=360, blank=True, null=True)
    interest_type_id = models.FloatField(blank=True, null=True)
    primary_interest_id = models.FloatField(blank=True, null=True)
    secondary_interest_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    party_site_id = models.FloatField(blank=True, null=True)
    area_code = models.CharField(max_length=360, blank=True, null=True)
    comp_name_range = models.CharField(max_length=360, blank=True, null=True)
    partner_id = models.FloatField(blank=True, null=True)
    num_of_employees = models.FloatField(blank=True, null=True)
    category_code = models.CharField(max_length=360, blank=True, null=True)
    party_relationship_id = models.FloatField(blank=True, null=True)
    sic_code = models.CharField(max_length=360, blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    car_currency_code = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1001_quote_trans_gt'


class JtyTerr1003ClaimTransGt(models.Model):
    use_type = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char12 = models.CharField(max_length=360, blank=True, null=True)
    squal_char13 = models.CharField(max_length=360, blank=True, null=True)
    squal_char14 = models.CharField(max_length=360, blank=True, null=True)
    squal_char15 = models.CharField(max_length=360, blank=True, null=True)
    squal_char16 = models.CharField(max_length=360, blank=True, null=True)
    squal_char17 = models.CharField(max_length=360, blank=True, null=True)
    squal_char18 = models.CharField(max_length=360, blank=True, null=True)
    squal_char19 = models.CharField(max_length=360, blank=True, null=True)
    squal_char20 = models.CharField(max_length=360, blank=True, null=True)
    squal_char21 = models.CharField(max_length=360, blank=True, null=True)
    squal_char22 = models.CharField(max_length=360, blank=True, null=True)
    squal_char23 = models.CharField(max_length=360, blank=True, null=True)
    squal_char24 = models.CharField(max_length=360, blank=True, null=True)
    squal_char25 = models.CharField(max_length=360, blank=True, null=True)
    squal_char26 = models.CharField(max_length=360, blank=True, null=True)
    squal_char27 = models.CharField(max_length=360, blank=True, null=True)
    squal_char28 = models.CharField(max_length=360, blank=True, null=True)
    squal_char29 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    squal_char31 = models.CharField(max_length=360, blank=True, null=True)
    squal_char32 = models.CharField(max_length=360, blank=True, null=True)
    squal_char33 = models.CharField(max_length=360, blank=True, null=True)
    squal_char34 = models.CharField(max_length=360, blank=True, null=True)
    squal_char35 = models.CharField(max_length=360, blank=True, null=True)
    squal_char36 = models.CharField(max_length=360, blank=True, null=True)
    squal_char37 = models.CharField(max_length=360, blank=True, null=True)
    squal_char38 = models.CharField(max_length=360, blank=True, null=True)
    squal_char39 = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_char42 = models.CharField(max_length=360, blank=True, null=True)
    squal_char43 = models.CharField(max_length=360, blank=True, null=True)
    squal_char44 = models.CharField(max_length=360, blank=True, null=True)
    squal_char45 = models.CharField(max_length=360, blank=True, null=True)
    squal_char46 = models.CharField(max_length=360, blank=True, null=True)
    squal_char47 = models.CharField(max_length=360, blank=True, null=True)
    squal_char48 = models.CharField(max_length=360, blank=True, null=True)
    squal_char49 = models.CharField(max_length=360, blank=True, null=True)
    squal_char50 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_num07 = models.FloatField(blank=True, null=True)
    squal_num08 = models.FloatField(blank=True, null=True)
    squal_num09 = models.FloatField(blank=True, null=True)
    squal_num10 = models.FloatField(blank=True, null=True)
    squal_num11 = models.FloatField(blank=True, null=True)
    squal_num12 = models.FloatField(blank=True, null=True)
    squal_num13 = models.FloatField(blank=True, null=True)
    squal_num14 = models.FloatField(blank=True, null=True)
    squal_num15 = models.FloatField(blank=True, null=True)
    squal_num16 = models.FloatField(blank=True, null=True)
    squal_num17 = models.FloatField(blank=True, null=True)
    squal_num18 = models.FloatField(blank=True, null=True)
    squal_num19 = models.FloatField(blank=True, null=True)
    squal_num20 = models.FloatField(blank=True, null=True)
    squal_num21 = models.FloatField(blank=True, null=True)
    squal_num22 = models.FloatField(blank=True, null=True)
    squal_num23 = models.FloatField(blank=True, null=True)
    squal_num24 = models.FloatField(blank=True, null=True)
    squal_num25 = models.FloatField(blank=True, null=True)
    squal_num26 = models.FloatField(blank=True, null=True)
    squal_num27 = models.FloatField(blank=True, null=True)
    squal_num28 = models.FloatField(blank=True, null=True)
    squal_num29 = models.FloatField(blank=True, null=True)
    squal_num30 = models.FloatField(blank=True, null=True)
    squal_num31 = models.FloatField(blank=True, null=True)
    squal_num32 = models.FloatField(blank=True, null=True)
    squal_num33 = models.FloatField(blank=True, null=True)
    squal_num34 = models.FloatField(blank=True, null=True)
    squal_num35 = models.FloatField(blank=True, null=True)
    squal_num36 = models.FloatField(blank=True, null=True)
    squal_num37 = models.FloatField(blank=True, null=True)
    squal_num38 = models.FloatField(blank=True, null=True)
    squal_num39 = models.FloatField(blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num41 = models.FloatField(blank=True, null=True)
    squal_num42 = models.FloatField(blank=True, null=True)
    squal_num43 = models.FloatField(blank=True, null=True)
    squal_num44 = models.FloatField(blank=True, null=True)
    squal_num45 = models.FloatField(blank=True, null=True)
    squal_num46 = models.FloatField(blank=True, null=True)
    squal_num47 = models.FloatField(blank=True, null=True)
    squal_num48 = models.FloatField(blank=True, null=True)
    squal_num49 = models.FloatField(blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc02 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc03 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc04 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc05 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1003_claim_trans_gt'


class JtyTerr1003OfferTransGt(models.Model):
    use_type = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char12 = models.CharField(max_length=360, blank=True, null=True)
    squal_char13 = models.CharField(max_length=360, blank=True, null=True)
    squal_char14 = models.CharField(max_length=360, blank=True, null=True)
    squal_char15 = models.CharField(max_length=360, blank=True, null=True)
    squal_char16 = models.CharField(max_length=360, blank=True, null=True)
    squal_char17 = models.CharField(max_length=360, blank=True, null=True)
    squal_char18 = models.CharField(max_length=360, blank=True, null=True)
    squal_char19 = models.CharField(max_length=360, blank=True, null=True)
    squal_char20 = models.CharField(max_length=360, blank=True, null=True)
    squal_char21 = models.CharField(max_length=360, blank=True, null=True)
    squal_char22 = models.CharField(max_length=360, blank=True, null=True)
    squal_char23 = models.CharField(max_length=360, blank=True, null=True)
    squal_char24 = models.CharField(max_length=360, blank=True, null=True)
    squal_char25 = models.CharField(max_length=360, blank=True, null=True)
    squal_char26 = models.CharField(max_length=360, blank=True, null=True)
    squal_char27 = models.CharField(max_length=360, blank=True, null=True)
    squal_char28 = models.CharField(max_length=360, blank=True, null=True)
    squal_char29 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    squal_char31 = models.CharField(max_length=360, blank=True, null=True)
    squal_char32 = models.CharField(max_length=360, blank=True, null=True)
    squal_char33 = models.CharField(max_length=360, blank=True, null=True)
    squal_char34 = models.CharField(max_length=360, blank=True, null=True)
    squal_char35 = models.CharField(max_length=360, blank=True, null=True)
    squal_char36 = models.CharField(max_length=360, blank=True, null=True)
    squal_char37 = models.CharField(max_length=360, blank=True, null=True)
    squal_char38 = models.CharField(max_length=360, blank=True, null=True)
    squal_char39 = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_char42 = models.CharField(max_length=360, blank=True, null=True)
    squal_char43 = models.CharField(max_length=360, blank=True, null=True)
    squal_char44 = models.CharField(max_length=360, blank=True, null=True)
    squal_char45 = models.CharField(max_length=360, blank=True, null=True)
    squal_char46 = models.CharField(max_length=360, blank=True, null=True)
    squal_char47 = models.CharField(max_length=360, blank=True, null=True)
    squal_char48 = models.CharField(max_length=360, blank=True, null=True)
    squal_char49 = models.CharField(max_length=360, blank=True, null=True)
    squal_char50 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_num07 = models.FloatField(blank=True, null=True)
    squal_num08 = models.FloatField(blank=True, null=True)
    squal_num09 = models.FloatField(blank=True, null=True)
    squal_num10 = models.FloatField(blank=True, null=True)
    squal_num11 = models.FloatField(blank=True, null=True)
    squal_num12 = models.FloatField(blank=True, null=True)
    squal_num13 = models.FloatField(blank=True, null=True)
    squal_num14 = models.FloatField(blank=True, null=True)
    squal_num15 = models.FloatField(blank=True, null=True)
    squal_num16 = models.FloatField(blank=True, null=True)
    squal_num17 = models.FloatField(blank=True, null=True)
    squal_num18 = models.FloatField(blank=True, null=True)
    squal_num19 = models.FloatField(blank=True, null=True)
    squal_num20 = models.FloatField(blank=True, null=True)
    squal_num21 = models.FloatField(blank=True, null=True)
    squal_num22 = models.FloatField(blank=True, null=True)
    squal_num23 = models.FloatField(blank=True, null=True)
    squal_num24 = models.FloatField(blank=True, null=True)
    squal_num25 = models.FloatField(blank=True, null=True)
    squal_num26 = models.FloatField(blank=True, null=True)
    squal_num27 = models.FloatField(blank=True, null=True)
    squal_num28 = models.FloatField(blank=True, null=True)
    squal_num29 = models.FloatField(blank=True, null=True)
    squal_num30 = models.FloatField(blank=True, null=True)
    squal_num31 = models.FloatField(blank=True, null=True)
    squal_num32 = models.FloatField(blank=True, null=True)
    squal_num33 = models.FloatField(blank=True, null=True)
    squal_num34 = models.FloatField(blank=True, null=True)
    squal_num35 = models.FloatField(blank=True, null=True)
    squal_num36 = models.FloatField(blank=True, null=True)
    squal_num37 = models.FloatField(blank=True, null=True)
    squal_num38 = models.FloatField(blank=True, null=True)
    squal_num39 = models.FloatField(blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num41 = models.FloatField(blank=True, null=True)
    squal_num42 = models.FloatField(blank=True, null=True)
    squal_num43 = models.FloatField(blank=True, null=True)
    squal_num44 = models.FloatField(blank=True, null=True)
    squal_num45 = models.FloatField(blank=True, null=True)
    squal_num46 = models.FloatField(blank=True, null=True)
    squal_num47 = models.FloatField(blank=True, null=True)
    squal_num48 = models.FloatField(blank=True, null=True)
    squal_num49 = models.FloatField(blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc02 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc03 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc04 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc05 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1003_offer_trans_gt'


class JtyTerr1500CntrctTransGt(models.Model):
    use_type = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char12 = models.CharField(max_length=360, blank=True, null=True)
    squal_char13 = models.CharField(max_length=360, blank=True, null=True)
    squal_char14 = models.CharField(max_length=360, blank=True, null=True)
    squal_char15 = models.CharField(max_length=360, blank=True, null=True)
    squal_char16 = models.CharField(max_length=360, blank=True, null=True)
    squal_char17 = models.CharField(max_length=360, blank=True, null=True)
    squal_char18 = models.CharField(max_length=360, blank=True, null=True)
    squal_char19 = models.CharField(max_length=360, blank=True, null=True)
    squal_char20 = models.CharField(max_length=360, blank=True, null=True)
    squal_char21 = models.CharField(max_length=360, blank=True, null=True)
    squal_char22 = models.CharField(max_length=360, blank=True, null=True)
    squal_char23 = models.CharField(max_length=360, blank=True, null=True)
    squal_char24 = models.CharField(max_length=360, blank=True, null=True)
    squal_char25 = models.CharField(max_length=360, blank=True, null=True)
    squal_char26 = models.CharField(max_length=360, blank=True, null=True)
    squal_char27 = models.CharField(max_length=360, blank=True, null=True)
    squal_char28 = models.CharField(max_length=360, blank=True, null=True)
    squal_char29 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    squal_char31 = models.CharField(max_length=360, blank=True, null=True)
    squal_char32 = models.CharField(max_length=360, blank=True, null=True)
    squal_char33 = models.CharField(max_length=360, blank=True, null=True)
    squal_char34 = models.CharField(max_length=360, blank=True, null=True)
    squal_char35 = models.CharField(max_length=360, blank=True, null=True)
    squal_char36 = models.CharField(max_length=360, blank=True, null=True)
    squal_char37 = models.CharField(max_length=360, blank=True, null=True)
    squal_char38 = models.CharField(max_length=360, blank=True, null=True)
    squal_char39 = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_char42 = models.CharField(max_length=360, blank=True, null=True)
    squal_char43 = models.CharField(max_length=360, blank=True, null=True)
    squal_char44 = models.CharField(max_length=360, blank=True, null=True)
    squal_char45 = models.CharField(max_length=360, blank=True, null=True)
    squal_char46 = models.CharField(max_length=360, blank=True, null=True)
    squal_char47 = models.CharField(max_length=360, blank=True, null=True)
    squal_char48 = models.CharField(max_length=360, blank=True, null=True)
    squal_char49 = models.CharField(max_length=360, blank=True, null=True)
    squal_char50 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_num07 = models.FloatField(blank=True, null=True)
    squal_num08 = models.FloatField(blank=True, null=True)
    squal_num09 = models.FloatField(blank=True, null=True)
    squal_num10 = models.FloatField(blank=True, null=True)
    squal_num11 = models.FloatField(blank=True, null=True)
    squal_num12 = models.FloatField(blank=True, null=True)
    squal_num13 = models.FloatField(blank=True, null=True)
    squal_num14 = models.FloatField(blank=True, null=True)
    squal_num15 = models.FloatField(blank=True, null=True)
    squal_num16 = models.FloatField(blank=True, null=True)
    squal_num17 = models.FloatField(blank=True, null=True)
    squal_num18 = models.FloatField(blank=True, null=True)
    squal_num19 = models.FloatField(blank=True, null=True)
    squal_num20 = models.FloatField(blank=True, null=True)
    squal_num21 = models.FloatField(blank=True, null=True)
    squal_num22 = models.FloatField(blank=True, null=True)
    squal_num23 = models.FloatField(blank=True, null=True)
    squal_num24 = models.FloatField(blank=True, null=True)
    squal_num25 = models.FloatField(blank=True, null=True)
    squal_num26 = models.FloatField(blank=True, null=True)
    squal_num27 = models.FloatField(blank=True, null=True)
    squal_num28 = models.FloatField(blank=True, null=True)
    squal_num29 = models.FloatField(blank=True, null=True)
    squal_num30 = models.FloatField(blank=True, null=True)
    squal_num31 = models.FloatField(blank=True, null=True)
    squal_num32 = models.FloatField(blank=True, null=True)
    squal_num33 = models.FloatField(blank=True, null=True)
    squal_num34 = models.FloatField(blank=True, null=True)
    squal_num35 = models.FloatField(blank=True, null=True)
    squal_num36 = models.FloatField(blank=True, null=True)
    squal_num37 = models.FloatField(blank=True, null=True)
    squal_num38 = models.FloatField(blank=True, null=True)
    squal_num39 = models.FloatField(blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num41 = models.FloatField(blank=True, null=True)
    squal_num42 = models.FloatField(blank=True, null=True)
    squal_num43 = models.FloatField(blank=True, null=True)
    squal_num44 = models.FloatField(blank=True, null=True)
    squal_num45 = models.FloatField(blank=True, null=True)
    squal_num46 = models.FloatField(blank=True, null=True)
    squal_num47 = models.FloatField(blank=True, null=True)
    squal_num48 = models.FloatField(blank=True, null=True)
    squal_num49 = models.FloatField(blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc02 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc03 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc04 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc05 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1500_cntrct_trans_gt'


class JtyTerr1600CustTransGt(models.Model):
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    attribute1 = models.CharField(max_length=360, blank=True, null=True)
    attribute2 = models.CharField(max_length=360, blank=True, null=True)
    attribute3 = models.CharField(max_length=360, blank=True, null=True)
    attribute4 = models.CharField(max_length=360, blank=True, null=True)
    attribute5 = models.CharField(max_length=360, blank=True, null=True)
    attribute6 = models.CharField(max_length=360, blank=True, null=True)
    attribute7 = models.CharField(max_length=360, blank=True, null=True)
    attribute8 = models.CharField(max_length=360, blank=True, null=True)
    attribute9 = models.CharField(max_length=360, blank=True, null=True)
    attribute10 = models.CharField(max_length=360, blank=True, null=True)
    attribute11 = models.CharField(max_length=360, blank=True, null=True)
    attribute12 = models.CharField(max_length=360, blank=True, null=True)
    attribute13 = models.CharField(max_length=360, blank=True, null=True)
    attribute14 = models.CharField(max_length=360, blank=True, null=True)
    attribute15 = models.CharField(max_length=360, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1600_cust_trans_gt'


class JtyTerr1600DelqcyTransGt(models.Model):
    use_type = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char12 = models.CharField(max_length=360, blank=True, null=True)
    squal_char13 = models.CharField(max_length=360, blank=True, null=True)
    squal_char14 = models.CharField(max_length=360, blank=True, null=True)
    squal_char15 = models.CharField(max_length=360, blank=True, null=True)
    squal_char16 = models.CharField(max_length=360, blank=True, null=True)
    squal_char17 = models.CharField(max_length=360, blank=True, null=True)
    squal_char18 = models.CharField(max_length=360, blank=True, null=True)
    squal_char19 = models.CharField(max_length=360, blank=True, null=True)
    squal_char20 = models.CharField(max_length=360, blank=True, null=True)
    squal_char21 = models.CharField(max_length=360, blank=True, null=True)
    squal_char22 = models.CharField(max_length=360, blank=True, null=True)
    squal_char23 = models.CharField(max_length=360, blank=True, null=True)
    squal_char24 = models.CharField(max_length=360, blank=True, null=True)
    squal_char25 = models.CharField(max_length=360, blank=True, null=True)
    squal_char26 = models.CharField(max_length=360, blank=True, null=True)
    squal_char27 = models.CharField(max_length=360, blank=True, null=True)
    squal_char28 = models.CharField(max_length=360, blank=True, null=True)
    squal_char29 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    squal_char31 = models.CharField(max_length=360, blank=True, null=True)
    squal_char32 = models.CharField(max_length=360, blank=True, null=True)
    squal_char33 = models.CharField(max_length=360, blank=True, null=True)
    squal_char34 = models.CharField(max_length=360, blank=True, null=True)
    squal_char35 = models.CharField(max_length=360, blank=True, null=True)
    squal_char36 = models.CharField(max_length=360, blank=True, null=True)
    squal_char37 = models.CharField(max_length=360, blank=True, null=True)
    squal_char38 = models.CharField(max_length=360, blank=True, null=True)
    squal_char39 = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_char42 = models.CharField(max_length=360, blank=True, null=True)
    squal_char43 = models.CharField(max_length=360, blank=True, null=True)
    squal_char44 = models.CharField(max_length=360, blank=True, null=True)
    squal_char45 = models.CharField(max_length=360, blank=True, null=True)
    squal_char46 = models.CharField(max_length=360, blank=True, null=True)
    squal_char47 = models.CharField(max_length=360, blank=True, null=True)
    squal_char48 = models.CharField(max_length=360, blank=True, null=True)
    squal_char49 = models.CharField(max_length=360, blank=True, null=True)
    squal_char50 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_num07 = models.FloatField(blank=True, null=True)
    squal_num08 = models.FloatField(blank=True, null=True)
    squal_num09 = models.FloatField(blank=True, null=True)
    squal_num10 = models.FloatField(blank=True, null=True)
    squal_num11 = models.FloatField(blank=True, null=True)
    squal_num12 = models.FloatField(blank=True, null=True)
    squal_num13 = models.FloatField(blank=True, null=True)
    squal_num14 = models.FloatField(blank=True, null=True)
    squal_num15 = models.FloatField(blank=True, null=True)
    squal_num16 = models.FloatField(blank=True, null=True)
    squal_num17 = models.FloatField(blank=True, null=True)
    squal_num18 = models.FloatField(blank=True, null=True)
    squal_num19 = models.FloatField(blank=True, null=True)
    squal_num20 = models.FloatField(blank=True, null=True)
    squal_num21 = models.FloatField(blank=True, null=True)
    squal_num22 = models.FloatField(blank=True, null=True)
    squal_num23 = models.FloatField(blank=True, null=True)
    squal_num24 = models.FloatField(blank=True, null=True)
    squal_num25 = models.FloatField(blank=True, null=True)
    squal_num26 = models.FloatField(blank=True, null=True)
    squal_num27 = models.FloatField(blank=True, null=True)
    squal_num28 = models.FloatField(blank=True, null=True)
    squal_num29 = models.FloatField(blank=True, null=True)
    squal_num30 = models.FloatField(blank=True, null=True)
    squal_num31 = models.FloatField(blank=True, null=True)
    squal_num32 = models.FloatField(blank=True, null=True)
    squal_num33 = models.FloatField(blank=True, null=True)
    squal_num34 = models.FloatField(blank=True, null=True)
    squal_num35 = models.FloatField(blank=True, null=True)
    squal_num36 = models.FloatField(blank=True, null=True)
    squal_num37 = models.FloatField(blank=True, null=True)
    squal_num38 = models.FloatField(blank=True, null=True)
    squal_num39 = models.FloatField(blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num41 = models.FloatField(blank=True, null=True)
    squal_num42 = models.FloatField(blank=True, null=True)
    squal_num43 = models.FloatField(blank=True, null=True)
    squal_num44 = models.FloatField(blank=True, null=True)
    squal_num45 = models.FloatField(blank=True, null=True)
    squal_num46 = models.FloatField(blank=True, null=True)
    squal_num47 = models.FloatField(blank=True, null=True)
    squal_num48 = models.FloatField(blank=True, null=True)
    squal_num49 = models.FloatField(blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc02 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc03 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc04 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc05 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1600_delqcy_trans_gt'


class JtyTerr1700PartnerTransGt(models.Model):
    use_type = models.CharField(max_length=30, blank=True, null=True)
    source_id = models.FloatField(blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    trans_object_id = models.FloatField(blank=True, null=True)
    trans_detail_object_id = models.FloatField(blank=True, null=True)
    squal_char01 = models.CharField(max_length=360, blank=True, null=True)
    squal_char02 = models.CharField(max_length=360, blank=True, null=True)
    squal_char03 = models.CharField(max_length=360, blank=True, null=True)
    squal_char04 = models.CharField(max_length=360, blank=True, null=True)
    squal_char05 = models.CharField(max_length=360, blank=True, null=True)
    squal_char06 = models.CharField(max_length=360, blank=True, null=True)
    squal_char07 = models.CharField(max_length=360, blank=True, null=True)
    squal_char08 = models.CharField(max_length=360, blank=True, null=True)
    squal_char09 = models.CharField(max_length=360, blank=True, null=True)
    squal_char10 = models.CharField(max_length=360, blank=True, null=True)
    squal_char11 = models.CharField(max_length=360, blank=True, null=True)
    squal_char12 = models.CharField(max_length=360, blank=True, null=True)
    squal_char13 = models.CharField(max_length=360, blank=True, null=True)
    squal_char14 = models.CharField(max_length=360, blank=True, null=True)
    squal_char15 = models.CharField(max_length=360, blank=True, null=True)
    squal_char16 = models.CharField(max_length=360, blank=True, null=True)
    squal_char17 = models.CharField(max_length=360, blank=True, null=True)
    squal_char18 = models.CharField(max_length=360, blank=True, null=True)
    squal_char19 = models.CharField(max_length=360, blank=True, null=True)
    squal_char20 = models.CharField(max_length=360, blank=True, null=True)
    squal_char21 = models.CharField(max_length=360, blank=True, null=True)
    squal_char22 = models.CharField(max_length=360, blank=True, null=True)
    squal_char23 = models.CharField(max_length=360, blank=True, null=True)
    squal_char24 = models.CharField(max_length=360, blank=True, null=True)
    squal_char25 = models.CharField(max_length=360, blank=True, null=True)
    squal_char26 = models.CharField(max_length=360, blank=True, null=True)
    squal_char27 = models.CharField(max_length=360, blank=True, null=True)
    squal_char28 = models.CharField(max_length=360, blank=True, null=True)
    squal_char29 = models.CharField(max_length=360, blank=True, null=True)
    squal_char30 = models.CharField(max_length=360, blank=True, null=True)
    squal_char31 = models.CharField(max_length=360, blank=True, null=True)
    squal_char32 = models.CharField(max_length=360, blank=True, null=True)
    squal_char33 = models.CharField(max_length=360, blank=True, null=True)
    squal_char34 = models.CharField(max_length=360, blank=True, null=True)
    squal_char35 = models.CharField(max_length=360, blank=True, null=True)
    squal_char36 = models.CharField(max_length=360, blank=True, null=True)
    squal_char37 = models.CharField(max_length=360, blank=True, null=True)
    squal_char38 = models.CharField(max_length=360, blank=True, null=True)
    squal_char39 = models.CharField(max_length=360, blank=True, null=True)
    squal_char40 = models.CharField(max_length=360, blank=True, null=True)
    squal_char41 = models.CharField(max_length=360, blank=True, null=True)
    squal_char42 = models.CharField(max_length=360, blank=True, null=True)
    squal_char43 = models.CharField(max_length=360, blank=True, null=True)
    squal_char44 = models.CharField(max_length=360, blank=True, null=True)
    squal_char45 = models.CharField(max_length=360, blank=True, null=True)
    squal_char46 = models.CharField(max_length=360, blank=True, null=True)
    squal_char47 = models.CharField(max_length=360, blank=True, null=True)
    squal_char48 = models.CharField(max_length=360, blank=True, null=True)
    squal_char49 = models.CharField(max_length=360, blank=True, null=True)
    squal_char50 = models.CharField(max_length=360, blank=True, null=True)
    squal_num01 = models.FloatField(blank=True, null=True)
    squal_num02 = models.FloatField(blank=True, null=True)
    squal_num03 = models.FloatField(blank=True, null=True)
    squal_num04 = models.FloatField(blank=True, null=True)
    squal_num05 = models.FloatField(blank=True, null=True)
    squal_num06 = models.FloatField(blank=True, null=True)
    squal_num07 = models.FloatField(blank=True, null=True)
    squal_num08 = models.FloatField(blank=True, null=True)
    squal_num09 = models.FloatField(blank=True, null=True)
    squal_num10 = models.FloatField(blank=True, null=True)
    squal_num11 = models.FloatField(blank=True, null=True)
    squal_num12 = models.FloatField(blank=True, null=True)
    squal_num13 = models.FloatField(blank=True, null=True)
    squal_num14 = models.FloatField(blank=True, null=True)
    squal_num15 = models.FloatField(blank=True, null=True)
    squal_num16 = models.FloatField(blank=True, null=True)
    squal_num17 = models.FloatField(blank=True, null=True)
    squal_num18 = models.FloatField(blank=True, null=True)
    squal_num19 = models.FloatField(blank=True, null=True)
    squal_num20 = models.FloatField(blank=True, null=True)
    squal_num21 = models.FloatField(blank=True, null=True)
    squal_num22 = models.FloatField(blank=True, null=True)
    squal_num23 = models.FloatField(blank=True, null=True)
    squal_num24 = models.FloatField(blank=True, null=True)
    squal_num25 = models.FloatField(blank=True, null=True)
    squal_num26 = models.FloatField(blank=True, null=True)
    squal_num27 = models.FloatField(blank=True, null=True)
    squal_num28 = models.FloatField(blank=True, null=True)
    squal_num29 = models.FloatField(blank=True, null=True)
    squal_num30 = models.FloatField(blank=True, null=True)
    squal_num31 = models.FloatField(blank=True, null=True)
    squal_num32 = models.FloatField(blank=True, null=True)
    squal_num33 = models.FloatField(blank=True, null=True)
    squal_num34 = models.FloatField(blank=True, null=True)
    squal_num35 = models.FloatField(blank=True, null=True)
    squal_num36 = models.FloatField(blank=True, null=True)
    squal_num37 = models.FloatField(blank=True, null=True)
    squal_num38 = models.FloatField(blank=True, null=True)
    squal_num39 = models.FloatField(blank=True, null=True)
    squal_num40 = models.FloatField(blank=True, null=True)
    squal_num41 = models.FloatField(blank=True, null=True)
    squal_num42 = models.FloatField(blank=True, null=True)
    squal_num43 = models.FloatField(blank=True, null=True)
    squal_num44 = models.FloatField(blank=True, null=True)
    squal_num45 = models.FloatField(blank=True, null=True)
    squal_num46 = models.FloatField(blank=True, null=True)
    squal_num47 = models.FloatField(blank=True, null=True)
    squal_num48 = models.FloatField(blank=True, null=True)
    squal_num49 = models.FloatField(blank=True, null=True)
    squal_num50 = models.FloatField(blank=True, null=True)
    squal_curc01 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc02 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc03 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc04 = models.CharField(max_length=360, blank=True, null=True)
    squal_curc05 = models.CharField(max_length=360, blank=True, null=True)
    txn_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_1700_partner_trans_gt'


class JtyTerrNvpTransGt(models.Model):
    attribute_name = models.CharField(max_length=60, blank=True, null=True)
    num_value = models.FloatField(blank=True, null=True)
    char_value = models.CharField(max_length=360, blank=True, null=True)
    date_value = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'jty_terr_nvp_trans_gt'


class Lines9574881(models.Model):
    ail_invoice_id3 = models.BigIntegerField(blank=True, null=True)
    ail_distribution_line_number3 = models.BigIntegerField(blank=True, null=True)
    ail_invoice_id4 = models.BigIntegerField(blank=True, null=True)
    pay_awt_group_id = models.BigIntegerField(blank=True, null=True)
    web_parameter_id = models.FloatField(blank=True, null=True)
    adjustment_reason = models.CharField(max_length=240, blank=True, null=True)
    merchant_document_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_name = models.CharField(max_length=80, blank=True, null=True)
    merchant_reference = models.CharField(max_length=240, blank=True, null=True)
    merchant_tax_reg_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_taxpayer_id = models.CharField(max_length=80, blank=True, null=True)
    country_of_supply = models.CharField(max_length=5, blank=True, null=True)
    credit_card_trx_id = models.BigIntegerField(blank=True, null=True)
    company_prepaid_invoice_id = models.BigIntegerField(blank=True, null=True)
    cc_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    line_selected_for_appl_flag = models.CharField(max_length=1, blank=True, null=True)
    prepay_appl_request_id = models.BigIntegerField(blank=True, null=True)
    application_id = models.BigIntegerField(blank=True, null=True)
    product_table = models.CharField(max_length=30, blank=True, null=True)
    tax_rate = models.FloatField(blank=True, null=True)
    invoice_id = models.BigIntegerField()
    line_number = models.FloatField()
    line_type_lookup_code = models.CharField(max_length=25)
    requester_id = models.BigIntegerField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    line_source = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    line_group_number = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_description = models.CharField(max_length=240, blank=True, null=True)
    serial_number = models.CharField(max_length=35, blank=True, null=True)
    manufacturer = models.CharField(max_length=30, blank=True, null=True)
    model_number = models.CharField(max_length=40, blank=True, null=True)
    warranty_number = models.CharField(max_length=15, blank=True, null=True)
    generate_dists = models.CharField(max_length=1, blank=True, null=True)
    match_type = models.CharField(max_length=25, blank=True, null=True)
    distribution_set_id = models.BigIntegerField(blank=True, null=True)
    account_segment = models.CharField(max_length=25, blank=True, null=True)
    balancing_segment = models.CharField(max_length=25, blank=True, null=True)
    cost_center_segment = models.CharField(max_length=25, blank=True, null=True)
    overlay_dist_code_concat = models.CharField(max_length=250, blank=True, null=True)
    default_dist_ccid = models.BigIntegerField(blank=True, null=True)
    prorate_across_all_items = models.CharField(max_length=1, blank=True, null=True)
    accounting_date = models.DateField()
    period_name = models.CharField(max_length=15, blank=True, null=True)
    deferred_acctg_flag = models.CharField(max_length=1, blank=True, null=True)
    def_acctg_start_date = models.DateField(blank=True, null=True)
    def_acctg_end_date = models.DateField(blank=True, null=True)
    def_acctg_number_of_periods = models.FloatField(blank=True, null=True)
    def_acctg_period_type = models.CharField(max_length=30, blank=True, null=True)
    set_of_books_id = models.BigIntegerField()
    amount = models.FloatField()
    base_amount = models.FloatField(blank=True, null=True)
    rounding_amt = models.FloatField(blank=True, null=True)
    quantity_invoiced = models.FloatField(blank=True, null=True)
    unit_meas_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    wfapproval_status = models.CharField(max_length=30)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    discarded_flag = models.CharField(max_length=1, blank=True, null=True)
    original_amount = models.FloatField(blank=True, null=True)
    original_base_amount = models.FloatField(blank=True, null=True)
    original_rounding_amt = models.FloatField(blank=True, null=True)
    cancelled_flag = models.CharField(max_length=1, blank=True, null=True)
    income_tax_region = models.CharField(max_length=10, blank=True, null=True)
    type_1099 = models.CharField(max_length=10, blank=True, null=True)
    stat_amount = models.FloatField(blank=True, null=True)
    prepay_invoice_id = models.BigIntegerField(blank=True, null=True)
    prepay_line_number = models.FloatField(blank=True, null=True)
    invoice_includes_prepay_flag = models.CharField(max_length=1, blank=True, null=True)
    corrected_inv_id = models.BigIntegerField(blank=True, null=True)
    corrected_line_number = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    po_line_id = models.FloatField(blank=True, null=True)
    po_release_id = models.FloatField(blank=True, null=True)
    po_line_location_id = models.FloatField(blank=True, null=True)
    po_distribution_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    final_match_flag = models.CharField(max_length=1, blank=True, null=True)
    assets_tracking_flag = models.CharField(max_length=1, blank=True, null=True)
    asset_book_type_code = models.CharField(max_length=15, blank=True, null=True)
    asset_category_id = models.BigIntegerField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    pa_quantity = models.FloatField(blank=True, null=True)
    pa_cc_ar_invoice_id = models.BigIntegerField(blank=True, null=True)
    pa_cc_ar_invoice_line_num = models.BigIntegerField(blank=True, null=True)
    pa_cc_processed_code = models.CharField(max_length=1, blank=True, null=True)
    award_id = models.BigIntegerField(blank=True, null=True)
    awt_group_id = models.BigIntegerField(blank=True, null=True)
    reference_1 = models.CharField(max_length=30, blank=True, null=True)
    reference_2 = models.CharField(max_length=30, blank=True, null=True)
    receipt_verified_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_required_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_missing_flag = models.CharField(max_length=1, blank=True, null=True)
    justification = models.CharField(max_length=240, blank=True, null=True)
    expense_group = models.CharField(max_length=80, blank=True, null=True)
    start_expense_date = models.DateField(blank=True, null=True)
    end_expense_date = models.DateField(blank=True, null=True)
    receipt_currency_code = models.CharField(max_length=15, blank=True, null=True)
    receipt_conversion_rate = models.FloatField(blank=True, null=True)
    receipt_currency_amount = models.FloatField(blank=True, null=True)
    daily_amount = models.FloatField(blank=True, null=True)
    ail_invoice_id2 = models.BigIntegerField(blank=True, null=True)
    ail_distribution_line_number2 = models.BigIntegerField(blank=True, null=True)
    reference_key1 = models.CharField(max_length=150, blank=True, null=True)
    reference_key2 = models.CharField(max_length=150, blank=True, null=True)
    reference_key3 = models.CharField(max_length=150, blank=True, null=True)
    reference_key4 = models.CharField(max_length=150, blank=True, null=True)
    reference_key5 = models.CharField(max_length=150, blank=True, null=True)
    purchasing_category_id = models.BigIntegerField(blank=True, null=True)
    cost_factor_id = models.BigIntegerField(blank=True, null=True)
    control_amount = models.FloatField(blank=True, null=True)
    assessable_value = models.FloatField(blank=True, null=True)
    total_rec_tax_amount = models.FloatField(blank=True, null=True)
    total_nrec_tax_amount = models.FloatField(blank=True, null=True)
    total_rec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    total_nrec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    included_tax_amount = models.FloatField(blank=True, null=True)
    primary_intended_use = models.CharField(max_length=30, blank=True, null=True)
    tax_already_calculated_flag = models.CharField(max_length=1, blank=True, null=True)
    ship_to_location_id = models.BigIntegerField(blank=True, null=True)
    product_type = models.CharField(max_length=240, blank=True, null=True)
    product_category = models.CharField(max_length=240, blank=True, null=True)
    product_fisc_classification = models.CharField(max_length=240, blank=True, null=True)
    user_defined_fisc_class = models.CharField(max_length=240, blank=True, null=True)
    trx_business_category = models.CharField(max_length=240, blank=True, null=True)
    summary_tax_line_id = models.FloatField(blank=True, null=True)
    tax_regime_code = models.CharField(max_length=30, blank=True, null=True)
    tax = models.CharField(max_length=30, blank=True, null=True)
    tax_jurisdiction_code = models.CharField(max_length=30, blank=True, null=True)
    tax_status_code = models.CharField(max_length=30, blank=True, null=True)
    tax_rate_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    ail_invoice_id = models.BigIntegerField(blank=True, null=True)
    ail_distribution_line_number = models.BigIntegerField(blank=True, null=True)
    tax_code_id = models.BigIntegerField(blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_classification_code = models.CharField(max_length=30, blank=True, null=True)
    source_application_id = models.FloatField(blank=True, null=True)
    source_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    source_entity_code = models.CharField(max_length=30, blank=True, null=True)
    source_trx_id = models.FloatField(blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    source_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    retained_amount = models.FloatField(blank=True, null=True)
    retained_amount_remaining = models.FloatField(blank=True, null=True)
    retained_invoice_id = models.BigIntegerField(blank=True, null=True)
    retained_line_number = models.FloatField(blank=True, null=True)
    line_selected_for_release_flag = models.CharField(max_length=1, blank=True, null=True)
    line_owner_role = models.CharField(max_length=320, blank=True, null=True)
    disputable_flag = models.CharField(max_length=1, blank=True, null=True)
    rcv_shipment_line_id = models.BigIntegerField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'lines_9574881'


class LnsLoanDtlsAllMv(models.Model):
    loan_id = models.BigIntegerField()
    loan_number = models.CharField(max_length=60)
    loan_description = models.CharField(max_length=250, blank=True, null=True)
    total_principal_balance = models.FloatField(blank=True, null=True)
    primary_borrower_id = models.BigIntegerField(blank=True, null=True)
    party_name = models.CharField(max_length=360)
    loan_status_meaning = models.CharField(max_length=162, blank=True, null=True)
    detail_view_flag = models.CharField(max_length=1, blank=True, null=True)
    initial_loan_balance = models.FloatField()
    term_period = models.CharField(max_length=121, blank=True, null=True)
    address = models.CharField(max_length=963, blank=True, null=True)
    city_county = models.CharField(max_length=121, blank=True, null=True)
    state = models.CharField(max_length=60, blank=True, null=True)
    postal_code = models.CharField(max_length=60, blank=True, null=True)
    tax_reference = models.CharField(max_length=20, blank=True, null=True)
    product_id = models.BigIntegerField(blank=True, null=True)
    rate = models.CharField(max_length=41, blank=True, null=True)
    rate_type = models.CharField(max_length=80)
    contact_phone_number = models.CharField(max_length=60, blank=True, null=True)
    select_loan_row = models.CharField(max_length=1, blank=True, null=True)
    contact_person_name = models.CharField(max_length=360, blank=True, null=True)
    loan_type = models.CharField(max_length=30, blank=True, null=True)
    loan_class_code = models.CharField(max_length=30, blank=True, null=True)
    creation_date = models.DateField()
    loan_maturity_date = models.DateField(blank=True, null=True)
    loan_start_date = models.DateField()
    loan_currency = models.CharField(max_length=15)
    requested_amount = models.FloatField()
    last_update_date = models.DateField()
    end_date = models.DateField(blank=True, null=True)
    delete_switcher = models.CharField(max_length=14, blank=True, null=True)
    loan_status = models.CharField(max_length=30)
    term_id = models.BigIntegerField()
    loan_approval_date = models.DateField(blank=True, null=True)
    loan_class_meaning = models.CharField(max_length=80)
    loan_type_meaning = models.CharField(max_length=80)
    update_switcher = models.CharField(max_length=14, blank=True, null=True)
    loan_agent_id = models.FloatField()
    loan_agent_name = models.CharField(max_length=360, blank=True, null=True)
    loan_agent_user_id = models.FloatField(blank=True, null=True)
    loan_max_last_update_date = models.DateField()
    funding_advice_submitted_date = models.DateField(blank=True, null=True)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    legal_entity_name = models.CharField(max_length=240)
    operating_unit_name = models.CharField(max_length=240)
    loan_type_id = models.BigIntegerField(blank=True, null=True)
    secondary_status = models.CharField(max_length=30, blank=True, null=True)
    loan_product_name = models.CharField(max_length=80, blank=True, null=True)
    primary_status_meaning = models.CharField(max_length=80)
    secondary_status_meaning = models.CharField(max_length=80, blank=True, null=True)
    org_id = models.BigIntegerField()
    loan_product_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'lns_loan_dtls_all_mv'


class MlogAsoBiDiscBukMv(models.Model):
    c = models.TextField(blank=True, null=True)  # This field type is a guess.
    high = models.FloatField(blank=True, null=True)
    low = models.FloatField(blank=True, null=True)
    r = models.TextField(blank=True, null=True)  # This field type is a guess.
    short_name = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_disc_buk_mv'


class MlogAsoBiQlinL1Mv(models.Model):
    category_id = models.FloatField(blank=True, null=True)
    line_amount = models.FloatField(blank=True, null=True)
    master_id = models.CharField(max_length=25, blank=True, null=True)
    order_creation_date = models.DateField(blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    quote_creation_date = models.DateField(blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sec_line_amount = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qlin_l1_mv'


class MlogAsoBiQlinL2Mv(models.Model):
    category_id = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    master_id = models.CharField(max_length=25, blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qlin_l2_mv'


class MlogAsoBiQotAprbMv(models.Model):
    approved = models.FloatField(blank=True, null=True)
    approvers = models.FloatField(blank=True, null=True)
    complete = models.FloatField(blank=True, null=True)
    days_for_approval = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    new = models.FloatField(blank=True, null=True)
    open = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qot_aprb_mv'


class MlogAsoBiQotDiscbMv(models.Model):
    conv_qot_cnt = models.FloatField(blank=True, null=True)
    conv_qot_val = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    low = models.FloatField(blank=True, null=True)
    new_qot_cnt = models.FloatField(blank=True, null=True)
    new_qot_val = models.FloatField(blank=True, null=True)
    opn_qot_cnt = models.FloatField(blank=True, null=True)
    opn_qot_val = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    sec_conv_qot_val = models.FloatField(blank=True, null=True)
    sec_new_qot_val = models.FloatField(blank=True, null=True)
    sec_opn_qot_val = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qot_discb_mv'


class MlogAsoBiQotL1Mv(models.Model):
    all_cnt = models.FloatField(blank=True, null=True)
    convqot_amnt = models.FloatField(blank=True, null=True)
    convqot_number = models.FloatField(blank=True, null=True)
    conv_days = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    newqot_amnt = models.FloatField(blank=True, null=True)
    newqot_number = models.FloatField(blank=True, null=True)
    openqot_amnt = models.FloatField(blank=True, null=True)
    openqot_number = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    row_type = models.CharField(max_length=6, blank=True, null=True)
    sec_convqot_amnt = models.FloatField(blank=True, null=True)
    sec_newqot_amnt = models.FloatField(blank=True, null=True)
    sec_openqot_amnt = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qot_l1_mv'


class MlogAsoBiQotRulbMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    new = models.FloatField(blank=True, null=True)
    oam_rule_id = models.FloatField(blank=True, null=True)
    open = models.FloatField(blank=True, null=True)
    resource_grp_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_qot_rulb_mv'


class MlogAsoBiRsgPrntMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    parent_group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_rsg_prnt_mv'


class MlogAsoBiTopRsgMv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_aso_bi_top_rsg_mv'


class MlogBilBiFst1PgMv(models.Model):
    credit_type_id = models.FloatField(blank=True, null=True)
    effective_period_type_id = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    forecast_amt = models.FloatField(blank=True, null=True)
    forecast_amt_s = models.FloatField(blank=True, null=True)
    forecast_amt_sub = models.FloatField(blank=True, null=True)
    forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt = models.FloatField(blank=True, null=True)
    opp_forecast_amt_s = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub = models.FloatField(blank=True, null=True)
    opp_forecast_amt_sub_s = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    txn_period_type_id = models.FloatField(blank=True, null=True)
    txn_time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_fst1_pg_mv'


class MlogBilBiGrpCntMv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_grp_cnt_mv'


class MlogBilBiOp11PgMv(models.Model):
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_op11_pg_mv'


class MlogBilBiOp12PgMv(models.Model):
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_op12_pg_mv'


class MlogBilBiOp21GMv(models.Model):
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    opty_close_time_id = models.FloatField(blank=True, null=True)
    opty_creation_time_id = models.FloatField(blank=True, null=True)
    opty_effective_time_id = models.FloatField(blank=True, null=True)
    opty_id = models.FloatField(blank=True, null=True)
    opty_ld_conversion_time_id = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_op21_g_mv'


class MlogBilBiOp22GMv(models.Model):
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_op22_g_mv'


class MlogBilBiOpdtlMv(models.Model):
    campaign_object_id = models.FloatField(blank=True, null=True)
    campaign_object_type = models.CharField(max_length=30, blank=True, null=True)
    child_campaign_object_id = models.FloatField(blank=True, null=True)
    child_campaign_object_type = models.CharField(max_length=30, blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    cnv_opty_cnt = models.FloatField(blank=True, null=True)
    competitor_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    hdr_source_promotion_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    latest_open_opty_amt = models.FloatField(blank=True, null=True)
    latest_open_opty_amt_s = models.FloatField(blank=True, null=True)
    latest_open_opty_cnt = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    lost_opty_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    new_opty_cnt = models.FloatField(blank=True, null=True)
    nfp_per = models.FloatField(blank=True, null=True)
    nfp_per_s = models.FloatField(blank=True, null=True)
    nfp_qtr = models.FloatField(blank=True, null=True)
    nfp_qtr_s = models.FloatField(blank=True, null=True)
    nfp_wk = models.FloatField(blank=True, null=True)
    nfp_wk_s = models.FloatField(blank=True, null=True)
    nfp_yr = models.FloatField(blank=True, null=True)
    nfp_yr_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_cnt = models.FloatField(blank=True, null=True)
    opty_amt = models.FloatField(blank=True, null=True)
    opty_amt_s = models.FloatField(blank=True, null=True)
    opty_close_time_id = models.FloatField(blank=True, null=True)
    opty_creation_time_id = models.FloatField(blank=True, null=True)
    opty_effective_time_id = models.FloatField(blank=True, null=True)
    opty_id = models.FloatField(blank=True, null=True)
    opty_ld_conversion_time_id = models.FloatField(blank=True, null=True)
    owner_salesrep_id = models.FloatField(blank=True, null=True)
    owner_sales_group_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_credit_amt = models.FloatField(blank=True, null=True)
    sales_credit_amt_s = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    won_opty_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_opdtl_mv'


class MlogBilBiOpldcGMv(models.Model):
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_opldc_g_mv'


class MlogBilBiOpldcMv(models.Model):
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_opldc_mv'


class MlogBilBiOplpcGMv(models.Model):
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=30, blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    parent_source_code_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=30, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_oplpc_g_mv'


class MlogBilBiOplpcMv(models.Model):
    closed_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_leads_cnt = models.FloatField(blank=True, null=True)
    cnv_opty_amt = models.FloatField(blank=True, null=True)
    cnv_opty_amt_s = models.FloatField(blank=True, null=True)
    dead_leads_cnt = models.FloatField(blank=True, null=True)
    effective_time_id = models.FloatField(blank=True, null=True)
    lost_opty_amt = models.FloatField(blank=True, null=True)
    lost_opty_amt_s = models.FloatField(blank=True, null=True)
    new_leads_cnt = models.FloatField(blank=True, null=True)
    new_opty_amt = models.FloatField(blank=True, null=True)
    new_opty_amt_s = models.FloatField(blank=True, null=True)
    no_opty_amt = models.FloatField(blank=True, null=True)
    no_opty_amt_s = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    won_opty_amt = models.FloatField(blank=True, null=True)
    won_opty_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_oplpc_mv'


class MlogBilBiPipeMv(models.Model):
    grp_total_flag = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_pipe_mv'


class MlogBilBiPipecWgMv(models.Model):
    grp_total_flag = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    open_amt_day = models.FloatField(blank=True, null=True)
    open_amt_day_s = models.FloatField(blank=True, null=True)
    open_amt_period = models.FloatField(blank=True, null=True)
    open_amt_period_s = models.FloatField(blank=True, null=True)
    open_amt_quarter = models.FloatField(blank=True, null=True)
    open_amt_quarter_s = models.FloatField(blank=True, null=True)
    open_amt_week = models.FloatField(blank=True, null=True)
    open_amt_week_s = models.FloatField(blank=True, null=True)
    open_amt_year = models.FloatField(blank=True, null=True)
    open_amt_year_s = models.FloatField(blank=True, null=True)
    parent_sales_group_id = models.FloatField(blank=True, null=True)
    pipeline_amt_day = models.FloatField(blank=True, null=True)
    pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    pipeline_amt_period = models.FloatField(blank=True, null=True)
    pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    pipeline_amt_week = models.FloatField(blank=True, null=True)
    pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    pipeline_amt_year = models.FloatField(blank=True, null=True)
    pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day = models.FloatField(blank=True, null=True)
    prvprd_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvprd_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvqtr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day = models.FloatField(blank=True, null=True)
    prvwk_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvwk_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day = models.FloatField(blank=True, null=True)
    prvyr_open_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_open_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_open_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_open_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_day_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_prd_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_qtr_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_wk_s = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr = models.FloatField(blank=True, null=True)
    prvyr_wtd_pipe_amt_yr_s = models.FloatField(blank=True, null=True)
    salesrep_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    snap_date = models.DateField(blank=True, null=True)
    wtd_pipeline_amt_day = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_day_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_period_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_quarter_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_week_s = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year = models.FloatField(blank=True, null=True)
    wtd_pipeline_amt_year_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_pipec_wg_mv'


class MlogBilBiRsGrpMv(models.Model):
    parent_group_id = models.FloatField(blank=True, null=True)
    parent_parent_group_id = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bil_bi_rs_grp_mv'


class MlogBimIBgtCabMv(models.Model):
    accrual = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_bgt_cab_mv'


class MlogBimIBgtFctMv(models.Model):
    accrual = models.FloatField(blank=True, null=True)
    accrual_s = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    committed = models.FloatField(blank=True, null=True)
    committed_s = models.FloatField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    fund_type = models.CharField(max_length=30, blank=True, null=True)
    holdback = models.FloatField(blank=True, null=True)
    holdback_s = models.FloatField(blank=True, null=True)
    leaf_node_flag = models.CharField(max_length=1, blank=True, null=True)
    original_budget = models.FloatField(blank=True, null=True)
    original_budget_s = models.FloatField(blank=True, null=True)
    parent_fund_id = models.FloatField(blank=True, null=True)
    planned = models.FloatField(blank=True, null=True)
    planned_s = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    transfer_in = models.FloatField(blank=True, null=True)
    transfer_in_s = models.FloatField(blank=True, null=True)
    transfer_out = models.FloatField(blank=True, null=True)
    transfer_out_s = models.FloatField(blank=True, null=True)
    utilized = models.FloatField(blank=True, null=True)
    utilized_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_bgt_fct_mv'


class MlogBimICpbMetrMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    total_leads = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_cpb_metr_mv'


class MlogBimIExtColMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    activity_type = models.CharField(max_length=30, blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    booked_order_amount = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    invoiced_order_amount = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    metric_type = models.CharField(max_length=15, blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    response_count = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ext_col_mv'


class MlogBimILdBaseMv(models.Model):
    aleads_converted = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ld_base_mv'


class MlogBimILdGensgTMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ld_gensg_t_mv'


class MlogBimILdGhSumMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ld_gh_sum_mv'


class MlogBimILdHeaderMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    close_reason = models.CharField(max_length=30, blank=True, null=True)
    customer_flag = models.CharField(max_length=1, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_closed_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_dead_date = models.DateField(blank=True, null=True)
    lead_id = models.FloatField(blank=True, null=True)
    lead_name = models.CharField(max_length=2000, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_touched_date = models.DateField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    qualified_flag = models.CharField(max_length=1, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ld_header_mv'


class MlogBimILpBaseMv(models.Model):
    business_unit_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_lp_base_mv'


class MlogBimILpGensgTMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    conversion_time = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_new_conv = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    update_period_type_id = models.FloatField(blank=True, null=True)
    update_time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_lp_gensg_t_mv'


class MlogBimILpGhSumMv(models.Model):
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_lp_gh_sum_mv'


class MlogBimILpItemMv(models.Model):
    business_unit_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_country = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_region = models.CharField(max_length=30, blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    close_reason = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_closed_date = models.DateField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_country = models.CharField(max_length=30, blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_dead_date = models.DateField(blank=True, null=True)
    lead_id = models.FloatField(blank=True, null=True)
    lead_line_id = models.FloatField(blank=True, null=True)
    lead_name = models.CharField(max_length=2000, blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_region = models.CharField(max_length=30, blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lead_status = models.CharField(max_length=30, blank=True, null=True)
    lead_touched_date = models.DateField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    qualified_flag = models.CharField(max_length=1, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_lp_item_mv'


class MlogBimIMktCpbMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    actual_cost_s = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    invoiced_amt = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    total_cost_s = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_mkt_cpb_mv'


class MlogBimIMktFctMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    business_unit_id = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_mkt_fct_mv'


class MlogBimIObjMetrMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_approved_sch = models.FloatField(blank=True, null=True)
    budget_approved_sch_s = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    immediate_parent_id = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    source_code_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_obj_metr_mv'


class MlogBimIOrdColMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    invoiced_amt_f = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    primary_category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ord_col_mv'


class MlogBimIOrdIntMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    category_flag = models.CharField(max_length=1, blank=True, null=True)
    child_object_id = models.FloatField(blank=True, null=True)
    child_object_type = models.CharField(max_length=30, blank=True, null=True)
    invoiced_amt_f = models.FloatField(blank=True, null=True)
    invoiced_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_id = models.FloatField(blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    object_status = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_i_ord_int_mv'


class MlogBimLdCampGhMv(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_ld_camp_gh_mv'


class MlogBimLdCampTMv(models.Model):
    conversion_time = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_new_changed = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_amount = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_ld_camp_t_mv'


class MlogBimMktKpiFMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_converted_date = models.DateField(blank=True, null=True)
    lead_creation_date = models.DateField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_mkt_kpi_f_mv'


class MlogBimMktKpiIntMv(models.Model):
    activity_id = models.FloatField(blank=True, null=True)
    aleads_conversion_time = models.FloatField(blank=True, null=True)
    aleads_converted = models.FloatField(blank=True, null=True)
    attendance = models.FloatField(blank=True, null=True)
    booked_order_amount_s = models.FloatField(blank=True, null=True)
    budget_approved = models.FloatField(blank=True, null=True)
    budget_approved_s = models.FloatField(blank=True, null=True)
    budget_requested = models.FloatField(blank=True, null=True)
    budget_requested_s = models.FloatField(blank=True, null=True)
    camp_ended = models.FloatField(blank=True, null=True)
    camp_sch_ended = models.FloatField(blank=True, null=True)
    camp_sch_started = models.FloatField(blank=True, null=True)
    camp_started = models.FloatField(blank=True, null=True)
    cancellations = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cost_actual = models.FloatField(blank=True, null=True)
    cost_actual_s = models.FloatField(blank=True, null=True)
    cost_forecasted = models.FloatField(blank=True, null=True)
    cost_forecasted_s = models.FloatField(blank=True, null=True)
    customers_targeted = models.FloatField(blank=True, null=True)
    cust_category = models.CharField(max_length=30, blank=True, null=True)
    even_ended = models.FloatField(blank=True, null=True)
    even_sch_ended = models.FloatField(blank=True, null=True)
    even_sch_started = models.FloatField(blank=True, null=True)
    even_started = models.FloatField(blank=True, null=True)
    invoiced_order_amount_s = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    leads_changed = models.FloatField(blank=True, null=True)
    leads_closed = models.FloatField(blank=True, null=True)
    leads_conversion_time = models.FloatField(blank=True, null=True)
    leads_converted = models.FloatField(blank=True, null=True)
    leads_conv_customer = models.FloatField(blank=True, null=True)
    leads_conv_prospect = models.FloatField(blank=True, null=True)
    leads_customer = models.FloatField(blank=True, null=True)
    leads_dead = models.FloatField(blank=True, null=True)
    leads_new = models.FloatField(blank=True, null=True)
    leads_open = models.FloatField(blank=True, null=True)
    leads_prospect = models.FloatField(blank=True, null=True)
    leads_qualified = models.FloatField(blank=True, null=True)
    leads_qualified_a = models.FloatField(blank=True, null=True)
    lead_rank_id = models.FloatField(blank=True, null=True)
    lead_source = models.CharField(max_length=30, blank=True, null=True)
    lost_opportunity_amt = models.FloatField(blank=True, null=True)
    lost_opportunity_amt_s = models.FloatField(blank=True, null=True)
    lost_opportunity_cnt = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    object_country = models.CharField(max_length=30, blank=True, null=True)
    object_region = models.CharField(max_length=30, blank=True, null=True)
    open_opportunity_amt = models.FloatField(blank=True, null=True)
    open_opportunity_amt_s = models.FloatField(blank=True, null=True)
    orders_booked = models.FloatField(blank=True, null=True)
    orders_booked_amt = models.FloatField(blank=True, null=True)
    orders_invoiced_amt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    rank_a = models.FloatField(blank=True, null=True)
    rank_b = models.FloatField(blank=True, null=True)
    rank_c = models.FloatField(blank=True, null=True)
    rank_d = models.FloatField(blank=True, null=True)
    rank_z = models.FloatField(blank=True, null=True)
    registrations = models.FloatField(blank=True, null=True)
    responses_forecasted = models.FloatField(blank=True, null=True)
    responses_positive = models.FloatField(blank=True, null=True)
    revenue_actual = models.FloatField(blank=True, null=True)
    revenue_actual_s = models.FloatField(blank=True, null=True)
    revenue_forecasted = models.FloatField(blank=True, null=True)
    revenue_forecasted_s = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    won_opportunity_amt = models.FloatField(blank=True, null=True)
    won_opportunity_amt_s = models.FloatField(blank=True, null=True)
    won_opportunity_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_mkt_kpi_int_mv'


class MlogBimSgmtActBMv(models.Model):
    activities_count = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    leads = models.FloatField(blank=True, null=True)
    new_opportunity_amt = models.FloatField(blank=True, null=True)
    new_opportunity_amt_s = models.FloatField(blank=True, null=True)
    responses = models.FloatField(blank=True, null=True)
    schedule_purpose = models.CharField(max_length=240, blank=True, null=True)
    segment_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_sgmt_act_b_mv'


class MlogBimSgmtActHMv(models.Model):
    segment_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    schedule_start_date = models.DateField(blank=True, null=True)
    schedule_purpose = models.CharField(max_length=240, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_sgmt_act_h_mv'


class MlogBimSgmtValBMv(models.Model):
    segment_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    acquired_customers = models.FloatField(blank=True, null=True)
    lost_customers = models.FloatField(blank=True, null=True)
    total_customers = models.FloatField(blank=True, null=True)
    segment_size = models.FloatField(blank=True, null=True)
    segement_size_c = models.FloatField(blank=True, null=True)
    booked_amt = models.FloatField(blank=True, null=True)
    booked_amt_c = models.FloatField(blank=True, null=True)
    booked_amt_s = models.FloatField(blank=True, null=True)
    booked_amt_s_c = models.FloatField(blank=True, null=True)
    booked_count = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_c = models.FloatField(blank=True, null=True)
    revenue_s = models.FloatField(blank=True, null=True)
    revenue_s_c = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bim_sgmt_val_b_mv'


class MlogBivActSumMv(models.Model):
    closed_count = models.FloatField(blank=True, null=True)
    first_opened_count = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    reopened_count = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_biv_act_sum_mv'


class MlogBivBacSumMv(models.Model):
    backlog_count = models.FloatField(blank=True, null=True)
    escalated_count = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    resolved_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    unowned_count = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_biv_bac_sum_mv'


class MlogBivCloSumMv(models.Model):
    closed_count = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    time_to_close_b1 = models.FloatField(blank=True, null=True)
    time_to_close_b10 = models.FloatField(blank=True, null=True)
    time_to_close_b2 = models.FloatField(blank=True, null=True)
    time_to_close_b3 = models.FloatField(blank=True, null=True)
    time_to_close_b4 = models.FloatField(blank=True, null=True)
    time_to_close_b5 = models.FloatField(blank=True, null=True)
    time_to_close_b6 = models.FloatField(blank=True, null=True)
    time_to_close_b7 = models.FloatField(blank=True, null=True)
    time_to_close_b8 = models.FloatField(blank=True, null=True)
    time_to_close_b9 = models.FloatField(blank=True, null=True)
    total_time_to_close = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_biv_clo_sum_mv'


class MlogBivResSumMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    incident_type_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    resolution_count = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    time_to_resolution_b1 = models.FloatField(blank=True, null=True)
    time_to_resolution_b10 = models.FloatField(blank=True, null=True)
    time_to_resolution_b2 = models.FloatField(blank=True, null=True)
    time_to_resolution_b3 = models.FloatField(blank=True, null=True)
    time_to_resolution_b4 = models.FloatField(blank=True, null=True)
    time_to_resolution_b5 = models.FloatField(blank=True, null=True)
    time_to_resolution_b6 = models.FloatField(blank=True, null=True)
    time_to_resolution_b7 = models.FloatField(blank=True, null=True)
    time_to_resolution_b8 = models.FloatField(blank=True, null=True)
    time_to_resolution_b9 = models.FloatField(blank=True, null=True)
    total_time_to_resolution = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_biv_res_sum_mv'


class MlogBixCallPrespMv(models.Model):
    all_count = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    response_count = models.FloatField(blank=True, null=True)
    response_count_c = models.FloatField(blank=True, null=True)
    source_code_id = models.FloatField(blank=True, null=True)
    transaction_create_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_bix_call_presp_mv'


class MlogCsdRoPerItemMv(models.Model):
    ro_inventory_item_id = models.FloatField(blank=True, null=True)
    total_ro_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_csd_ro_per_item_mv'


class MlogDdrBsClsDayMv(models.Model):
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_cls_day_mv'


class MlogDdrBsFrcstItmBu(models.Model):
    act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    frcst_sls_amt = models.FloatField(blank=True, null=True)
    frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    frcst_sls_qty_alt = models.FloatField(blank=True, null=True)
    frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_frcst_itm_bu_'


class MlogDdrBsFrcstLstSls(models.Model):
    act_frcst_sls_amt_rpt = models.FloatField(blank=True, null=True)
    act_frcst_sls_qty_prmry = models.FloatField(blank=True, null=True)
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    max_frcst_vrsn = models.DateField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_frcst_lst_sls'


class MlogDdrBsFrcstVrsnMv(models.Model):
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    max_frcst_vrsn = models.DateField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_frcst_vrsn_mv'


class MlogDdrBsInvItmBuWk(models.Model):
    bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    in_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_qty_alt = models.FloatField(blank=True, null=True)
    in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    on_hand_qty_alt = models.FloatField(blank=True, null=True)
    on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_qty_alt = models.FloatField(blank=True, null=True)
    recvd_qty_prmry = models.FloatField(blank=True, null=True)
    recvd_rtl_amt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    undr_stck_bu_itm_days = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_inv_itm_bu_wk'


class MlogDdrBsInvSkuBuDa(models.Model):
    bckordr_net_cost_amt = models.FloatField(blank=True, null=True)
    bckordr_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt = models.FloatField(blank=True, null=True)
    bckordr_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_alt = models.FloatField(blank=True, null=True)
    bck_ordr_qty_prmry = models.FloatField(blank=True, null=True)
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    in_transit_net_cost_amt = models.FloatField(blank=True, null=True)
    in_transit_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    in_transit_qty_alt = models.FloatField(blank=True, null=True)
    in_transit_qty_prmry = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt = models.FloatField(blank=True, null=True)
    in_transit_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt = models.FloatField(blank=True, null=True)
    on_hand_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    on_hand_qty_alt = models.FloatField(blank=True, null=True)
    on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt = models.FloatField(blank=True, null=True)
    on_hand_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt = models.FloatField(blank=True, null=True)
    qlty_hold_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_alt = models.FloatField(blank=True, null=True)
    qlty_hold_qty_prmry = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt = models.FloatField(blank=True, null=True)
    qlty_hold_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt = models.FloatField(blank=True, null=True)
    recvd_net_cost_amt_rpt = models.FloatField(blank=True, null=True)
    recvd_qty_alt = models.FloatField(blank=True, null=True)
    recvd_qty_prmry = models.FloatField(blank=True, null=True)
    recvd_rtl_amt = models.FloatField(blank=True, null=True)
    recvd_rtl_amt_rpt = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_sku_item_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_inv_sku_bu_da'


class MlogDdrBsItmBuAsscD(models.Model):
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_itm_bu_assc_d'


class MlogDdrBsOrdrItmBuW(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    ordr_amt = models.FloatField(blank=True, null=True)
    ordr_amt_rpt = models.FloatField(blank=True, null=True)
    ordr_qty_alt = models.FloatField(blank=True, null=True)
    ordr_qty_prmry = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_ordr_itm_bu_w'


class MlogDdrBsShipItmBuW(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    ship_amt = models.FloatField(blank=True, null=True)
    ship_amt_rpt = models.FloatField(blank=True, null=True)
    ship_qty_alt = models.FloatField(blank=True, null=True)
    ship_qty_prmry = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_ship_itm_bu_w'


class MlogDdrBsSlsrItmBuW(models.Model):
    act_bu_itm_days_scanned = models.FloatField(blank=True, null=True)
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    itm_typ = models.CharField(max_length=1, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mkt_area_id = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    prmtn_flag = models.CharField(max_length=1, blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtrn_amt = models.FloatField(blank=True, null=True)
    rtrn_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt = models.FloatField(blank=True, null=True)
    rtrn_cost_amt_rpt = models.FloatField(blank=True, null=True)
    rtrn_qty_alt = models.FloatField(blank=True, null=True)
    rtrn_qty_prmry = models.FloatField(blank=True, null=True)
    sls_amt = models.FloatField(blank=True, null=True)
    sls_amt_rpt = models.FloatField(blank=True, null=True)
    sls_cost_amt = models.FloatField(blank=True, null=True)
    sls_cost_amt_rpt = models.FloatField(blank=True, null=True)
    sls_qty_alt = models.FloatField(blank=True, null=True)
    sls_qty_prmry = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_bs_slsr_itm_bu_w'


class MlogDdrRBaseDayDnMv(models.Model):
    base_day_id = models.FloatField(blank=True, null=True)
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    clndr_dt = models.DateField(blank=True, null=True)
    day_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    wk_timespn = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_base_day_dn_mv'


class MlogDdrRBsnsMnthDnM(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    qtr_timespn = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_bsns_mnth_dn_m'


class MlogDdrRBsnsQtrDnMv(models.Model):
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    yr_timespn = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_bsns_qtr_dn_mv'


class MlogDdrRBsnsWkDnMv(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    bsns_wk_id = models.FloatField(blank=True, null=True)
    bsns_yr_id = models.FloatField(blank=True, null=True)
    clndr_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mnth_timespn = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_bsns_wk_dn_mv'


class MlogDdrRInvRuleDnMv(models.Model):
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    min_stck_on_hand_qty_prmry = models.FloatField(blank=True, null=True)
    rtl_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_inv_rule_dn_mv'


class MlogDdrRMfgItemSkuD(models.Model):
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_item_cmpny_id = models.FloatField(blank=True, null=True)
    mfg_item_div_id = models.FloatField(blank=True, null=True)
    mfg_item_grp_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_item_sbc_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_sku_item_id = models.FloatField(blank=True, null=True)
    org_cd = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_mfg_item_sku_d'


class MlogDdrROrgBuChnltyp(models.Model):
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_org_bu_chnltyp'


class MlogDdrROrgBuDnMv(models.Model):
    chnl_typ_cd = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    mkt_area_id = models.FloatField(blank=True, null=True)
    org_bsns_unit_id = models.FloatField(blank=True, null=True)
    org_cd = models.CharField(max_length=30, blank=True, null=True)
    org_chain_id = models.FloatField(blank=True, null=True)
    org_rgn_id = models.FloatField(blank=True, null=True)
    org_typ = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_org_bu_dn_mv'


class MlogDdrRRtlItemSkuD(models.Model):
    eff_from_dt = models.DateField(blank=True, null=True)
    eff_to_dt = models.DateField(blank=True, null=True)
    glbl_item_id = models.CharField(max_length=30, blank=True, null=True)
    glbl_item_id_typ = models.CharField(max_length=30, blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    org_cd = models.CharField(max_length=30, blank=True, null=True)
    org_name = models.CharField(max_length=40, blank=True, null=True)
    rtl_item_class_id = models.FloatField(blank=True, null=True)
    rtl_item_cmpny_id = models.FloatField(blank=True, null=True)
    rtl_item_dept_id = models.FloatField(blank=True, null=True)
    rtl_item_div_id = models.FloatField(blank=True, null=True)
    rtl_item_grp_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_item_sbc_id = models.FloatField(blank=True, null=True)
    rtl_sku_item_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_r_rtl_item_sku_d'


class MlogDdrSvClsMnthMv(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_cls_mnth_mv'


class MlogDdrSvClsQtrMv(models.Model):
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_cls_qtr_mv'


class MlogDdrSvClsWkMv(models.Model):
    bsns_wk_id = models.FloatField(blank=True, null=True)
    mfg_item_class_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    num_mfg_sku_items = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_cls_wk_mv'


class MlogDdrSvItmBuAsscM(models.Model):
    bsns_mnth_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_itm_bu_assc_m'


class MlogDdrSvItmBuAsscQ(models.Model):
    bsns_qtr_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_itm_bu_assc_q'


class MlogDdrSvItmBuAsscW(models.Model):
    bsns_wk_id = models.FloatField(blank=True, null=True)
    mfg_item_id = models.FloatField(blank=True, null=True)
    mfg_org_cd = models.CharField(max_length=30, blank=True, null=True)
    rtl_bsns_unit_id = models.FloatField(blank=True, null=True)
    rtl_item_id = models.FloatField(blank=True, null=True)
    rtl_org_cd = models.CharField(max_length=30, blank=True, null=True)
    total_bu_itm_days = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ddr_sv_itm_bu_assc_w'


class MlogEniDbiArBaseMv(models.Model):
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    rev_prim_actual_g = models.FloatField(blank=True, null=True)
    rev_sec_actual_g = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_ar_base_mv'


class MlogEniDbiCoAllMv(models.Model):
    approval_date = models.DateField(blank=True, null=True)
    assignee_id = models.FloatField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    change_id = models.FloatField(blank=True, null=True)
    change_notice = models.CharField(max_length=10, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=2000, blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    need_by_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_co_all_mv'


class MlogEniDbiCoDnumMv(models.Model):
    approval_date = models.DateField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    item_org_id = models.CharField(max_length=141, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_co_dnum_mv'


class MlogEniDbiCoNumMv(models.Model):
    approval_date = models.DateField(blank=True, null=True)
    cancellation_date = models.DateField(blank=True, null=True)
    change_notice = models.CharField(max_length=10, blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    implementation_date = models.DateField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    need_by_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_co_num_mv'


class MlogEniDbiCoObjidsMv(models.Model):
    object_id = models.BigIntegerField(blank=True, null=True)
    obj_name = models.CharField(max_length=430, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_co_objids_mv'


class MlogEniDbiCoUnionMv(models.Model):
    approve_to_impl_cnt = models.FloatField(blank=True, null=True)
    approve_to_impl_sum = models.FloatField(blank=True, null=True)
    bucket1_sum = models.FloatField(blank=True, null=True)
    bucket2_sum = models.FloatField(blank=True, null=True)
    bucket3_sum = models.FloatField(blank=True, null=True)
    bucket4_sum = models.FloatField(blank=True, null=True)
    cancelled_sum = models.FloatField(blank=True, null=True)
    change_order_type_id = models.FloatField(blank=True, null=True)
    create_to_approve_cnt = models.FloatField(blank=True, null=True)
    create_to_approve_sum = models.FloatField(blank=True, null=True)
    cycle_time_cnt = models.FloatField(blank=True, null=True)
    cycle_time_sum = models.FloatField(blank=True, null=True)
    implemented_sum = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=100, blank=True, null=True)
    item_org_id = models.CharField(max_length=141, blank=True, null=True)
    new_sum = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    priority_code = models.CharField(max_length=10, blank=True, null=True)
    reason_code = models.CharField(max_length=10, blank=True, null=True)
    status_type = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_co_union_mv'


class MlogEniDbiCogsBaseMv(models.Model):
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_cogs_base_mv'


class MlogEniDbiGlBaseMv(models.Model):
    cnt_prim_actual_g = models.FloatField(blank=True, null=True)
    cnt_sec_actual_g = models.FloatField(blank=True, null=True)
    line_of_business_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_gl_base_mv'


class MlogEniDbiGlBaseSum(models.Model):
    gid = models.FloatField(blank=True, null=True)
    line_of_business_id = models.FloatField(blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_gl_base_sum_'


class MlogEniDbiInvBaseMv(models.Model):
    intransit_value_g = models.FloatField(blank=True, null=True)
    intransit_value_sg = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    inv_total_value_sg = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_master_org_id = models.CharField(max_length=81, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    wip_value_g = models.FloatField(blank=True, null=True)
    wip_value_sg = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_inv_base_mv'


class MlogEniDbiOrgMv(models.Model):
    dummy_organization_id = models.FloatField(blank=True, null=True)
    master_organization_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_org_mv'


class MlogEniDbiPrcSum1Mv(models.Model):
    cogs_amount = models.FloatField(blank=True, null=True)
    cogs_sec_amount = models.FloatField(blank=True, null=True)
    exp_amount = models.FloatField(blank=True, null=True)
    exp_sec_amount = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    rev_amount = models.FloatField(blank=True, null=True)
    rev_sec_amount = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_prc_sum1_mv'


class MlogEniDbiPrcUnionMv(models.Model):
    cogs_value_g = models.FloatField(blank=True, null=True)
    cogs_value_sg = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    rev_prim_actual_g = models.FloatField(blank=True, null=True)
    rev_sec_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_dbi_prc_union_mv'


class MlogEniRes1Mv(models.Model):
    bom_resource_type = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_res_1_mv'


class MlogEniRes2Mv(models.Model):
    number_resource = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_res_2_mv'


class MlogEniRes3Mv(models.Model):
    bom_resource_type = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=10, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_res_3_mv'


class MlogEniRes4Mv(models.Model):
    department_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.CharField(max_length=8, blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=16, blank=True, null=True)
    resource_group = models.CharField(max_length=16, blank=True, null=True)
    resource_id = models.IntegerField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_res_4_mv'


class MlogEniRes5Mv(models.Model):
    bom_resource_type = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    department_fk = models.CharField(max_length=42, blank=True, null=True)
    department_id = models.CharField(max_length=40, blank=True, null=True)
    disable_date = models.DateField(blank=True, null=True)
    id = models.CharField(max_length=122, blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_code = models.CharField(max_length=16, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_group_fk = models.CharField(max_length=32, blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    unit_of_measure = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_eni_res_5_mv'


class MlogFiiApHcatBMv(models.Model):
    invoice_count = models.FloatField(blank=True, null=True)
    marker = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    other_count = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    po_matching_count = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    user_defined_count = models.FloatField(blank=True, null=True)
    variance_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_hcat_b_mv'


class MlogFiiApHcatIMv(models.Model):
    hold_release_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_hold_count = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    other_hold_count = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    po_matching_hold_count = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    user_defined_hold_count = models.FloatField(blank=True, null=True)
    variance_hold_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_hcat_i_mv'


class MlogFiiApHhistBMv(models.Model):
    hold_date = models.DateField(blank=True, null=True)
    hold_time_id = models.FloatField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)
    release_time_id = models.FloatField(blank=True, null=True)
    seq_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_hhist_b_mv'


class MlogFiiApHhistIMv(models.Model):
    hold_date = models.DateField(blank=True, null=True)
    hold_time_id = models.FloatField(blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    release_date = models.DateField(blank=True, null=True)
    release_time_id = models.FloatField(blank=True, null=True)
    seq_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_hhist_i_mv'


class MlogFiiApIvatyBMv(models.Model):
    asbn_count = models.FloatField(blank=True, null=True)
    credit_count = models.FloatField(blank=True, null=True)
    debit_count = models.FloatField(blank=True, null=True)
    distribution_count = models.FloatField(blank=True, null=True)
    edi_count = models.FloatField(blank=True, null=True)
    ers_count = models.FloatField(blank=True, null=True)
    e_distribution_count = models.FloatField(blank=True, null=True)
    e_invoice_amt_b = models.FloatField(blank=True, null=True)
    e_invoice_count = models.FloatField(blank=True, null=True)
    interest_count = models.FloatField(blank=True, null=True)
    invoice_amt_b = models.FloatField(blank=True, null=True)
    invoice_entered_count = models.FloatField(blank=True, null=True)
    isp_count = models.FloatField(blank=True, null=True)
    mixed_count = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    other_integrated_count = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prepayment_count = models.FloatField(blank=True, null=True)
    prim_e_invoice_amt = models.FloatField(blank=True, null=True)
    prim_invoice_amt = models.FloatField(blank=True, null=True)
    sec_e_invoice_amt = models.FloatField(blank=True, null=True)
    sec_invoice_amt = models.FloatField(blank=True, null=True)
    standard_count = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    withholding_count = models.FloatField(blank=True, null=True)
    xml_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_ivaty_b_mv'


class MlogFiiApLiaBMv(models.Model):
    discount_lost_b = models.FloatField(blank=True, null=True)
    discount_offered_b = models.FloatField(blank=True, null=True)
    discount_remaining_b = models.FloatField(blank=True, null=True)
    discount_taken_b = models.FloatField(blank=True, null=True)
    due_bucket1_b = models.FloatField(blank=True, null=True)
    due_bucket1_count = models.FloatField(blank=True, null=True)
    due_bucket2_b = models.FloatField(blank=True, null=True)
    due_bucket2_count = models.FloatField(blank=True, null=True)
    due_bucket3_b = models.FloatField(blank=True, null=True)
    due_bucket3_count = models.FloatField(blank=True, null=True)
    due_count = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    past_due_amt_b = models.FloatField(blank=True, null=True)
    past_due_bucket1_b = models.FloatField(blank=True, null=True)
    past_due_bucket1_count = models.FloatField(blank=True, null=True)
    past_due_bucket2_b = models.FloatField(blank=True, null=True)
    past_due_bucket2_count = models.FloatField(blank=True, null=True)
    past_due_bucket3_b = models.FloatField(blank=True, null=True)
    past_due_bucket3_count = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    payment_amt_b = models.FloatField(blank=True, null=True)
    prim_discount_lost = models.FloatField(blank=True, null=True)
    prim_discount_offered = models.FloatField(blank=True, null=True)
    prim_discount_remaining = models.FloatField(blank=True, null=True)
    prim_discount_taken = models.FloatField(blank=True, null=True)
    prim_due_bucket1 = models.FloatField(blank=True, null=True)
    prim_due_bucket2 = models.FloatField(blank=True, null=True)
    prim_due_bucket3 = models.FloatField(blank=True, null=True)
    prim_late_payment_amt = models.FloatField(blank=True, null=True)
    prim_on_time_payment_amt = models.FloatField(blank=True, null=True)
    prim_past_due_amt = models.FloatField(blank=True, null=True)
    prim_past_due_bucket1 = models.FloatField(blank=True, null=True)
    prim_past_due_bucket2 = models.FloatField(blank=True, null=True)
    prim_past_due_bucket3 = models.FloatField(blank=True, null=True)
    prim_payment_amt = models.FloatField(blank=True, null=True)
    prim_unpaid_amt = models.FloatField(blank=True, null=True)
    sec_discount_lost = models.FloatField(blank=True, null=True)
    sec_discount_offered = models.FloatField(blank=True, null=True)
    sec_discount_remaining = models.FloatField(blank=True, null=True)
    sec_discount_taken = models.FloatField(blank=True, null=True)
    sec_due_bucket1 = models.FloatField(blank=True, null=True)
    sec_due_bucket2 = models.FloatField(blank=True, null=True)
    sec_due_bucket3 = models.FloatField(blank=True, null=True)
    sec_late_payment_amt = models.FloatField(blank=True, null=True)
    sec_on_time_payment_amt = models.FloatField(blank=True, null=True)
    sec_past_due_amt = models.FloatField(blank=True, null=True)
    sec_past_due_bucket1 = models.FloatField(blank=True, null=True)
    sec_past_due_bucket2 = models.FloatField(blank=True, null=True)
    sec_past_due_bucket3 = models.FloatField(blank=True, null=True)
    sec_payment_amt = models.FloatField(blank=True, null=True)
    sec_unpaid_amt = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    unpaid_amt_b = models.FloatField(blank=True, null=True)
    unpaid_count = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_lia_b_mv'


class MlogFiiApLiaIMv(models.Model):
    count_all = models.FloatField(blank=True, null=True)
    late_payment_amt_b = models.FloatField(blank=True, null=True)
    late_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    late_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_b = models.FloatField(blank=True, null=True)
    on_time_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    on_time_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    open_amt_b = models.FloatField(blank=True, null=True)
    open_amt_prim_g = models.FloatField(blank=True, null=True)
    open_amt_sec_g = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    open_discount_lost_b = models.FloatField(blank=True, null=True)
    open_discount_lost_prim_g = models.FloatField(blank=True, null=True)
    open_discount_lost_sec_g = models.FloatField(blank=True, null=True)
    open_discount_offered_b = models.FloatField(blank=True, null=True)
    open_discount_offered_prim_g = models.FloatField(blank=True, null=True)
    open_discount_offered_sec_g = models.FloatField(blank=True, null=True)
    open_discount_remaining_b = models.FloatField(blank=True, null=True)
    open_discount_remaining_prim_g = models.FloatField(blank=True, null=True)
    open_discount_remaining_sec_g = models.FloatField(blank=True, null=True)
    open_discount_taken_b = models.FloatField(blank=True, null=True)
    open_discount_taken_prim_g = models.FloatField(blank=True, null=True)
    open_discount_taken_sec_g = models.FloatField(blank=True, null=True)
    open_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_due_count = models.FloatField(blank=True, null=True)
    open_past_due_amt_b = models.FloatField(blank=True, null=True)
    open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_b = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_count = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket1_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_b = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_count = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket2_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_b = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_count = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_prim_g = models.FloatField(blank=True, null=True)
    open_past_due_bucket3_sec_g = models.FloatField(blank=True, null=True)
    open_past_due_count = models.FloatField(blank=True, null=True)
    open_payment_amt_b = models.FloatField(blank=True, null=True)
    open_payment_amt_prim_g = models.FloatField(blank=True, null=True)
    open_payment_amt_sec_g = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    wt_open_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_due_amt_sec_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_b = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_prim_g = models.FloatField(blank=True, null=True)
    wt_open_past_due_amt_sec_g = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ap_lia_i_mv'


class MlogFiiArBillingActB(models.Model):
    br_ba_amount_func = models.FloatField(blank=True, null=True)
    br_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_prim = models.FloatField(blank=True, null=True)
    br_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    br_ba_amount_sec = models.FloatField(blank=True, null=True)
    br_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    br_ba_count = models.FloatField(blank=True, null=True)
    br_ba_count_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_func = models.FloatField(blank=True, null=True)
    cb_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim = models.FloatField(blank=True, null=True)
    cb_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec = models.FloatField(blank=True, null=True)
    cb_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cb_ba_count = models.FloatField(blank=True, null=True)
    cb_ba_count_ct = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cm_ba_amount_func = models.FloatField(blank=True, null=True)
    cm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim = models.FloatField(blank=True, null=True)
    cm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec = models.FloatField(blank=True, null=True)
    cm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    cm_ba_count = models.FloatField(blank=True, null=True)
    cm_ba_count_ct = models.FloatField(blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    dep_ba_amount_func = models.FloatField(blank=True, null=True)
    dep_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim = models.FloatField(blank=True, null=True)
    dep_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec = models.FloatField(blank=True, null=True)
    dep_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dep_ba_count = models.FloatField(blank=True, null=True)
    dep_ba_count_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_func = models.FloatField(blank=True, null=True)
    dm_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim = models.FloatField(blank=True, null=True)
    dm_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec = models.FloatField(blank=True, null=True)
    dm_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    dm_ba_count = models.FloatField(blank=True, null=True)
    dm_ba_count_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_func = models.FloatField(blank=True, null=True)
    inv_ba_amount_func_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim = models.FloatField(blank=True, null=True)
    inv_ba_amount_prim_ct = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec = models.FloatField(blank=True, null=True)
    inv_ba_amount_sec_ct = models.FloatField(blank=True, null=True)
    inv_ba_count = models.FloatField(blank=True, null=True)
    inv_ba_count_ct = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_billing_act_b'


class MlogFiiArDimensionsMv(models.Model):
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    site_use_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_dimensions_mv'


class MlogFiiArDisputesBase(models.Model):
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    current_dispute_amount_func = models.FloatField(blank=True, null=True)
    current_dispute_amount_prim = models.FloatField(blank=True, null=True)
    current_dispute_amount_sec = models.FloatField(blank=True, null=True)
    current_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_dispute_count = models.FloatField(blank=True, null=True)
    current_dispute_count_ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_func = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_prim = models.FloatField(blank=True, null=True)
    past_due_dispute_amount_sec = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_dispute_count = models.FloatField(blank=True, null=True)
    past_due_dispute_count_ct = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_dispute_amount_func = models.FloatField(blank=True, null=True)
    total_dispute_amount_prim = models.FloatField(blank=True, null=True)
    total_dispute_amount_sec = models.FloatField(blank=True, null=True)
    total_dispute_amt_func_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_dispute_amt_sec_ct = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_disputes_base'


class MlogFiiArNetRecBase(models.Model):
    app_amount_func = models.FloatField(blank=True, null=True)
    app_amount_prim = models.FloatField(blank=True, null=True)
    app_amount_sec = models.FloatField(blank=True, null=True)
    app_amt_func_ct = models.FloatField(blank=True, null=True)
    app_amt_prim_ct = models.FloatField(blank=True, null=True)
    app_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_count = models.FloatField(blank=True, null=True)
    app_count_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_func = models.FloatField(blank=True, null=True)
    avg_dd_num_func_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_prim = models.FloatField(blank=True, null=True)
    avg_dd_num_prim_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_sec = models.FloatField(blank=True, null=True)
    avg_dd_num_sec_ct = models.FloatField(blank=True, null=True)
    billed_amount_func = models.FloatField(blank=True, null=True)
    billed_amount_prim = models.FloatField(blank=True, null=True)
    billed_amount_sec = models.FloatField(blank=True, null=True)
    billed_amt_func_ct = models.FloatField(blank=True, null=True)
    billed_amt_prim_ct = models.FloatField(blank=True, null=True)
    billed_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_amount_func = models.FloatField(blank=True, null=True)
    billing_activity_amount_prim = models.FloatField(blank=True, null=True)
    billing_activity_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_amt_func_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_prim_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_count = models.FloatField(blank=True, null=True)
    billing_activity_count_ct = models.FloatField(blank=True, null=True)
    br_amount_func = models.FloatField(blank=True, null=True)
    br_amount_prim = models.FloatField(blank=True, null=True)
    br_amount_sec = models.FloatField(blank=True, null=True)
    br_amt_func_ct = models.FloatField(blank=True, null=True)
    br_amt_prim_ct = models.FloatField(blank=True, null=True)
    br_amt_sec_ct = models.FloatField(blank=True, null=True)
    cb_amount_func = models.FloatField(blank=True, null=True)
    cb_amount_prim = models.FloatField(blank=True, null=True)
    cb_amount_sec = models.FloatField(blank=True, null=True)
    cb_amt_func_ct = models.FloatField(blank=True, null=True)
    cb_amt_prim_ct = models.FloatField(blank=True, null=True)
    cb_amt_sec_ct = models.FloatField(blank=True, null=True)
    claim_amount_func = models.FloatField(blank=True, null=True)
    claim_amount_prim = models.FloatField(blank=True, null=True)
    claim_amount_sec = models.FloatField(blank=True, null=True)
    claim_amt_func_ct = models.FloatField(blank=True, null=True)
    claim_amt_prim_ct = models.FloatField(blank=True, null=True)
    claim_amt_sec_ct = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_count = models.FloatField(blank=True, null=True)
    current_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_count = models.FloatField(blank=True, null=True)
    current_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_count = models.FloatField(blank=True, null=True)
    current_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    current_open_amount_func = models.FloatField(blank=True, null=True)
    current_open_amount_prim = models.FloatField(blank=True, null=True)
    current_open_amount_sec = models.FloatField(blank=True, null=True)
    current_open_amt_func_ct = models.FloatField(blank=True, null=True)
    current_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_open_count = models.FloatField(blank=True, null=True)
    current_open_count_ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    dep_amount_func = models.FloatField(blank=True, null=True)
    dep_amount_prim = models.FloatField(blank=True, null=True)
    dep_amount_sec = models.FloatField(blank=True, null=True)
    dep_amt_func_ct = models.FloatField(blank=True, null=True)
    dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    dm_amount_func = models.FloatField(blank=True, null=True)
    dm_amount_prim = models.FloatField(blank=True, null=True)
    dm_amount_sec = models.FloatField(blank=True, null=True)
    dm_amt_func_ct = models.FloatField(blank=True, null=True)
    dm_amt_prim_ct = models.FloatField(blank=True, null=True)
    dm_amt_sec_ct = models.FloatField(blank=True, null=True)
    earned_discount_amount_func = models.FloatField(blank=True, null=True)
    earned_discount_amount_prim = models.FloatField(blank=True, null=True)
    earned_discount_amount_sec = models.FloatField(blank=True, null=True)
    earned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    header_filter_date = models.DateField(blank=True, null=True)
    inv_amount_func = models.FloatField(blank=True, null=True)
    inv_amount_prim = models.FloatField(blank=True, null=True)
    inv_amount_sec = models.FloatField(blank=True, null=True)
    inv_amt_func_ct = models.FloatField(blank=True, null=True)
    inv_amt_prim_ct = models.FloatField(blank=True, null=True)
    inv_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amount_func = models.FloatField(blank=True, null=True)
    on_account_cash_amount_prim = models.FloatField(blank=True, null=True)
    on_account_cash_amount_sec = models.FloatField(blank=True, null=True)
    on_account_cash_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amount_func = models.FloatField(blank=True, null=True)
    on_account_credit_amount_prim = models.FloatField(blank=True, null=True)
    on_account_credit_amount_sec = models.FloatField(blank=True, null=True)
    on_account_credit_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_sec_ct = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count_ct = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    past_due_count_ct = models.FloatField(blank=True, null=True)
    past_due_open_amount_func = models.FloatField(blank=True, null=True)
    past_due_open_amount_prim = models.FloatField(blank=True, null=True)
    past_due_open_amount_sec = models.FloatField(blank=True, null=True)
    past_due_open_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prepayment_amount_func = models.FloatField(blank=True, null=True)
    prepayment_amount_prim = models.FloatField(blank=True, null=True)
    prepayment_amount_sec = models.FloatField(blank=True, null=True)
    prepayment_amt_func_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_prim_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_amount_func = models.FloatField(blank=True, null=True)
    rev_amount_prim = models.FloatField(blank=True, null=True)
    rev_amount_sec = models.FloatField(blank=True, null=True)
    rev_amt_func_ct = models.FloatField(blank=True, null=True)
    rev_amt_prim_ct = models.FloatField(blank=True, null=True)
    rev_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_count = models.FloatField(blank=True, null=True)
    rev_count_ct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_open_amount_func = models.FloatField(blank=True, null=True)
    total_open_amount_prim = models.FloatField(blank=True, null=True)
    total_open_amount_sec = models.FloatField(blank=True, null=True)
    total_open_amt_func_ct = models.FloatField(blank=True, null=True)
    total_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_open_count = models.FloatField(blank=True, null=True)
    total_open_count_ct = models.FloatField(blank=True, null=True)
    total_receipt_amount_func = models.FloatField(blank=True, null=True)
    total_receipt_amount_prim = models.FloatField(blank=True, null=True)
    total_receipt_amount_sec = models.FloatField(blank=True, null=True)
    total_receipt_amt_func_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_receipt_count = models.FloatField(blank=True, null=True)
    total_receipt_count_ct = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=10, blank=True, null=True)
    unapp_dep_amount_func = models.FloatField(blank=True, null=True)
    unapp_dep_amount_prim = models.FloatField(blank=True, null=True)
    unapp_dep_amount_sec = models.FloatField(blank=True, null=True)
    unapp_dep_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amount_func = models.FloatField(blank=True, null=True)
    unearned_discount_amount_prim = models.FloatField(blank=True, null=True)
    unearned_discount_amount_sec = models.FloatField(blank=True, null=True)
    unearned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_net_rec_base_'


class MlogFiiArNetRecIntr(models.Model):
    app_amount_func = models.FloatField(blank=True, null=True)
    app_amount_prim = models.FloatField(blank=True, null=True)
    app_amount_sec = models.FloatField(blank=True, null=True)
    app_amt_func_ct = models.FloatField(blank=True, null=True)
    app_amt_prim_ct = models.FloatField(blank=True, null=True)
    app_amt_sec_ct = models.FloatField(blank=True, null=True)
    app_count = models.FloatField(blank=True, null=True)
    app_count_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_func = models.FloatField(blank=True, null=True)
    avg_dd_num_func_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_prim = models.FloatField(blank=True, null=True)
    avg_dd_num_prim_ct = models.FloatField(blank=True, null=True)
    avg_dd_num_sec = models.FloatField(blank=True, null=True)
    avg_dd_num_sec_ct = models.FloatField(blank=True, null=True)
    billed_amount_func = models.FloatField(blank=True, null=True)
    billed_amount_prim = models.FloatField(blank=True, null=True)
    billed_amount_sec = models.FloatField(blank=True, null=True)
    billed_amt_func_ct = models.FloatField(blank=True, null=True)
    billed_amt_prim_ct = models.FloatField(blank=True, null=True)
    billed_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_amount_func = models.FloatField(blank=True, null=True)
    billing_activity_amount_prim = models.FloatField(blank=True, null=True)
    billing_activity_amount_sec = models.FloatField(blank=True, null=True)
    billing_activity_amt_func_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_prim_ct = models.FloatField(blank=True, null=True)
    billing_activity_amt_sec_ct = models.FloatField(blank=True, null=True)
    billing_activity_count = models.FloatField(blank=True, null=True)
    billing_activity_count_ct = models.FloatField(blank=True, null=True)
    br_amount_func = models.FloatField(blank=True, null=True)
    br_amount_prim = models.FloatField(blank=True, null=True)
    br_amount_sec = models.FloatField(blank=True, null=True)
    br_amt_func_ct = models.FloatField(blank=True, null=True)
    br_amt_prim_ct = models.FloatField(blank=True, null=True)
    br_amt_sec_ct = models.FloatField(blank=True, null=True)
    cb_amount_func = models.FloatField(blank=True, null=True)
    cb_amount_prim = models.FloatField(blank=True, null=True)
    cb_amount_sec = models.FloatField(blank=True, null=True)
    cb_amt_func_ct = models.FloatField(blank=True, null=True)
    cb_amt_prim_ct = models.FloatField(blank=True, null=True)
    cb_amt_sec_ct = models.FloatField(blank=True, null=True)
    claim_amount_func = models.FloatField(blank=True, null=True)
    claim_amount_prim = models.FloatField(blank=True, null=True)
    claim_amount_sec = models.FloatField(blank=True, null=True)
    claim_amt_func_ct = models.FloatField(blank=True, null=True)
    claim_amt_prim_ct = models.FloatField(blank=True, null=True)
    claim_amt_sec_ct = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_1_count = models.FloatField(blank=True, null=True)
    current_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_2_count = models.FloatField(blank=True, null=True)
    current_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    current_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_bucket_3_count = models.FloatField(blank=True, null=True)
    current_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    current_open_amount_func = models.FloatField(blank=True, null=True)
    current_open_amount_prim = models.FloatField(blank=True, null=True)
    current_open_amount_sec = models.FloatField(blank=True, null=True)
    current_open_amt_func_ct = models.FloatField(blank=True, null=True)
    current_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    current_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    current_open_count = models.FloatField(blank=True, null=True)
    current_open_count_ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    dep_amount_func = models.FloatField(blank=True, null=True)
    dep_amount_prim = models.FloatField(blank=True, null=True)
    dep_amount_sec = models.FloatField(blank=True, null=True)
    dep_amt_func_ct = models.FloatField(blank=True, null=True)
    dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    dm_amount_func = models.FloatField(blank=True, null=True)
    dm_amount_prim = models.FloatField(blank=True, null=True)
    dm_amount_sec = models.FloatField(blank=True, null=True)
    dm_amt_func_ct = models.FloatField(blank=True, null=True)
    dm_amt_prim_ct = models.FloatField(blank=True, null=True)
    dm_amt_sec_ct = models.FloatField(blank=True, null=True)
    earned_discount_amount_func = models.FloatField(blank=True, null=True)
    earned_discount_amount_prim = models.FloatField(blank=True, null=True)
    earned_discount_amount_sec = models.FloatField(blank=True, null=True)
    earned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    earned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    header_filter_date = models.DateField(blank=True, null=True)
    inv_amount_func = models.FloatField(blank=True, null=True)
    inv_amount_prim = models.FloatField(blank=True, null=True)
    inv_amount_sec = models.FloatField(blank=True, null=True)
    inv_amt_func_ct = models.FloatField(blank=True, null=True)
    inv_amt_prim_ct = models.FloatField(blank=True, null=True)
    inv_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amount_func = models.FloatField(blank=True, null=True)
    on_account_cash_amount_prim = models.FloatField(blank=True, null=True)
    on_account_cash_amount_sec = models.FloatField(blank=True, null=True)
    on_account_cash_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_cash_amt_sec_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amount_func = models.FloatField(blank=True, null=True)
    on_account_credit_amount_prim = models.FloatField(blank=True, null=True)
    on_account_credit_amount_sec = models.FloatField(blank=True, null=True)
    on_account_credit_amt_func_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_prim_ct = models.FloatField(blank=True, null=True)
    on_account_credit_amt_sec_ct = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count = models.FloatField(blank=True, null=True)
    past_due_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count = models.FloatField(blank=True, null=True)
    past_due_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count = models.FloatField(blank=True, null=True)
    past_due_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count = models.FloatField(blank=True, null=True)
    past_due_bucket_4_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count = models.FloatField(blank=True, null=True)
    past_due_bucket_5_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count = models.FloatField(blank=True, null=True)
    past_due_bucket_6_count_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_func = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_prim = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amount_sec = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_amt_sec_ct = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count = models.FloatField(blank=True, null=True)
    past_due_bucket_7_count_ct = models.FloatField(blank=True, null=True)
    past_due_count = models.FloatField(blank=True, null=True)
    past_due_count_ct = models.FloatField(blank=True, null=True)
    past_due_open_amount_func = models.FloatField(blank=True, null=True)
    past_due_open_amount_prim = models.FloatField(blank=True, null=True)
    past_due_open_amount_sec = models.FloatField(blank=True, null=True)
    past_due_open_amt_func_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    past_due_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prepayment_amount_func = models.FloatField(blank=True, null=True)
    prepayment_amount_prim = models.FloatField(blank=True, null=True)
    prepayment_amount_sec = models.FloatField(blank=True, null=True)
    prepayment_amt_func_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_prim_ct = models.FloatField(blank=True, null=True)
    prepayment_amt_sec_ct = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    rev_amount_func = models.FloatField(blank=True, null=True)
    rev_amount_prim = models.FloatField(blank=True, null=True)
    rev_amount_sec = models.FloatField(blank=True, null=True)
    rev_amt_func_ct = models.FloatField(blank=True, null=True)
    rev_amt_prim_ct = models.FloatField(blank=True, null=True)
    rev_amt_sec_ct = models.FloatField(blank=True, null=True)
    rev_count = models.FloatField(blank=True, null=True)
    rev_count_ct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_open_amount_func = models.FloatField(blank=True, null=True)
    total_open_amount_prim = models.FloatField(blank=True, null=True)
    total_open_amount_sec = models.FloatField(blank=True, null=True)
    total_open_amt_func_ct = models.FloatField(blank=True, null=True)
    total_open_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_open_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_open_count = models.FloatField(blank=True, null=True)
    total_open_count_ct = models.FloatField(blank=True, null=True)
    total_receipt_amount_func = models.FloatField(blank=True, null=True)
    total_receipt_amount_prim = models.FloatField(blank=True, null=True)
    total_receipt_amount_sec = models.FloatField(blank=True, null=True)
    total_receipt_amt_func_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_receipt_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_receipt_count = models.FloatField(blank=True, null=True)
    total_receipt_count_ct = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=10, blank=True, null=True)
    unapp_dep_amount_func = models.FloatField(blank=True, null=True)
    unapp_dep_amount_prim = models.FloatField(blank=True, null=True)
    unapp_dep_amount_sec = models.FloatField(blank=True, null=True)
    unapp_dep_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_dep_amt_sec_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amount_func = models.FloatField(blank=True, null=True)
    unearned_discount_amount_prim = models.FloatField(blank=True, null=True)
    unearned_discount_amount_sec = models.FloatField(blank=True, null=True)
    unearned_discount_amt_func_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_prim_ct = models.FloatField(blank=True, null=True)
    unearned_discount_amt_sec_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_days_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec = models.FloatField(blank=True, null=True)
    wtd_ddso_due_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_crt_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_current_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_out_open_num_sec_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_func_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_prim_ct = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec = models.FloatField(blank=True, null=True)
    wtd_terms_paid_num_sec_ct = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_net_rec_intr_'


class MlogFiiArRctAgingBas(models.Model):
    aging_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_count = models.FloatField(blank=True, null=True)
    aging_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_count = models.FloatField(blank=True, null=True)
    aging_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_count = models.FloatField(blank=True, null=True)
    aging_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_unapplied_amount_func = models.FloatField(blank=True, null=True)
    total_unapplied_amount_prim = models.FloatField(blank=True, null=True)
    total_unapplied_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_amt_func_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_count = models.FloatField(blank=True, null=True)
    total_unapplied_count_ct = models.FloatField(blank=True, null=True)
    unapp_amount_func = models.FloatField(blank=True, null=True)
    unapp_amount_prim = models.FloatField(blank=True, null=True)
    unapp_amount_sec = models.FloatField(blank=True, null=True)
    unapp_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_amt_sec_ct = models.FloatField(blank=True, null=True)
    unid_amount_func = models.FloatField(blank=True, null=True)
    unid_amount_prim = models.FloatField(blank=True, null=True)
    unid_amount_sec = models.FloatField(blank=True, null=True)
    unid_amt_func_ct = models.FloatField(blank=True, null=True)
    unid_amt_prim_ct = models.FloatField(blank=True, null=True)
    unid_amt_sec_ct = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_rct_aging_bas'


class MlogFiiArRctAgingInt(models.Model):
    aging_bucket_1_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_1_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_1_count = models.FloatField(blank=True, null=True)
    aging_bucket_1_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_2_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_2_count = models.FloatField(blank=True, null=True)
    aging_bucket_2_count_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_func = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_prim = models.FloatField(blank=True, null=True)
    aging_bucket_3_amount_sec = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_func_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_prim_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_amt_sec_ct = models.FloatField(blank=True, null=True)
    aging_bucket_3_count = models.FloatField(blank=True, null=True)
    aging_bucket_3_count_ct = models.FloatField(blank=True, null=True)
    class_category = models.CharField(max_length=30, blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    collector_id = models.FloatField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    cust_account_id = models.BigIntegerField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_week_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    gid = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    parent_party_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    total_unapplied_amount_func = models.FloatField(blank=True, null=True)
    total_unapplied_amount_prim = models.FloatField(blank=True, null=True)
    total_unapplied_amount_sec = models.FloatField(blank=True, null=True)
    total_unapplied_amt_func_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_prim_ct = models.FloatField(blank=True, null=True)
    total_unapplied_amt_sec_ct = models.FloatField(blank=True, null=True)
    total_unapplied_count = models.FloatField(blank=True, null=True)
    total_unapplied_count_ct = models.FloatField(blank=True, null=True)
    unapp_amount_func = models.FloatField(blank=True, null=True)
    unapp_amount_prim = models.FloatField(blank=True, null=True)
    unapp_amount_sec = models.FloatField(blank=True, null=True)
    unapp_amt_func_ct = models.FloatField(blank=True, null=True)
    unapp_amt_prim_ct = models.FloatField(blank=True, null=True)
    unapp_amt_sec_ct = models.FloatField(blank=True, null=True)
    unid_amount_func = models.FloatField(blank=True, null=True)
    unid_amount_prim = models.FloatField(blank=True, null=True)
    unid_amount_sec = models.FloatField(blank=True, null=True)
    unid_amt_func_ct = models.FloatField(blank=True, null=True)
    unid_amt_prim_ct = models.FloatField(blank=True, null=True)
    unid_amt_sec_ct = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_ar_rct_aging_int'


class MlogFiiGlBaseMap2Mv(models.Model):
    actual_b = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    fin_cat_type_code = models.CharField(max_length=30, blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_gl_base_map2_mv'


class MlogFiiGlBaseMapMv(models.Model):
    actual_b = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    baseline_amount_prim = models.FloatField(blank=True, null=True)
    baseline_amount_primct = models.FloatField(blank=True, null=True)
    budget_version_date = models.DateField(blank=True, null=True)
    committed_amount_prim = models.FloatField(blank=True, null=True)
    committed_amount_primct = models.FloatField(blank=True, null=True)
    company_dim_id = models.BigIntegerField(blank=True, null=True)
    cost_center_dim_id = models.BigIntegerField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    obligated_amount_prim = models.FloatField(blank=True, null=True)
    obligated_amount_primct = models.FloatField(blank=True, null=True)
    other_amount_prim = models.FloatField(blank=True, null=True)
    other_amount_primct = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    posted_date = models.DateField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    user_dim1_id = models.BigIntegerField(blank=True, null=True)
    user_dim2_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_gl_base_map_mv'


class MlogFiiGlBaseMv(models.Model):
    actual_b = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    cost_center_org_id = models.BigIntegerField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    functional_currency = models.CharField(max_length=15, blank=True, null=True)
    je_source = models.CharField(max_length=25, blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    line_of_business_id = models.BigIntegerField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    product_category_id = models.BigIntegerField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_gl_base_mv'


class MlogFiiGlMgmtCccMv(models.Model):
    actual_b = models.FloatField(blank=True, null=True)
    actual_bct = models.FloatField(blank=True, null=True)
    cost_center_org_id = models.BigIntegerField(blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    fin_category_id = models.BigIntegerField(blank=True, null=True)
    line_of_business_id = models.BigIntegerField(blank=True, null=True)
    manager_id = models.BigIntegerField(blank=True, null=True)
    parent_fin_category_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prim_actual_g = models.FloatField(blank=True, null=True)
    prim_actual_gct = models.FloatField(blank=True, null=True)
    prim_budget_g = models.FloatField(blank=True, null=True)
    prim_budget_gct = models.FloatField(blank=True, null=True)
    prim_forecast_g = models.FloatField(blank=True, null=True)
    prim_forecast_gct = models.FloatField(blank=True, null=True)
    sec_actual_g = models.FloatField(blank=True, null=True)
    sec_actual_gct = models.FloatField(blank=True, null=True)
    sec_budget_g = models.FloatField(blank=True, null=True)
    sec_budget_gct = models.FloatField(blank=True, null=True)
    sec_forecast_g = models.FloatField(blank=True, null=True)
    sec_forecast_gct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_fii_gl_mgmt_ccc_mv'


class MlogIbeBiCartOrdMv(models.Model):
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    con_ord = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    disc_amount_f = models.FloatField(blank=True, null=True)
    disc_amount_g = models.FloatField(blank=True, null=True)
    disc_amount_g1 = models.FloatField(blank=True, null=True)
    d_disc_lines_f = models.FloatField(blank=True, null=True)
    d_disc_lines_g = models.FloatField(blank=True, null=True)
    d_disc_lines_g1 = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_lines_f = models.FloatField(blank=True, null=True)
    d_lines_g = models.FloatField(blank=True, null=True)
    d_lines_g1 = models.FloatField(blank=True, null=True)
    d_list_lines_f = models.FloatField(blank=True, null=True)
    d_list_lines_g = models.FloatField(blank=True, null=True)
    d_list_lines_g1 = models.FloatField(blank=True, null=True)
    d_no_of_lines_cnt = models.FloatField(blank=True, null=True)
    d_total_number = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    list_amount_f = models.FloatField(blank=True, null=True)
    list_amount_g = models.FloatField(blank=True, null=True)
    list_amount_g1 = models.FloatField(blank=True, null=True)
    measure_type = models.CharField(max_length=18, blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    no_lines = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    tot_count = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=10, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_cart_ord_mv'


class MlogIbeBiCartsMv(models.Model):
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=15, blank=True, null=True)
    cust_party_id = models.FloatField(blank=True, null=True)
    d_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    mkt_amt_f = models.FloatField(blank=True, null=True)
    mkt_amt_g = models.FloatField(blank=True, null=True)
    mkt_amt_g1 = models.FloatField(blank=True, null=True)
    mkt_lines = models.FloatField(blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    quote_expiration_date = models.DateField(blank=True, null=True)
    quote_header_id = models.FloatField(blank=True, null=True)
    quote_lines = models.FloatField(blank=True, null=True)
    quote_number = models.FloatField(blank=True, null=True)
    quote_status_id = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_carts_mv'


class MlogIbeBiCatMv(models.Model):
    assist_flag = models.CharField(max_length=1, blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_date_id = models.DateField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    discount_amt_f = models.FloatField(blank=True, null=True)
    discount_amt_g = models.FloatField(blank=True, null=True)
    discount_amt_g1 = models.FloatField(blank=True, null=True)
    d_booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_discount_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    d_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_tot_cnt = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    leaf_node = models.CharField(max_length=1, blank=True, null=True)
    list_amt_f = models.FloatField(blank=True, null=True)
    list_amt_g = models.FloatField(blank=True, null=True)
    list_amt_g1 = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    parent_category_id = models.FloatField(blank=True, null=True)
    top_node_flag = models.CharField(max_length=1, blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_cat_mv'


class MlogIbeBiCustIntmMv(models.Model):
    booked_date = models.DateField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_cust_intm_mv'


class MlogIbeBiCustMv(models.Model):
    booked_date = models.DateField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_cust_mv'


class MlogIbeBiItemMv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_date_id = models.DateField(blank=True, null=True)
    booked_list_amt_f = models.FloatField(blank=True, null=True)
    booked_list_amt_g = models.FloatField(blank=True, null=True)
    booked_list_amt_g1 = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    discount_amt_f = models.FloatField(blank=True, null=True)
    discount_amt_g = models.FloatField(blank=True, null=True)
    discount_amt_g1 = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    no_orders = models.FloatField(blank=True, null=True)
    num_of_lines = models.FloatField(blank=True, null=True)
    num_of_ord_cart = models.FloatField(blank=True, null=True)
    order_header_id = models.FloatField(blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    umarker = models.CharField(max_length=6, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_item_mv'


class MlogIbeBiOrderbomMv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_date = models.DateField(blank=True, null=True)
    booked_list_amt_f = models.FloatField(blank=True, null=True)
    booked_list_amt_g = models.FloatField(blank=True, null=True)
    booked_list_amt_g1 = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    d_booked_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_booked_list_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_tot_cnt = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    marketing_source_code_id = models.FloatField(blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    no_lines = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_orderbom_mv'


class MlogIbeBiOrdersMv(models.Model):
    amount_f = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_g1 = models.FloatField(blank=True, null=True)
    booked_date = models.DateField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    disc_amount_f = models.FloatField(blank=True, null=True)
    disc_amount_g = models.FloatField(blank=True, null=True)
    disc_amount_g1 = models.FloatField(blank=True, null=True)
    d_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_disc_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_f_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_g1_cnt = models.FloatField(blank=True, null=True)
    d_list_amount_g_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_f_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g1_cnt = models.FloatField(blank=True, null=True)
    d_mkt_amt_g_cnt = models.FloatField(blank=True, null=True)
    d_mkt_lines_cnt = models.FloatField(blank=True, null=True)
    d_order_lines_cnt = models.FloatField(blank=True, null=True)
    d_total_cnt = models.FloatField(blank=True, null=True)
    header_id = models.FloatField(blank=True, null=True)
    list_amount_f = models.FloatField(blank=True, null=True)
    list_amount_g = models.FloatField(blank=True, null=True)
    list_amount_g1 = models.FloatField(blank=True, null=True)
    marketing_source_code_id = models.FloatField(blank=True, null=True)
    minisite_id = models.FloatField(blank=True, null=True)
    mkt_amt_f = models.FloatField(blank=True, null=True)
    mkt_amt_g = models.FloatField(blank=True, null=True)
    mkt_amt_g1 = models.FloatField(blank=True, null=True)
    mkt_lines = models.FloatField(blank=True, null=True)
    order_lines = models.FloatField(blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    published_quote_flag = models.CharField(max_length=1, blank=True, null=True)
    resource_flag = models.CharField(max_length=1, blank=True, null=True)
    time_booked_date_id = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibe_bi_orders_mv'


class MlogIbwCartBaseMv(models.Model):
    anonymous_carts = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    lead_rank = models.FloatField(blank=True, null=True)
    marketing_source_code_id_hdr = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    source_primary_reference = models.CharField(max_length=240, blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_cart_base_mv'


class MlogIbwCmpanalysisMv(models.Model):
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_cmpanalysis_mv'


class MlogIbwCmpanalysisSum(models.Model):
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_cmpanalysis_sum_'


class MlogIbwCmpanalysisTime(models.Model):
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    campaign_source_code_id = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    d_gid = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_cmpanalysis_time'


class MlogIbwPageProductMv(models.Model):
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    d_page_view_duration = models.FloatField(blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    order_visit_id = models.CharField(max_length=240, blank=True, null=True)
    page_id = models.BigIntegerField(blank=True, null=True)
    page_instance_id = models.BigIntegerField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    page_view_duration = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=480, blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.BigIntegerField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_page_product_mv'


class MlogIbwPageSaMv(models.Model):
    grouping_sets_id = models.FloatField(blank=True, null=True)
    page_instance_id = models.BigIntegerField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    page_view_duration = models.FloatField(blank=True, null=True)
    site_area_id = models.BigIntegerField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_page_sa_mv'


class MlogIbwProductMv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    cart_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    grouping_sets_id = models.FloatField(blank=True, null=True)
    leaf_categ_id = models.FloatField(blank=True, null=True)
    no_visits = models.FloatField(blank=True, null=True)
    orders_site_visits = models.CharField(max_length=281, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    qot_order_id = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_product_mv'


class MlogIbwProductSumMv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    cart_id = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    leaf_categ_id = models.FloatField(blank=True, null=True)
    no_visits = models.FloatField(blank=True, null=True)
    orders_site_visits = models.CharField(max_length=281, blank=True, null=True)
    order_id = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=81, blank=True, null=True)
    qot_order_id = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visitant_id = models.CharField(max_length=256, blank=True, null=True)
    visit_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_product_sum_mv'


class MlogIbwRefanalysisMv(models.Model):
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    source_primary_reference = models.CharField(max_length=240, blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_refanalysis_mv'


class MlogIbwRefanalysisSum(models.Model):
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_refanalysis_sum_'


class MlogIbwSiteVisitMv(models.Model):
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    referral_category_id = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    web_registrations_ref = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_site_visit_mv'


class MlogIbwVisitCustMv(models.Model):
    anonymous_carts = models.FloatField(blank=True, null=True)
    assisted_web_orders = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    new_web_customers_all = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    total_booked_amt_f = models.FloatField(blank=True, null=True)
    total_booked_amt_g = models.FloatField(blank=True, null=True)
    total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_visit_cust_mv'


class MlogIbwVisitCustSumM(models.Model):
    anonymous_carts = models.FloatField(blank=True, null=True)
    assisted_web_orders = models.FloatField(blank=True, null=True)
    a_leads = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_web_orders = models.FloatField(blank=True, null=True)
    carts = models.FloatField(blank=True, null=True)
    currency_cd_f = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    daily_uniq_visitors = models.FloatField(blank=True, null=True)
    new_web_customers = models.FloatField(blank=True, null=True)
    new_web_customers_all = models.FloatField(blank=True, null=True)
    opt_outs = models.FloatField(blank=True, null=True)
    orders = models.FloatField(blank=True, null=True)
    orders_site_visits = models.FloatField(blank=True, null=True)
    page_views = models.FloatField(blank=True, null=True)
    repeat_visits = models.FloatField(blank=True, null=True)
    repeat_web_orders = models.FloatField(blank=True, null=True)
    site_id = models.FloatField(blank=True, null=True)
    total_booked_amt_f = models.FloatField(blank=True, null=True)
    total_booked_amt_g = models.FloatField(blank=True, null=True)
    total_booked_amt_g1 = models.FloatField(blank=True, null=True)
    total_booked_orders = models.FloatField(blank=True, null=True)
    total_invoice_inquiries = models.FloatField(blank=True, null=True)
    total_order_inquiries = models.FloatField(blank=True, null=True)
    total_payment_inquiries = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    visits = models.FloatField(blank=True, null=True)
    visit_duration = models.FloatField(blank=True, null=True)
    web_registrations = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_visit_cust_sum_m'


class MlogIbwVstCmpDlyuniqv(models.Model):
    campaign_source_code_id = models.BigIntegerField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    party_visitor_id = models.CharField(max_length=256, blank=True, null=True)
    site_id = models.BigIntegerField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_ibw_vst_cmp_dlyuniqv'


class MlogIscDbiCfm000Mv(models.Model):
    booked_amt2_f = models.FloatField(blank=True, null=True)
    booked_amt2_g = models.FloatField(blank=True, null=True)
    booked_amt2_g1 = models.FloatField(blank=True, null=True)
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_line_cnt = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    booked_qty2 = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    requested_days = models.FloatField(blank=True, null=True)
    scheduled_days = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_000_mv'


class MlogIscDbiCfm002Mv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    book_to_fulfill_cnt = models.FloatField(blank=True, null=True)
    book_to_fulfill_days = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    fulfilled_amt2_f = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g = models.FloatField(blank=True, null=True)
    fulfilled_amt2_g1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_002_mv'


class MlogIscDbiCfm003Mv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=25, blank=True, null=True)
    master_item_id = models.CharField(max_length=25, blank=True, null=True)
    returned_amt_f = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_qty = models.FloatField(blank=True, null=True)
    return_reason = models.CharField(max_length=80, blank=True, null=True)
    time_fulfilled_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_003_mv'


class MlogIscDbiCfm004Mv(models.Model):
    booked_amt_f = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_004_mv'


class MlogIscDbiCfm005Mv(models.Model):
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_qty = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_f = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    internal_flag = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    return_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=5, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_005_mv'


class MlogIscDbiCfm008Mv(models.Model):
    bucket10_days_late = models.FloatField(blank=True, null=True)
    bucket10_days_late_p = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket10_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket10_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket10_qty = models.FloatField(blank=True, null=True)
    bucket10_qty_p = models.FloatField(blank=True, null=True)
    bucket1_days_late = models.FloatField(blank=True, null=True)
    bucket1_days_late_p = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket1_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket1_qty = models.FloatField(blank=True, null=True)
    bucket1_qty_p = models.FloatField(blank=True, null=True)
    bucket2_days_late = models.FloatField(blank=True, null=True)
    bucket2_days_late_p = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket2_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket2_qty = models.FloatField(blank=True, null=True)
    bucket2_qty_p = models.FloatField(blank=True, null=True)
    bucket3_days_late = models.FloatField(blank=True, null=True)
    bucket3_days_late_p = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket3_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket3_qty = models.FloatField(blank=True, null=True)
    bucket3_qty_p = models.FloatField(blank=True, null=True)
    bucket4_days_late = models.FloatField(blank=True, null=True)
    bucket4_days_late_p = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket4_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket4_qty = models.FloatField(blank=True, null=True)
    bucket4_qty_p = models.FloatField(blank=True, null=True)
    bucket5_days_late = models.FloatField(blank=True, null=True)
    bucket5_days_late_p = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket5_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket5_qty = models.FloatField(blank=True, null=True)
    bucket5_qty_p = models.FloatField(blank=True, null=True)
    bucket6_days_late = models.FloatField(blank=True, null=True)
    bucket6_days_late_p = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket6_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket6_qty = models.FloatField(blank=True, null=True)
    bucket6_qty_p = models.FloatField(blank=True, null=True)
    bucket7_days_late = models.FloatField(blank=True, null=True)
    bucket7_days_late_p = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket7_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket7_qty = models.FloatField(blank=True, null=True)
    bucket7_qty_p = models.FloatField(blank=True, null=True)
    bucket8_days_late = models.FloatField(blank=True, null=True)
    bucket8_days_late_p = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket8_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket8_qty = models.FloatField(blank=True, null=True)
    bucket8_qty_p = models.FloatField(blank=True, null=True)
    bucket9_days_late = models.FloatField(blank=True, null=True)
    bucket9_days_late_p = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_f_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1 = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g1_p = models.FloatField(blank=True, null=True)
    bucket9_pdue_amt_g_p = models.FloatField(blank=True, null=True)
    bucket9_qty = models.FloatField(blank=True, null=True)
    bucket9_qty_p = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_008_mv'


class MlogIscDbiCfm010Mv(models.Model):
    bklg_amt_f = models.FloatField(blank=True, null=True)
    bklg_amt_g = models.FloatField(blank=True, null=True)
    bklg_amt_g1 = models.FloatField(blank=True, null=True)
    bklog_qty = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_010_mv'


class MlogIscDbiCfm013Mv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    late_promise_flag = models.FloatField(blank=True, null=True)
    late_schedule_flag = models.FloatField(blank=True, null=True)
    pdue_amt_f = models.FloatField(blank=True, null=True)
    pdue_amt_g = models.FloatField(blank=True, null=True)
    pdue_amt_g1 = models.FloatField(blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cfm_013_mv'


class MlogIscDbiCpm000Mv(models.Model):
    activated_g = models.FloatField(blank=True, null=True)
    activated_g1 = models.FloatField(blank=True, null=True)
    activated_new_g = models.FloatField(blank=True, null=True)
    activated_new_g1 = models.FloatField(blank=True, null=True)
    activated_renew_g = models.FloatField(blank=True, null=True)
    activated_renew_g1 = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    expired_g = models.FloatField(blank=True, null=True)
    expired_g1 = models.FloatField(blank=True, null=True)
    expired_new_g = models.FloatField(blank=True, null=True)
    expired_new_g1 = models.FloatField(blank=True, null=True)
    expired_renew_g = models.FloatField(blank=True, null=True)
    expired_renew_g1 = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cpm_000_mv'


class MlogIscDbiCpm001Mv(models.Model):
    active_g = models.FloatField(blank=True, null=True)
    active_g1 = models.FloatField(blank=True, null=True)
    active_new_g = models.FloatField(blank=True, null=True)
    active_new_g1 = models.FloatField(blank=True, null=True)
    active_renew_g = models.FloatField(blank=True, null=True)
    active_renew_g1 = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cpm_001_mv'


class MlogIscDbiCpm002Mv(models.Model):
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_cpm_002_mv'


class MlogIscDbiFm0000Mv(models.Model):
    agg_level = models.FloatField(blank=True, null=True)
    book_to_ship_days = models.FloatField(blank=True, null=True)
    book_to_ship_days_late = models.FloatField(blank=True, null=True)
    book_to_ship_days_late_p = models.FloatField(blank=True, null=True)
    bucket10_line_cnt = models.FloatField(blank=True, null=True)
    bucket1_line_cnt = models.FloatField(blank=True, null=True)
    bucket2_line_cnt = models.FloatField(blank=True, null=True)
    bucket3_line_cnt = models.FloatField(blank=True, null=True)
    bucket4_line_cnt = models.FloatField(blank=True, null=True)
    bucket5_line_cnt = models.FloatField(blank=True, null=True)
    bucket6_line_cnt = models.FloatField(blank=True, null=True)
    bucket7_line_cnt = models.FloatField(blank=True, null=True)
    bucket8_line_cnt = models.FloatField(blank=True, null=True)
    bucket9_line_cnt = models.FloatField(blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_promise = models.FloatField(blank=True, null=True)
    early_line_cnt = models.FloatField(blank=True, null=True)
    freight_charge_amt_f = models.FloatField(blank=True, null=True)
    freight_charge_amt_g = models.FloatField(blank=True, null=True)
    freight_charge_amt_g1 = models.FloatField(blank=True, null=True)
    freight_cost_amt_f = models.FloatField(blank=True, null=True)
    freight_cost_amt_g = models.FloatField(blank=True, null=True)
    freight_cost_amt_g1 = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    late_line_cnt = models.FloatField(blank=True, null=True)
    late_line_promise_cnt = models.FloatField(blank=True, null=True)
    on_time_line_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    prod_category_id = models.FloatField(blank=True, null=True)
    shipped_late_p_qty = models.FloatField(blank=True, null=True)
    shipped_late_qty = models.FloatField(blank=True, null=True)
    shipped_line_cnt = models.FloatField(blank=True, null=True)
    shipped_qty = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_fm_0000_mv'


class MlogIscDbiFm0008Mv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.CharField(max_length=81, blank=True, null=True)
    pdue_line_cnt = models.FloatField(blank=True, null=True)
    pdue_qty = models.FloatField(blank=True, null=True)
    time_snapshot_date_id = models.DateField(blank=True, null=True)
    uom = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_fm_0008_mv'


class MlogIscDbiPm0001Mv(models.Model):
    item_cat_flag = models.FloatField(blank=True, null=True)
    mds_cost = models.FloatField(blank=True, null=True)
    mds_cost_g = models.FloatField(blank=True, null=True)
    mds_cost_g1 = models.FloatField(blank=True, null=True)
    mds_price = models.FloatField(blank=True, null=True)
    mds_price_g = models.FloatField(blank=True, null=True)
    mds_price_g1 = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    snapshot_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    union1_flag = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_pm_0001_mv'


class MlogIscDbiScr000Mv(models.Model):
    amount_b = models.FloatField(blank=True, null=True)
    amount_bct = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    booked_rev_prim_pe = models.FloatField(blank=True, null=True)
    booked_rev_prim_pect = models.FloatField(blank=True, null=True)
    booked_rev_prim_qr = models.FloatField(blank=True, null=True)
    booked_rev_prim_qrct = models.FloatField(blank=True, null=True)
    booked_rev_prim_wk = models.FloatField(blank=True, null=True)
    booked_rev_prim_wkct = models.FloatField(blank=True, null=True)
    booked_rev_prim_yr = models.FloatField(blank=True, null=True)
    booked_rev_prim_yrct = models.FloatField(blank=True, null=True)
    booked_rev_sec_pe = models.FloatField(blank=True, null=True)
    booked_rev_sec_pect = models.FloatField(blank=True, null=True)
    booked_rev_sec_qr = models.FloatField(blank=True, null=True)
    booked_rev_sec_qrct = models.FloatField(blank=True, null=True)
    booked_rev_sec_wk = models.FloatField(blank=True, null=True)
    booked_rev_sec_wkct = models.FloatField(blank=True, null=True)
    booked_rev_sec_yr = models.FloatField(blank=True, null=True)
    booked_rev_sec_yrct = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    ct = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    data_marker = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    master_oragnization_id = models.CharField(max_length=25, blank=True, null=True)
    net_booked_amt2_g = models.FloatField(blank=True, null=True)
    net_booked_amt2_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt2_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt2_g_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g = models.FloatField(blank=True, null=True)
    net_booked_amt_g1 = models.FloatField(blank=True, null=True)
    net_booked_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_booked_amt_g_cnt = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g1 = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g1_cnt = models.FloatField(blank=True, null=True)
    net_fulfilled_amt_g_cnt = models.FloatField(blank=True, null=True)
    prim_deferred_amt_g = models.FloatField(blank=True, null=True)
    prim_deferred_amt_gct = models.FloatField(blank=True, null=True)
    prim_recognized_amt_g = models.FloatField(blank=True, null=True)
    prim_recognized_amt_gct = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    returned_amt_g1_cnt = models.FloatField(blank=True, null=True)
    returned_amt_g_cnt = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    sec_deferred_amt_g = models.FloatField(blank=True, null=True)
    sec_deferred_amt_gct = models.FloatField(blank=True, null=True)
    sec_recognized_amt_g = models.FloatField(blank=True, null=True)
    sec_recognized_amt_gct = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_scr_000_mv'


class MlogIscDbiScr001Mv(models.Model):
    backlog_amt_g = models.FloatField(blank=True, null=True)
    backlog_amt_g1 = models.FloatField(blank=True, null=True)
    booked_amt_g = models.FloatField(blank=True, null=True)
    booked_amt_g1 = models.FloatField(blank=True, null=True)
    booked_rev_pe_g = models.FloatField(blank=True, null=True)
    booked_rev_pe_g1 = models.FloatField(blank=True, null=True)
    booked_rev_qr_g = models.FloatField(blank=True, null=True)
    booked_rev_qr_g1 = models.FloatField(blank=True, null=True)
    booked_rev_wk_g = models.FloatField(blank=True, null=True)
    booked_rev_wk_g1 = models.FloatField(blank=True, null=True)
    booked_rev_yr_g = models.FloatField(blank=True, null=True)
    booked_rev_yr_g1 = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    customer_flag = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    deferred_amt_g = models.FloatField(blank=True, null=True)
    deferred_amt_g1 = models.FloatField(blank=True, null=True)
    grp_marker = models.CharField(max_length=9, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    net_booked_amt_g = models.FloatField(blank=True, null=True)
    net_booked_amt_g1 = models.FloatField(blank=True, null=True)
    parent_grp_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    recognized_amt_g = models.FloatField(blank=True, null=True)
    recognized_amt_g1 = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    returned_amt_g = models.FloatField(blank=True, null=True)
    returned_amt_g1 = models.FloatField(blank=True, null=True)
    sales_grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dbi_scr_001_mv'


class MlogIscDrBklg01Mv(models.Model):
    aggregation_flag = models.FloatField(blank=True, null=True)
    close_count = models.FloatField(blank=True, null=True)
    complete_with_promise_date_cnt = models.FloatField(blank=True, null=True)
    count_days_late_mv = models.FloatField(blank=True, null=True)
    count_mv = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    days_late = models.FloatField(blank=True, null=True)
    days_late_age_b1 = models.FloatField(blank=True, null=True)
    days_late_age_b10 = models.FloatField(blank=True, null=True)
    days_late_age_b2 = models.FloatField(blank=True, null=True)
    days_late_age_b3 = models.FloatField(blank=True, null=True)
    days_late_age_b4 = models.FloatField(blank=True, null=True)
    days_late_age_b5 = models.FloatField(blank=True, null=True)
    days_late_age_b6 = models.FloatField(blank=True, null=True)
    days_late_age_b7 = models.FloatField(blank=True, null=True)
    days_late_age_b8 = models.FloatField(blank=True, null=True)
    days_late_age_b9 = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    grp_id_mv = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    late_complete_count = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    open_count = models.FloatField(blank=True, null=True)
    past_due_open_count = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dr_bklg_01_mv'


class MlogIscDrCharges01Mv(models.Model):
    aggregation_flag = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    expense_charges_g = models.FloatField(blank=True, null=True)
    expense_charges_sg = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    labor_charges_g = models.FloatField(blank=True, null=True)
    labor_charges_sg = models.FloatField(blank=True, null=True)
    material_charges_g = models.FloatField(blank=True, null=True)
    material_charges_sg = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dr_charges_01_mv'


class MlogIscDrCosts01Mv(models.Model):
    aggregation_flag = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    expense_cost_g = models.FloatField(blank=True, null=True)
    expense_cost_sg = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    labor_cost_g = models.FloatField(blank=True, null=True)
    labor_cost_sg = models.FloatField(blank=True, null=True)
    material_cost_g = models.FloatField(blank=True, null=True)
    material_cost_sg = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dr_costs_01_mv'


class MlogIscDrMttr01Mv(models.Model):
    aggregation_flag = models.FloatField(blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_category_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    repair_organization_id = models.BigIntegerField(blank=True, null=True)
    repair_type_id = models.BigIntegerField(blank=True, null=True)
    ro_count = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    time_to_repair = models.FloatField(blank=True, null=True)
    time_to_repair_b1 = models.FloatField(blank=True, null=True)
    time_to_repair_b10 = models.FloatField(blank=True, null=True)
    time_to_repair_b2 = models.FloatField(blank=True, null=True)
    time_to_repair_b3 = models.FloatField(blank=True, null=True)
    time_to_repair_b4 = models.FloatField(blank=True, null=True)
    time_to_repair_b5 = models.FloatField(blank=True, null=True)
    time_to_repair_b6 = models.FloatField(blank=True, null=True)
    time_to_repair_b7 = models.FloatField(blank=True, null=True)
    time_to_repair_b8 = models.FloatField(blank=True, null=True)
    time_to_repair_b9 = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_dr_mttr_01_mv'


class MlogIscFs001Mv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_001_mv'


class MlogIscFs002Mv(models.Model):
    immediate_parent_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_prg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_002_mv'


class MlogIscFs003Mv(models.Model):
    closed = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    first_opened = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    reopened = models.FloatField(blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_003_mv'


class MlogIscFs005Mv(models.Model):
    assigned_count = models.FloatField(blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    completed_count = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    in_planning_count = models.FloatField(blank=True, null=True)
    other_count = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    working_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_005_mv'


class MlogIscFs007Mv(models.Model):
    backlog_age_b1 = models.FloatField(blank=True, null=True)
    backlog_age_b10 = models.FloatField(blank=True, null=True)
    backlog_age_b2 = models.FloatField(blank=True, null=True)
    backlog_age_b3 = models.FloatField(blank=True, null=True)
    backlog_age_b4 = models.FloatField(blank=True, null=True)
    backlog_age_b5 = models.FloatField(blank=True, null=True)
    backlog_age_b6 = models.FloatField(blank=True, null=True)
    backlog_age_b7 = models.FloatField(blank=True, null=True)
    backlog_age_b8 = models.FloatField(blank=True, null=True)
    backlog_age_b9 = models.FloatField(blank=True, null=True)
    backlog_count = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    report_date = models.DateField(blank=True, null=True)
    task_type_id = models.FloatField(blank=True, null=True)
    total_backlog_age = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_007_mv'


class MlogIscFs009Mv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    resolved_count = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    time_to_resolve_b1 = models.FloatField(blank=True, null=True)
    time_to_resolve_b10 = models.FloatField(blank=True, null=True)
    time_to_resolve_b2 = models.FloatField(blank=True, null=True)
    time_to_resolve_b3 = models.FloatField(blank=True, null=True)
    time_to_resolve_b4 = models.FloatField(blank=True, null=True)
    time_to_resolve_b5 = models.FloatField(blank=True, null=True)
    time_to_resolve_b6 = models.FloatField(blank=True, null=True)
    time_to_resolve_b7 = models.FloatField(blank=True, null=True)
    time_to_resolve_b8 = models.FloatField(blank=True, null=True)
    time_to_resolve_b9 = models.FloatField(blank=True, null=True)
    total_time_to_resolve = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_009_mv'


class MlogIscFs011Mv(models.Model):
    customer_id = models.FloatField(blank=True, null=True)
    district_id = models.FloatField(blank=True, null=True)
    district_id_c = models.CharField(max_length=81, blank=True, null=True)
    ftf_count = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    incident_severity_id = models.FloatField(blank=True, null=True)
    non_ftf_count = models.FloatField(blank=True, null=True)
    parent_district_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    product_id = models.CharField(max_length=25, blank=True, null=True)
    record_type = models.CharField(max_length=8, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    vbh_category_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_isc_fs_011_mv'


class MlogMthEquipOpSumDd(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    completed_qty = models.FloatField(blank=True, null=True)
    completed_qty_count = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty_count = models.FloatField(blank=True, null=True)
    loss_bad_quality = models.FloatField(blank=True, null=True)
    loss_bad_quality_count = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val_count = models.FloatField(blank=True, null=True)
    output_qty = models.FloatField(blank=True, null=True)
    output_qty_count = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    qty_good = models.FloatField(blank=True, null=True)
    qty_good_count = models.FloatField(blank=True, null=True)
    qty_rework = models.FloatField(blank=True, null=True)
    qty_rework_count = models.FloatField(blank=True, null=True)
    qty_scrap = models.FloatField(blank=True, null=True)
    qty_scrap_count = models.FloatField(blank=True, null=True)
    rejected_qty = models.FloatField(blank=True, null=True)
    rejected_qty_count = models.FloatField(blank=True, null=True)
    shift_act_prod = models.FloatField(blank=True, null=True)
    shift_act_prod_count = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_equip_op_sum_dd_'


class MlogMthEquipProdSchD(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    hrs_sch_qty = models.FloatField(blank=True, null=True)
    hrs_sch_qty_count = models.FloatField(blank=True, null=True)
    planned_qty_g = models.FloatField(blank=True, null=True)
    planned_qty_g_count = models.FloatField(blank=True, null=True)
    planned_qty_sg = models.FloatField(blank=True, null=True)
    planned_qty_sg_count = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    shift_sch_prod = models.FloatField(blank=True, null=True)
    shift_sch_prod_count = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_equip_prod_sch_d'


class MlogMthEquipShftDdMv(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    equip_cal_time = models.FloatField(blank=True, null=True)
    equip_cal_time_count = models.FloatField(blank=True, null=True)
    equip_cal_time_val = models.FloatField(blank=True, null=True)
    equip_cal_time_val_count = models.FloatField(blank=True, null=True)
    equip_sch_time = models.FloatField(blank=True, null=True)
    equip_sch_time_count = models.FloatField(blank=True, null=True)
    equip_sch_time_val = models.FloatField(blank=True, null=True)
    equip_sch_time_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_equip_shft_dd_mv'


class MlogMthEquipStSumDd(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    down_hours = models.FloatField(blank=True, null=True)
    down_hours_count = models.FloatField(blank=True, null=True)
    down_hours_val = models.FloatField(blank=True, null=True)
    down_hours_val_count = models.FloatField(blank=True, null=True)
    idle_hours = models.FloatField(blank=True, null=True)
    idle_hours_count = models.FloatField(blank=True, null=True)
    loss_ineff = models.FloatField(blank=True, null=True)
    loss_ineff_count = models.FloatField(blank=True, null=True)
    mac_eff_count = models.FloatField(blank=True, null=True)
    mac_eff_sum = models.FloatField(blank=True, null=True)
    run_hours = models.FloatField(blank=True, null=True)
    run_hours_count = models.FloatField(blank=True, null=True)
    run_hours_val = models.FloatField(blank=True, null=True)
    run_hours_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    up_hours = models.FloatField(blank=True, null=True)
    up_hours_count = models.FloatField(blank=True, null=True)
    wo_item_count = models.FloatField(blank=True, null=True)
    wo_item_sum = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_equip_st_sum_dd_'


class MlogMthMtlConsItMv(models.Model):
    actual_usage_qty_g = models.FloatField(blank=True, null=True)
    actual_usage_qty_g_count = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_usage_val = models.FloatField(blank=True, null=True)
    actual_usage_val_count = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    item_level9_key = models.FloatField(blank=True, null=True)
    planned_usage_qty_g = models.FloatField(blank=True, null=True)
    planned_usage_qty_g_count = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    product_fk_key = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_g = models.FloatField(blank=True, null=True)
    unit_standard_qty_g_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_mtl_cons_it_mv'


class MlogMthMtlProdItMv(models.Model):
    actual_comp_qty_g = models.FloatField(blank=True, null=True)
    actual_comp_qty_g_count = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg_count = models.FloatField(blank=True, null=True)
    batch_cycle_time_count = models.FloatField(blank=True, null=True)
    batch_cycle_time_sum = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    expected_yield = models.FloatField(blank=True, null=True)
    expected_yield_count = models.FloatField(blank=True, null=True)
    first_time_qty = models.FloatField(blank=True, null=True)
    first_time_qty_count = models.FloatField(blank=True, null=True)
    item_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    start_quantity_g = models.FloatField(blank=True, null=True)
    start_quantity_g_count = models.FloatField(blank=True, null=True)
    start_quantity_sg = models.FloatField(blank=True, null=True)
    start_quantity_sg_count = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_mtl_prod_it_mv'


class MlogMthResReqItMv(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    planned_usage_qty = models.FloatField(blank=True, null=True)
    planned_usage_qty_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    product_fk_key = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_res_req_it_mv'


class MlogMthResTxnItMv(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    product_fk_key = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    usage_qty = models.FloatField(blank=True, null=True)
    usage_qty_count = models.FloatField(blank=True, null=True)
    usage_val = models.FloatField(blank=True, null=True)
    usage_val_count = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_res_txn_it_mv'


class MlogMthShiftGregorian(models.Model):
    calendar_month_id = models.FloatField(blank=True, null=True)
    calendar_month_start_date = models.DateField(blank=True, null=True)
    calendar_quarter_id = models.FloatField(blank=True, null=True)
    calendar_quarter_start_date = models.DateField(blank=True, null=True)
    calendar_year_id = models.FloatField(blank=True, null=True)
    calendar_year_start_date = models.DateField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    from_date = models.DateField(blank=True, null=True)
    plant_fk_key = models.FloatField(blank=True, null=True)
    rowid_gc = models.TextField(blank=True, null=True)  # This field type is a guess.
    rowid_ws = models.TextField(blank=True, null=True)  # This field type is a guess.
    shift_date = models.DateField(blank=True, null=True)
    shift_workday_pk_key = models.FloatField(blank=True, null=True)
    system_fk_key = models.FloatField(blank=True, null=True)
    to_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_mth_shift_gregorian_'


class MlogOkiBiGrpCntMv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_oki_bi_grp_cnt_mv'


class MlogOkiRsGroupMv(models.Model):
    immediate_parent_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_prg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_oki_rs_group_mv'


class MlogOkiSrm001Mv(models.Model):
    authoring_org_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cle_creation_date = models.DateField(blank=True, null=True)
    customer_party_id = models.FloatField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    effective_expire_date = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_term_date = models.DateField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    exp_renewal_flag = models.FloatField(blank=True, null=True)
    price_negotiated_a = models.FloatField(blank=True, null=True)
    price_negotiated_f = models.FloatField(blank=True, null=True)
    price_negotiated_g = models.FloatField(blank=True, null=True)
    price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_grace_end_date = models.DateField(blank=True, null=True)
    p_price_negotiated_a = models.FloatField(blank=True, null=True)
    p_price_negotiated_f = models.FloatField(blank=True, null=True)
    p_price_negotiated_g = models.FloatField(blank=True, null=True)
    p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_term_flag = models.FloatField(blank=True, null=True)
    renewal_flag = models.FloatField(blank=True, null=True)
    resource_group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_billed_value_a = models.FloatField(blank=True, null=True)
    trn_billed_value_f = models.FloatField(blank=True, null=True)
    trn_billed_value_g = models.FloatField(blank=True, null=True)
    trn_billed_value_sg = models.FloatField(blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_oki_srm_001_mv'


class MlogOkiSrm002Mv(models.Model):
    authoring_org_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cle_creation_date = models.DateField(blank=True, null=True)
    customer_party_id = models.FloatField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    effective_expire_date = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_term_date = models.DateField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    exp_renewal_flag = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    price_negotiated_a = models.FloatField(blank=True, null=True)
    price_negotiated_f = models.FloatField(blank=True, null=True)
    price_negotiated_g = models.FloatField(blank=True, null=True)
    price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_grace_end_date = models.DateField(blank=True, null=True)
    p_price_negotiated_a = models.FloatField(blank=True, null=True)
    p_price_negotiated_f = models.FloatField(blank=True, null=True)
    p_price_negotiated_g = models.FloatField(blank=True, null=True)
    p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_term_flag = models.FloatField(blank=True, null=True)
    renewal_flag = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_billed_value_a = models.FloatField(blank=True, null=True)
    trn_billed_value_f = models.FloatField(blank=True, null=True)
    trn_billed_value_g = models.FloatField(blank=True, null=True)
    trn_billed_value_sg = models.FloatField(blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_oki_srm_002_mv'


class MlogOkiTimeEntYearMv(models.Model):
    end_date = models.DateField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_oki_time_ent_year_mv'


class MlogOpiCompScrMv(models.Model):
    completion_quantity = models.FloatField(blank=True, null=True)
    completion_value_b = models.FloatField(blank=True, null=True)
    completion_value_g = models.FloatField(blank=True, null=True)
    completion_value_sg = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    job_type = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    scrap_quantity = models.FloatField(blank=True, null=True)
    scrap_value_b = models.FloatField(blank=True, null=True)
    scrap_value_g = models.FloatField(blank=True, null=True)
    scrap_value_sg = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_comp_scr_mv'


class MlogOpiInvValSumMv(models.Model):
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    intransit_value_b = models.FloatField(blank=True, null=True)
    intransit_value_g = models.FloatField(blank=True, null=True)
    intransit_value_sg = models.FloatField(blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    inv_total_value_b = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    inv_total_value_sg = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    onhand_value_b = models.FloatField(blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    wip_value_b = models.FloatField(blank=True, null=True)
    wip_value_g = models.FloatField(blank=True, null=True)
    wip_value_sg = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_inv_val_sum_mv'


class MlogOpiMtlVarActMvF(models.Model):
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_value_b = models.FloatField(blank=True, null=True)
    actual_value_g = models.FloatField(blank=True, null=True)
    actual_value_sg = models.FloatField(blank=True, null=True)
    assembly_item_id = models.FloatField(blank=True, null=True)
    component_item_id = models.FloatField(blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    job_type = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_mtl_var_act_mv_f'


class MlogOpiMtlVarMvF(models.Model):
    act_usage_value_b = models.FloatField(blank=True, null=True)
    act_usage_value_g = models.FloatField(blank=True, null=True)
    act_usage_value_sg = models.FloatField(blank=True, null=True)
    assembly_item_id = models.FloatField(blank=True, null=True)
    completion_date = models.DateField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    std_usage_value_b = models.FloatField(blank=True, null=True)
    std_usage_value_g = models.FloatField(blank=True, null=True)
    std_usage_value_sg = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_mtl_var_mv_f'


class MlogOpiPgmCbnMv(models.Model):
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    top_model_item_id = models.CharField(max_length=81, blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_pgm_cbn_mv'


class MlogOpiPgmGrpMv(models.Model):
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    top_model_item_id = models.CharField(max_length=81, blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=30, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_pgm_grp_mv'


class MlogOpiPgmSumMv(models.Model):
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    customer_item_cat_flag = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_pgm_sum_mv'


class MlogOpiProdScrMv(models.Model):
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    production_qty = models.FloatField(blank=True, null=True)
    production_val_b = models.FloatField(blank=True, null=True)
    production_val_g = models.FloatField(blank=True, null=True)
    production_val_sg = models.FloatField(blank=True, null=True)
    scrap_qty = models.FloatField(blank=True, null=True)
    scrap_val_b = models.FloatField(blank=True, null=True)
    scrap_val_g = models.FloatField(blank=True, null=True)
    scrap_val_sg = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_prod_scr_mv'


class MlogOpiPtpCbnMv(models.Model):
    actual_quantity = models.FloatField(blank=True, null=True)
    conversion_rate = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    planned_item = models.CharField(max_length=1, blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    sec_conversion_rate = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    unit_cost = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_ptp_cbn_mv'


class MlogOpiPtpItemFMv(models.Model):
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_standard_value_b = models.FloatField(blank=True, null=True)
    actual_standard_value_g = models.FloatField(blank=True, null=True)
    actual_standard_value_sg = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    planned_standard_value_b = models.FloatField(blank=True, null=True)
    planned_standard_value_g = models.FloatField(blank=True, null=True)
    planned_standard_value_sg = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_opi_ptp_item_f_mv'


class MlogPjiAcClsFMv(models.Model):
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_class_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    project_organization_id = models.BigIntegerField(blank=True, null=True)
    project_org_id = models.BigIntegerField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_ac_cls_f_mv'


class MlogPjiAcOrgFMv(models.Model):
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    organization_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_ac_org_f_mv'


class MlogPjiFpClsEtFMv(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    exp_evt_type_id = models.BigIntegerField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_class_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    project_organization_id = models.BigIntegerField(blank=True, null=True)
    project_org_id = models.BigIntegerField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_cls_et_f_mv'


class MlogPjiFpClsEtWtFM(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    exp_evt_type_id = models.BigIntegerField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_class_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    project_organization_id = models.BigIntegerField(blank=True, null=True)
    project_org_id = models.BigIntegerField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_cls_et_wt_f_m'


class MlogPjiFpClsFMv(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_class_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    project_organization_id = models.BigIntegerField(blank=True, null=True)
    project_org_id = models.BigIntegerField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_cls_f_mv'


class MlogPjiFpOrgEtFMv(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    exp_evt_type_id = models.BigIntegerField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    organization_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_org_et_f_mv'


class MlogPjiFpOrgEtWtFM(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    exp_evt_type_id = models.BigIntegerField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    organization_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_org_et_wt_f_m'


class MlogPjiFpOrgFMv(models.Model):
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30, blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    organization_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_fp_org_f_mv'


class MlogPjiRmJobFMv(models.Model):
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)
    job_id = models.BigIntegerField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_rm_job_f_mv'


class MlogPjiRmOrgFMv(models.Model):
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_rm_org_f_mv'


class MlogPjiRmWtFMv(models.Model):
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_pji_rm_wt_f_mv'


class MlogPoaApi001Mv(models.Model):
    aggregation_level = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_api_001_mv'


class MlogPoaApiBsJMv(models.Model):
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    approved_flag = models.CharField(max_length=1, blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=25, blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_api_bs_j_mv'


class MlogPoaBmItemOMv(models.Model):
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_bm_item_o_mv'


class MlogPoaBmItemSMv(models.Model):
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_bm_item_s_mv'


class MlogPoaDbiPllMv(models.Model):
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    base_uom_conv_rate = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)
    days_early_receipt_allowed = models.FloatField(blank=True, null=True)
    days_late_receipt_allowed = models.FloatField(blank=True, null=True)
    expected_date = models.DateField(blank=True, null=True)
    func_cur_code = models.CharField(max_length=25, blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    line_location_id = models.FloatField(blank=True, null=True)
    matching_basis = models.CharField(max_length=30, blank=True, null=True)
    order_type = models.CharField(max_length=25, blank=True, null=True)
    payment_type = models.CharField(max_length=30, blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    price_override = models.FloatField(blank=True, null=True)
    receiving_routing_id = models.FloatField(blank=True, null=True)
    shipment_type = models.CharField(max_length=25, blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_dbi_pll_mv'


class MlogPoaIdl001Mv(models.Model):
    aggregation_level = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    leakage_amount_b = models.FloatField(blank=True, null=True)
    leakage_amount_g = models.FloatField(blank=True, null=True)
    leakage_amount_sg = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_idl_001_mv'


class MlogPoaIdlBsJMv(models.Model):
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    po_matched_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_required_flag = models.CharField(max_length=1, blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_idl_bs_j_mv'


class MlogPoaMidBsJMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    dist_count = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    source = models.CharField(max_length=25, blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_mid_bs_j_mv'


class MlogPoaNeg000Mv(models.Model):
    auction_creation_date = models.DateField(blank=True, null=True)
    auction_header_id = models.FloatField(blank=True, null=True)
    auction_line_number = models.FloatField(blank=True, null=True)
    award_amount_b = models.FloatField(blank=True, null=True)
    award_amount_g = models.FloatField(blank=True, null=True)
    award_amount_sg = models.FloatField(blank=True, null=True)
    award_complete_date = models.DateField(blank=True, null=True)
    award_date = models.DateField(blank=True, null=True)
    award_qty = models.FloatField(blank=True, null=True)
    award_status = models.CharField(max_length=25, blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    bid_line_number = models.FloatField(blank=True, null=True)
    bid_number = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    close_bidding_date = models.DateField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    current_amount_b = models.FloatField(blank=True, null=True)
    current_amount_g = models.FloatField(blank=True, null=True)
    current_amount_sg = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    next_round_creation_date = models.DateField(blank=True, null=True)
    open_bidding_date = models.DateField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    prev_round_close_date = models.DateField(blank=True, null=True)
    publish_date = models.DateField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    rfi_complete_date = models.DateField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_invite_date = models.DateField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    umarker = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_neg_000_mv'


class MlogPoaPod001Mv(models.Model):
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_pod_001_mv'


class MlogPoaPodBsJMv(models.Model):
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    auction_header_id = models.FloatField(blank=True, null=True)
    auction_line_number = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    bid_line_number = models.FloatField(blank=True, null=True)
    bid_number = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    current_amt_b = models.FloatField(blank=True, null=True)
    current_amt_g = models.FloatField(blank=True, null=True)
    current_amt_sg = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    nz_quantity = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    po_release_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    shipment_type = models.CharField(max_length=25, blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_pod_bs_j_mv'


class MlogPoaPqc001Mv(models.Model):
    aggregation_level = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    pbcqco_amt_b = models.FloatField(blank=True, null=True)
    pbcqco_amt_g = models.FloatField(blank=True, null=True)
    pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_pqc_001_mv'


class MlogPoaPqcBsJ2Mv(models.Model):
    approved_date = models.DateField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    global_cur_conv_rate = models.FloatField(blank=True, null=True)
    order_type = models.CharField(max_length=25, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    pip_amt_b = models.FloatField(blank=True, null=True)
    pip_amt_g = models.FloatField(blank=True, null=True)
    pip_amt_sg = models.FloatField(blank=True, null=True)
    pip_quantity = models.FloatField(blank=True, null=True)
    pisp_amt_g = models.FloatField(blank=True, null=True)
    pisp_amt_sg = models.FloatField(blank=True, null=True)
    pisp_quantity = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    po_line_id = models.FloatField(blank=True, null=True)
    po_release_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_ent_year_id = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_pqc_bs_j2_mv'


class MlogPoaPqcBsJMv(models.Model):
    approved_date = models.DateField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    global_cur_conv_rate = models.FloatField(blank=True, null=True)
    order_type = models.CharField(max_length=25, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    po_line_id = models.FloatField(blank=True, null=True)
    po_release_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_ent_year_id = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_pqc_bs_j_mv'


class MlogPoaRtxBsJMv(models.Model):
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    amt_afterdue_b = models.FloatField(blank=True, null=True)
    amt_afterdue_g = models.FloatField(blank=True, null=True)
    amt_afterdue_sg = models.FloatField(blank=True, null=True)
    amt_beforedue_b = models.FloatField(blank=True, null=True)
    amt_beforedue_g = models.FloatField(blank=True, null=True)
    amt_beforedue_sg = models.FloatField(blank=True, null=True)
    amt_expt_b = models.FloatField(blank=True, null=True)
    amt_expt_g = models.FloatField(blank=True, null=True)
    amt_expt_sg = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    day_id = models.FloatField(blank=True, null=True)
    dropship_type_code = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    mxrowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mx_id = models.FloatField(blank=True, null=True)
    num_days_early = models.FloatField(blank=True, null=True)
    num_days_late = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    prid = models.TextField(blank=True, null=True)  # This field type is a guess.
    qty_afterdue = models.FloatField(blank=True, null=True)
    qty_beforedue = models.FloatField(blank=True, null=True)
    qty_intol = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    receiving_org_id = models.FloatField(blank=True, null=True)
    rrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    transaction_flag = models.CharField(max_length=16, blank=True, null=True)
    transaction_type = models.CharField(max_length=25, blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    m_row_field = models.CharField(db_column='m_row$$', max_length=255, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    sequence_field = models.FloatField(db_column='sequence$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    snaptime_field = models.DateField(db_column='snaptime$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    dmltype_field = models.CharField(db_column='dmltype$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    old_new_field = models.CharField(db_column='old_new$$', max_length=1, blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    change_vector_field = models.TextField(db_column='change_vector$$', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'. This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mlog$_poa_rtx_bs_j_mv'


class MmtBkp070414184400(models.Model):
    transaction_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    organization_id = models.FloatField()
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    locator_id = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_action_id = models.FloatField()
    transaction_source_type_id = models.FloatField()
    transaction_source_id = models.FloatField(blank=True, null=True)
    transaction_source_name = models.CharField(max_length=80, blank=True, null=True)
    transaction_quantity = models.FloatField()
    transaction_uom = models.CharField(max_length=3)
    primary_quantity = models.FloatField()
    transaction_date = models.DateField()
    variance_amount = models.FloatField(blank=True, null=True)
    acct_period_id = models.FloatField(blank=True, null=True)
    transaction_reference = models.CharField(max_length=240, blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    distribution_account_id = models.FloatField(blank=True, null=True)
    encumbrance_account = models.FloatField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    cost_update_id = models.FloatField(blank=True, null=True)
    costed_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_group_id = models.FloatField(blank=True, null=True)
    invoiced_flag = models.CharField(max_length=1, blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    transaction_cost = models.FloatField(blank=True, null=True)
    prior_cost = models.FloatField(blank=True, null=True)
    new_cost = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    quantity_adjusted = models.FloatField(blank=True, null=True)
    employee_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    operation_seq_num = models.FloatField(blank=True, null=True)
    master_schedule_update_code = models.CharField(max_length=10, blank=True, null=True)
    receiving_document = models.CharField(max_length=10, blank=True, null=True)
    picking_line_id = models.FloatField(blank=True, null=True)
    trx_source_line_id = models.FloatField(blank=True, null=True)
    trx_source_delivery_id = models.FloatField(blank=True, null=True)
    repetitive_line_id = models.FloatField(blank=True, null=True)
    physical_adjustment_id = models.FloatField(blank=True, null=True)
    cycle_count_id = models.FloatField(blank=True, null=True)
    rma_line_id = models.FloatField(blank=True, null=True)
    transfer_transaction_id = models.FloatField(blank=True, null=True)
    transaction_set_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    move_transaction_id = models.FloatField(blank=True, null=True)
    completion_transaction_id = models.FloatField(blank=True, null=True)
    shortage_process_code = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_organization_id = models.FloatField(blank=True, null=True)
    transfer_subinventory = models.CharField(max_length=10, blank=True, null=True)
    transfer_locator_id = models.FloatField(blank=True, null=True)
    shipment_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost = models.FloatField(blank=True, null=True)
    transportation_dist_account = models.FloatField(blank=True, null=True)
    transportation_cost = models.FloatField(blank=True, null=True)
    transfer_cost_dist_account = models.FloatField(blank=True, null=True)
    waybill_airbill = models.CharField(max_length=20, blank=True, null=True)
    freight_code = models.CharField(max_length=30, blank=True, null=True)
    number_of_containers = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    percentage_change = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    movement_id = models.FloatField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    to_task_id = models.BigIntegerField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    to_project_id = models.BigIntegerField(blank=True, null=True)
    source_project_id = models.FloatField(blank=True, null=True)
    pa_expenditure_org_id = models.FloatField(blank=True, null=True)
    source_task_id = models.FloatField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    prior_costed_quantity = models.FloatField(blank=True, null=True)
    transfer_prior_costed_quantity = models.FloatField(blank=True, null=True)
    final_completion_flag = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collected = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collector_group_id = models.FloatField(blank=True, null=True)
    shipment_costed = models.CharField(max_length=1, blank=True, null=True)
    transfer_percentage = models.FloatField(blank=True, null=True)
    material_account = models.FloatField(blank=True, null=True)
    material_overhead_account = models.FloatField(blank=True, null=True)
    resource_account = models.FloatField(blank=True, null=True)
    outside_processing_account = models.FloatField(blank=True, null=True)
    overhead_account = models.FloatField(blank=True, null=True)
    cost_group_id = models.FloatField(blank=True, null=True)
    transfer_cost_group_id = models.FloatField(blank=True, null=True)
    flow_schedule = models.CharField(max_length=1, blank=True, null=True)
    qa_collection_id = models.FloatField(blank=True, null=True)
    overcompletion_transaction_qty = models.FloatField(blank=True, null=True)
    overcompletion_primary_qty = models.FloatField(blank=True, null=True)
    overcompletion_transaction_id = models.FloatField(blank=True, null=True)
    mvt_stat_status = models.CharField(max_length=240, blank=True, null=True)
    common_bom_seq_id = models.FloatField(blank=True, null=True)
    common_routing_seq_id = models.FloatField(blank=True, null=True)
    org_cost_group_id = models.FloatField(blank=True, null=True)
    cost_type_id = models.FloatField(blank=True, null=True)
    periodic_primary_quantity = models.FloatField(blank=True, null=True)
    move_order_line_id = models.FloatField(blank=True, null=True)
    task_group_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    transfer_lpn_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    content_lpn_id = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    cost_category_id = models.FloatField(blank=True, null=True)
    organization_type = models.FloatField(blank=True, null=True)
    transfer_organization_type = models.FloatField(blank=True, null=True)
    owning_organization_id = models.FloatField(blank=True, null=True)
    owning_tp_type = models.FloatField(blank=True, null=True)
    xfr_owning_organization_id = models.FloatField(blank=True, null=True)
    transfer_owning_tp_type = models.FloatField(blank=True, null=True)
    planning_organization_id = models.FloatField(blank=True, null=True)
    planning_tp_type = models.FloatField(blank=True, null=True)
    xfr_planning_organization_id = models.FloatField(blank=True, null=True)
    transfer_planning_tp_type = models.FloatField(blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    secondary_transaction_quantity = models.FloatField(blank=True, null=True)
    transaction_group_seq = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    reservation_id = models.FloatField(blank=True, null=True)
    transaction_mode = models.FloatField(blank=True, null=True)
    transaction_batch_id = models.FloatField(blank=True, null=True)
    transaction_batch_seq = models.FloatField(blank=True, null=True)
    intransit_account = models.FloatField(blank=True, null=True)
    fob_point = models.FloatField(blank=True, null=True)
    parent_transaction_id = models.FloatField(blank=True, null=True)
    logical_trx_type_code = models.FloatField(blank=True, null=True)
    trx_flow_header_id = models.FloatField(blank=True, null=True)
    logical_transactions_created = models.FloatField(blank=True, null=True)
    logical_transaction = models.FloatField(blank=True, null=True)
    intercompany_cost = models.FloatField(blank=True, null=True)
    intercompany_pricing_option = models.FloatField(blank=True, null=True)
    intercompany_currency_code = models.CharField(max_length=15, blank=True, null=True)
    original_transaction_temp_id = models.FloatField(blank=True, null=True)
    transfer_price = models.FloatField(blank=True, null=True)
    expense_account_id = models.FloatField(blank=True, null=True)
    cogs_recognition_percent = models.FloatField(blank=True, null=True)
    so_issue_account_type = models.FloatField(blank=True, null=True)
    opm_costed_flag = models.CharField(max_length=1, blank=True, null=True)
    material_expense_account = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mmt_bkp_070414_18_44_00'


class MmtBkp13470502(models.Model):
    transaction_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    organization_id = models.FloatField()
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    locator_id = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_action_id = models.FloatField()
    transaction_source_type_id = models.FloatField()
    transaction_source_id = models.FloatField(blank=True, null=True)
    transaction_source_name = models.CharField(max_length=80, blank=True, null=True)
    transaction_quantity = models.FloatField()
    transaction_uom = models.CharField(max_length=3)
    primary_quantity = models.FloatField()
    transaction_date = models.DateField()
    variance_amount = models.FloatField(blank=True, null=True)
    acct_period_id = models.FloatField(blank=True, null=True)
    transaction_reference = models.CharField(max_length=240, blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    distribution_account_id = models.FloatField(blank=True, null=True)
    encumbrance_account = models.FloatField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    cost_update_id = models.FloatField(blank=True, null=True)
    costed_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_group_id = models.FloatField(blank=True, null=True)
    invoiced_flag = models.CharField(max_length=1, blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    transaction_cost = models.FloatField(blank=True, null=True)
    prior_cost = models.FloatField(blank=True, null=True)
    new_cost = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    quantity_adjusted = models.FloatField(blank=True, null=True)
    employee_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    operation_seq_num = models.FloatField(blank=True, null=True)
    master_schedule_update_code = models.CharField(max_length=10, blank=True, null=True)
    receiving_document = models.CharField(max_length=10, blank=True, null=True)
    picking_line_id = models.FloatField(blank=True, null=True)
    trx_source_line_id = models.FloatField(blank=True, null=True)
    trx_source_delivery_id = models.FloatField(blank=True, null=True)
    repetitive_line_id = models.FloatField(blank=True, null=True)
    physical_adjustment_id = models.FloatField(blank=True, null=True)
    cycle_count_id = models.FloatField(blank=True, null=True)
    rma_line_id = models.FloatField(blank=True, null=True)
    transfer_transaction_id = models.FloatField(blank=True, null=True)
    transaction_set_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    move_transaction_id = models.FloatField(blank=True, null=True)
    completion_transaction_id = models.FloatField(blank=True, null=True)
    shortage_process_code = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_organization_id = models.FloatField(blank=True, null=True)
    transfer_subinventory = models.CharField(max_length=10, blank=True, null=True)
    transfer_locator_id = models.FloatField(blank=True, null=True)
    shipment_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost = models.FloatField(blank=True, null=True)
    transportation_dist_account = models.FloatField(blank=True, null=True)
    transportation_cost = models.FloatField(blank=True, null=True)
    transfer_cost_dist_account = models.FloatField(blank=True, null=True)
    waybill_airbill = models.CharField(max_length=20, blank=True, null=True)
    freight_code = models.CharField(max_length=30, blank=True, null=True)
    number_of_containers = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    percentage_change = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    movement_id = models.FloatField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    to_task_id = models.BigIntegerField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    to_project_id = models.BigIntegerField(blank=True, null=True)
    source_project_id = models.FloatField(blank=True, null=True)
    pa_expenditure_org_id = models.FloatField(blank=True, null=True)
    source_task_id = models.FloatField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    prior_costed_quantity = models.FloatField(blank=True, null=True)
    transfer_prior_costed_quantity = models.FloatField(blank=True, null=True)
    final_completion_flag = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collected = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collector_group_id = models.FloatField(blank=True, null=True)
    shipment_costed = models.CharField(max_length=1, blank=True, null=True)
    transfer_percentage = models.FloatField(blank=True, null=True)
    material_account = models.FloatField(blank=True, null=True)
    material_overhead_account = models.FloatField(blank=True, null=True)
    resource_account = models.FloatField(blank=True, null=True)
    outside_processing_account = models.FloatField(blank=True, null=True)
    overhead_account = models.FloatField(blank=True, null=True)
    cost_group_id = models.FloatField(blank=True, null=True)
    transfer_cost_group_id = models.FloatField(blank=True, null=True)
    flow_schedule = models.CharField(max_length=1, blank=True, null=True)
    qa_collection_id = models.FloatField(blank=True, null=True)
    overcompletion_transaction_qty = models.FloatField(blank=True, null=True)
    overcompletion_primary_qty = models.FloatField(blank=True, null=True)
    overcompletion_transaction_id = models.FloatField(blank=True, null=True)
    mvt_stat_status = models.CharField(max_length=240, blank=True, null=True)
    common_bom_seq_id = models.FloatField(blank=True, null=True)
    common_routing_seq_id = models.FloatField(blank=True, null=True)
    org_cost_group_id = models.FloatField(blank=True, null=True)
    cost_type_id = models.FloatField(blank=True, null=True)
    periodic_primary_quantity = models.FloatField(blank=True, null=True)
    move_order_line_id = models.FloatField(blank=True, null=True)
    task_group_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    transfer_lpn_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    content_lpn_id = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    cost_category_id = models.FloatField(blank=True, null=True)
    organization_type = models.FloatField(blank=True, null=True)
    transfer_organization_type = models.FloatField(blank=True, null=True)
    owning_organization_id = models.FloatField(blank=True, null=True)
    owning_tp_type = models.FloatField(blank=True, null=True)
    xfr_owning_organization_id = models.FloatField(blank=True, null=True)
    transfer_owning_tp_type = models.FloatField(blank=True, null=True)
    planning_organization_id = models.FloatField(blank=True, null=True)
    planning_tp_type = models.FloatField(blank=True, null=True)
    xfr_planning_organization_id = models.FloatField(blank=True, null=True)
    transfer_planning_tp_type = models.FloatField(blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    secondary_transaction_quantity = models.FloatField(blank=True, null=True)
    transaction_group_seq = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    reservation_id = models.FloatField(blank=True, null=True)
    transaction_mode = models.FloatField(blank=True, null=True)
    transaction_batch_id = models.FloatField(blank=True, null=True)
    transaction_batch_seq = models.FloatField(blank=True, null=True)
    intransit_account = models.FloatField(blank=True, null=True)
    fob_point = models.FloatField(blank=True, null=True)
    parent_transaction_id = models.FloatField(blank=True, null=True)
    logical_trx_type_code = models.FloatField(blank=True, null=True)
    trx_flow_header_id = models.FloatField(blank=True, null=True)
    logical_transactions_created = models.FloatField(blank=True, null=True)
    logical_transaction = models.FloatField(blank=True, null=True)
    intercompany_cost = models.FloatField(blank=True, null=True)
    intercompany_pricing_option = models.FloatField(blank=True, null=True)
    intercompany_currency_code = models.CharField(max_length=15, blank=True, null=True)
    original_transaction_temp_id = models.FloatField(blank=True, null=True)
    transfer_price = models.FloatField(blank=True, null=True)
    expense_account_id = models.FloatField(blank=True, null=True)
    cogs_recognition_percent = models.FloatField(blank=True, null=True)
    so_issue_account_type = models.FloatField(blank=True, null=True)
    opm_costed_flag = models.CharField(max_length=1, blank=True, null=True)
    material_expense_account = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mmt_bkp_13470502'


class MscCurrencyConvMv(models.Model):
    from_currency = models.CharField(max_length=30)
    to_currency = models.CharField(max_length=30)
    calendar_date = models.DateField()
    conv_rate = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_currency_conv_mv'


class MscDemandsFMv(models.Model):
    plan_id = models.FloatField()
    plan_run_id = models.FloatField()
    sr_instance_id = models.FloatField()
    organization_id = models.FloatField()
    inventory_item_id = models.FloatField()
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    customer_site_id = models.FloatField(blank=True, null=True)
    demand_class = models.CharField(max_length=34, blank=True, null=True)
    order_type = models.FloatField()
    bkt_start_date = models.DateField()
    backlog_qty = models.FloatField(blank=True, null=True)
    sum_sales_order_qty = models.FloatField(blank=True, null=True)
    sum_forecast_qty = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_demands_f_mv'


class MscPhubCategoriesMv(models.Model):
    category_set_id = models.FloatField()
    sr_category_id = models.FloatField()
    sr_instance_id = models.FloatField()
    category_name = models.CharField(max_length=250)
    description = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_categories_mv'


class MscPhubCustomersMv(models.Model):
    sr_instance_id = models.FloatField(blank=True, null=True)
    region_id = models.FloatField(blank=True, null=True)
    zone = models.CharField(max_length=4000, blank=True, null=True)
    country_code = models.CharField(max_length=10, blank=True, null=True)
    state_code = models.CharField(max_length=10, blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    customer_name = models.CharField(max_length=4000, blank=True, null=True)
    customer_site_id = models.FloatField(blank=True, null=True)
    customer_site = models.CharField(max_length=4000, blank=True, null=True)
    address = models.CharField(max_length=1600, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_customers_mv'


class MscPhubFiscalPeriodsMv(models.Model):
    sr_instance_id = models.FloatField()
    organization_id = models.FloatField()
    period_name = models.CharField(max_length=15)
    entered_period_name = models.CharField(max_length=15)
    period_num = models.BigIntegerField()
    start_date = models.DateField(unique=True)
    end_date = models.DateField()
    day_count = models.FloatField(blank=True, null=True)
    quarter_start_date = models.DateField(blank=True, null=True)
    period_set_name = models.CharField(max_length=15)
    description = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_fiscal_periods_mv'


class MscPhubFiscalQuartersMv(models.Model):
    quarter_start_date = models.DateField(unique=True, blank=True, null=True)
    quarter_name = models.CharField(max_length=41, blank=True, null=True)
    quarter_num = models.BigIntegerField()
    year_start_date = models.DateField(blank=True, null=True)
    period_year = models.BigIntegerField()
    period_set_name = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'msc_phub_fiscal_quarters_mv'


class MscPhubFiscalYearsMv(models.Model):
    year_start_date = models.DateField(unique=True, blank=True, null=True)
    period_year = models.BigIntegerField()
    period_set_name = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'msc_phub_fiscal_years_mv'


class MscPhubItemCategoriesMv(models.Model):
    category_set_id = models.FloatField()
    sr_category_id = models.FloatField()
    sr_instance_id = models.FloatField()
    organization_id = models.FloatField()
    inventory_item_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'msc_phub_item_categories_mv'


class MscPhubMfgCalDatesMv(models.Model):
    calendar_date = models.DateField(unique=True)
    mfg_cal_week_start_date = models.DateField(blank=True, null=True)
    month_start_date = models.DateField()
    fiscal_period_start_date = models.DateField(blank=True, null=True)
    calendar_code = models.CharField(max_length=30, blank=True, null=True)
    exception_set_id = models.FloatField(blank=True, null=True)
    period_set_name = models.CharField(max_length=15, blank=True, null=True)
    day_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_mfg_cal_dates_mv'


class MscPhubMfgCalPeriodsMv(models.Model):
    calendar_code = models.CharField(max_length=14)
    sr_instance_id = models.FloatField()
    exception_set_id = models.FloatField()
    period_start_date = models.DateField(unique=True)
    period_end_date = models.DateField(blank=True, null=True)
    day_count = models.FloatField(blank=True, null=True)
    period_long_name = models.CharField(max_length=79, blank=True, null=True)
    period_seq = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_mfg_cal_periods_mv'


class MscPhubMfgCalWeeksMv(models.Model):
    calendar_code = models.CharField(max_length=14)
    sr_instance_id = models.FloatField()
    exception_set_id = models.FloatField()
    week_start_date = models.DateField(unique=True)
    week_end_date = models.DateField(blank=True, null=True)
    day_count = models.FloatField(blank=True, null=True)
    week_name = models.CharField(max_length=10, blank=True, null=True)
    period_start_date = models.DateField()

    class Meta:
        managed = False
        db_table = 'msc_phub_mfg_cal_weeks_mv'


class MscPhubSuppliersMv(models.Model):
    sr_instance_id = models.FloatField(blank=True, null=True)
    region_id = models.FloatField(blank=True, null=True)
    zone = models.CharField(max_length=4000, blank=True, null=True)
    country_code = models.CharField(max_length=10, blank=True, null=True)
    state_code = models.CharField(max_length=10, blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_name = models.CharField(max_length=4000, blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    supplier_site_code = models.CharField(max_length=4000, blank=True, null=True)
    location = models.CharField(max_length=60, blank=True, null=True)
    address = models.CharField(max_length=1600, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msc_phub_suppliers_mv'


class MsdDemObiDemantraMvDummy(models.Model):
    sr_instance_id = models.FloatField()
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    customer_id = models.FloatField(blank=True, null=True)
    customer_site_id = models.FloatField(blank=True, null=True)
    region_id = models.FloatField(blank=True, null=True)
    demand_class = models.CharField(max_length=30, blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    production_history = models.FloatField(blank=True, null=True)
    sales_fcst = models.FloatField(blank=True, null=True)
    sales_fcst_value = models.FloatField(blank=True, null=True)
    sales_fcst_value2 = models.FloatField(blank=True, null=True)
    sales_fcst_cum = models.FloatField(blank=True, null=True)
    mktg_fcst = models.FloatField(blank=True, null=True)
    mktg_fcst_value = models.FloatField(blank=True, null=True)
    mktg_fcst_value2 = models.FloatField(blank=True, null=True)
    mktg_fcst_cum = models.FloatField(blank=True, null=True)
    budget = models.FloatField(blank=True, null=True)
    budget2 = models.FloatField(blank=True, null=True)
    budget_cum = models.FloatField(blank=True, null=True)
    budget2_cum = models.FloatField(blank=True, null=True)
    booking_fcst = models.FloatField(blank=True, null=True)
    booking_fcst_value = models.FloatField(blank=True, null=True)
    booking_fcst_value2 = models.FloatField(blank=True, null=True)
    booking_fcst_cum = models.FloatField(blank=True, null=True)
    shipment_fcst = models.FloatField(blank=True, null=True)
    shipment_fcst_value = models.FloatField(blank=True, null=True)
    shipment_fcst_value2 = models.FloatField(blank=True, null=True)
    shipment_fcst_cum = models.FloatField(blank=True, null=True)
    projected_backlog = models.FloatField(blank=True, null=True)
    actual_backlog = models.FloatField(blank=True, null=True)
    shipment_history = models.FloatField(blank=True, null=True)
    shipment_history_value = models.FloatField(blank=True, null=True)
    shipment_history_value2 = models.FloatField(blank=True, null=True)
    shipment_history_cum = models.FloatField(blank=True, null=True)
    booking_history = models.FloatField(blank=True, null=True)
    booking_history_value = models.FloatField(blank=True, null=True)
    booking_history_value2 = models.FloatField(blank=True, null=True)
    booking_history_cum = models.FloatField(blank=True, null=True)
    consen_fcst_accrcy_mape_4week = models.FloatField(blank=True, null=True)
    consen_fcst_accrcy_mape_8week = models.FloatField(blank=True, null=True)
    consen_fcst_accrcy_mape_13week = models.FloatField(blank=True, null=True)
    price = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=14, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msd_dem_obi_demantra_mv_dummy'


class MsdDemScnEntriesMv(models.Model):
    scenario_id = models.FloatField(blank=True, null=True)
    sr_instance_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    customer_site_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    demand_class = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    consensus_fcst = models.FloatField(blank=True, null=True)
    consensus_fcst_cum = models.FloatField(blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    price = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'msd_dem_scn_entries_mv'


class MthEquipOpSumDdMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    status_code = models.FloatField()
    product_level9_key = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    rejected_qty = models.FloatField(blank=True, null=True)
    rejected_qty_count = models.FloatField(blank=True, null=True)
    qty_rework = models.FloatField(blank=True, null=True)
    qty_rework_count = models.FloatField(blank=True, null=True)
    qty_scrap = models.FloatField(blank=True, null=True)
    qty_scrap_count = models.FloatField(blank=True, null=True)
    qty_good = models.FloatField(blank=True, null=True)
    qty_good_count = models.FloatField(blank=True, null=True)
    output_qty = models.FloatField(blank=True, null=True)
    output_qty_count = models.FloatField(blank=True, null=True)
    completed_qty = models.FloatField(blank=True, null=True)
    completed_qty_count = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty_count = models.FloatField(blank=True, null=True)
    shift_act_prod = models.FloatField(blank=True, null=True)
    shift_act_prod_count = models.FloatField(blank=True, null=True)
    loss_bad_quality = models.FloatField(blank=True, null=True)
    loss_bad_quality_count = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_op_sum_dd_mv'


class MthEquipOpSumPmMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    status_code = models.FloatField()
    product_level9_key = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    rejected_qty = models.FloatField(blank=True, null=True)
    rejected_qty_count = models.FloatField(blank=True, null=True)
    qty_rework = models.FloatField(blank=True, null=True)
    qty_rework_count = models.FloatField(blank=True, null=True)
    qty_scrap = models.FloatField(blank=True, null=True)
    qty_scrap_count = models.FloatField(blank=True, null=True)
    qty_good = models.FloatField(blank=True, null=True)
    qty_good_count = models.FloatField(blank=True, null=True)
    output_qty = models.FloatField(blank=True, null=True)
    output_qty_count = models.FloatField(blank=True, null=True)
    completed_qty = models.FloatField(blank=True, null=True)
    completed_qty_count = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty = models.FloatField(blank=True, null=True)
    hrs_act_comp_qty_count = models.FloatField(blank=True, null=True)
    shift_act_prod = models.FloatField(blank=True, null=True)
    shift_act_prod_count = models.FloatField(blank=True, null=True)
    loss_bad_quality = models.FloatField(blank=True, null=True)
    loss_bad_quality_count = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val = models.FloatField(blank=True, null=True)
    loss_bad_qualty_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    equip_hier = models.FloatField(blank=True, null=True)
    equip_hier_key = models.FloatField(blank=True, null=True)
    equip_hier_eff_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_op_sum_pm_mv'


class MthEquipProdSchDdMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    planned_qty_g = models.FloatField(blank=True, null=True)
    planned_qty_g_count = models.FloatField(blank=True, null=True)
    planned_qty_sg = models.FloatField(blank=True, null=True)
    planned_qty_sg_count = models.FloatField(blank=True, null=True)
    shift_sch_prod = models.FloatField(blank=True, null=True)
    shift_sch_prod_count = models.FloatField(blank=True, null=True)
    hrs_sch_qty = models.FloatField(blank=True, null=True)
    hrs_sch_qty_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_prod_sch_dd_mv'


class MthEquipProdSchPmMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    planned_qty_g = models.FloatField(blank=True, null=True)
    planned_qty_g_count = models.FloatField(blank=True, null=True)
    planned_qty_sg = models.FloatField(blank=True, null=True)
    planned_qty_sg_count = models.FloatField(blank=True, null=True)
    shift_sch_prod = models.FloatField(blank=True, null=True)
    shift_sch_prod_count = models.FloatField(blank=True, null=True)
    hrs_sch_qty = models.FloatField(blank=True, null=True)
    hrs_sch_qty_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    equip_hier = models.FloatField(blank=True, null=True)
    equip_hier_key = models.FloatField(blank=True, null=True)
    equip_hier_eff_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_prod_sch_pm_mv'


class MthEquipShftDdMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    equip_cal_time = models.FloatField(blank=True, null=True)
    equip_cal_time_count = models.FloatField(blank=True, null=True)
    equip_cal_time_val = models.FloatField(blank=True, null=True)
    equip_cal_time_val_count = models.FloatField(blank=True, null=True)
    equip_sch_time = models.FloatField(blank=True, null=True)
    equip_sch_time_count = models.FloatField(blank=True, null=True)
    equip_sch_time_val = models.FloatField(blank=True, null=True)
    equip_sch_time_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_shft_dd_mv'


class MthEquipShftPmMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    equip_cal_time = models.FloatField(blank=True, null=True)
    equip_cal_time_count = models.FloatField(blank=True, null=True)
    equip_cal_time_val = models.FloatField(blank=True, null=True)
    equip_cal_time_val_count = models.FloatField(blank=True, null=True)
    equip_sch_time = models.FloatField(blank=True, null=True)
    equip_sch_time_count = models.FloatField(blank=True, null=True)
    equip_sch_time_val = models.FloatField(blank=True, null=True)
    equip_sch_time_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    equip_hier = models.FloatField(blank=True, null=True)
    equip_hier_key = models.FloatField(blank=True, null=True)
    equip_hier_eff_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_shft_pm_mv'


class MthEquipStSumDdMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    down_hours = models.FloatField(blank=True, null=True)
    down_hours_count = models.FloatField(blank=True, null=True)
    down_hours_val = models.FloatField(blank=True, null=True)
    down_hours_val_count = models.FloatField(blank=True, null=True)
    run_hours = models.FloatField(blank=True, null=True)
    run_hours_count = models.FloatField(blank=True, null=True)
    run_hours_val = models.FloatField(blank=True, null=True)
    run_hours_val_count = models.FloatField(blank=True, null=True)
    idle_hours = models.FloatField(blank=True, null=True)
    idle_hours_count = models.FloatField(blank=True, null=True)
    up_hours = models.FloatField(blank=True, null=True)
    up_hours_count = models.FloatField(blank=True, null=True)
    mac_eff_sum = models.FloatField(blank=True, null=True)
    mac_eff_count = models.FloatField(blank=True, null=True)
    wo_item_sum = models.FloatField(blank=True, null=True)
    wo_item_count = models.FloatField(blank=True, null=True)
    loss_ineff = models.FloatField(blank=True, null=True)
    loss_ineff_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_st_sum_dd_mv'


class MthEquipStSumPmMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    dept_key = models.FloatField(blank=True, null=True)
    dept_eff_date = models.DateField(blank=True, null=True)
    cust_level9_key = models.FloatField(blank=True, null=True)
    cust_level9_eff_date = models.DateField(blank=True, null=True)
    down_hours = models.FloatField(blank=True, null=True)
    down_hours_count = models.FloatField(blank=True, null=True)
    down_hours_val = models.FloatField(blank=True, null=True)
    down_hours_val_count = models.FloatField(blank=True, null=True)
    run_hours = models.FloatField(blank=True, null=True)
    run_hours_count = models.FloatField(blank=True, null=True)
    run_hours_val = models.FloatField(blank=True, null=True)
    run_hours_val_count = models.FloatField(blank=True, null=True)
    idle_hours = models.FloatField(blank=True, null=True)
    idle_hours_count = models.FloatField(blank=True, null=True)
    up_hours = models.FloatField(blank=True, null=True)
    up_hours_count = models.FloatField(blank=True, null=True)
    mac_eff_sum = models.FloatField(blank=True, null=True)
    mac_eff_count = models.FloatField(blank=True, null=True)
    wo_item_sum = models.FloatField(blank=True, null=True)
    wo_item_count = models.FloatField(blank=True, null=True)
    loss_ineff = models.FloatField(blank=True, null=True)
    loss_ineff_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    equip_hier = models.FloatField(blank=True, null=True)
    equip_hier_key = models.FloatField(blank=True, null=True)
    equip_hier_eff_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_equip_st_sum_pm_mv'


class MthItemCostMv(models.Model):
    item_fk_key = models.FloatField()
    cost = models.FloatField(blank=True, null=True)
    total_entries = models.FloatField(blank=True, null=True)
    num_entries = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_item_cost_mv'


class MthMtlConsItMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    product_fk_key = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    item_level9_key = models.FloatField(blank=True, null=True)
    planned_usage_qty_g = models.FloatField(blank=True, null=True)
    planned_usage_qty_g_count = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    actual_usage_qty_g = models.FloatField(blank=True, null=True)
    actual_usage_qty_g_count = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_usage_val = models.FloatField(blank=True, null=True)
    actual_usage_val_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_g = models.FloatField(blank=True, null=True)
    unit_standard_qty_g_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_mtl_cons_it_mv'


class MthMtlConsLtMv(models.Model):
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    product_fk_key = models.FloatField(blank=True, null=True)
    product_level9_key = models.FloatField(blank=True, null=True)
    item_level9_key = models.FloatField(blank=True, null=True)
    planned_usage_qty_g = models.FloatField(blank=True, null=True)
    planned_qty_g_count = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg = models.FloatField(blank=True, null=True)
    planned_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    actual_usage_qty_g = models.FloatField(blank=True, null=True)
    actual_usage_qty_g_count = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg = models.FloatField(blank=True, null=True)
    actual_usage_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_usage_val = models.FloatField(blank=True, null=True)
    actual_usage_val_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_g = models.FloatField(blank=True, null=True)
    unit_standard_qty_g_count = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg = models.FloatField(blank=True, null=True)
    unit_standard_qty_sg_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    product_dim_key = models.FloatField(blank=True, null=True)
    product_dim_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_mtl_cons_lt_mv'


class MthMtlProdItMv(models.Model):
    item_fk_key = models.FloatField()
    level9_fk_key = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    start_quantity_g = models.FloatField(blank=True, null=True)
    start_quantity_g_count = models.FloatField(blank=True, null=True)
    expected_yield = models.FloatField(blank=True, null=True)
    expected_yield_count = models.FloatField(blank=True, null=True)
    start_quantity_sg = models.FloatField(blank=True, null=True)
    start_quantity_sg_count = models.FloatField(blank=True, null=True)
    actual_comp_qty_g = models.FloatField(blank=True, null=True)
    actual_comp_qty_g_count = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg_count = models.FloatField(blank=True, null=True)
    batch_cycle_time_sum = models.FloatField(blank=True, null=True)
    batch_cycle_time_count = models.FloatField(blank=True, null=True)
    first_time_qty = models.FloatField(blank=True, null=True)
    first_time_qty_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_mtl_prod_it_mv'


class MthMtlProdLtMv(models.Model):
    item_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    status_code = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    start_quantity_g = models.FloatField(blank=True, null=True)
    start_quantity_g_count = models.FloatField(blank=True, null=True)
    expected_yield = models.FloatField(blank=True, null=True)
    expected_yield_count = models.FloatField(blank=True, null=True)
    start_quantity_sg = models.FloatField(blank=True, null=True)
    start_quantity_sg_count = models.FloatField(blank=True, null=True)
    actual_comp_qty_g = models.FloatField(blank=True, null=True)
    actual_comp_qty_g_count = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg = models.FloatField(blank=True, null=True)
    actual_comp_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g = models.FloatField(blank=True, null=True)
    actual_rejected_qty_g_count = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg = models.FloatField(blank=True, null=True)
    actual_rejected_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g = models.FloatField(blank=True, null=True)
    actual_reworked_qty_g_count = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg = models.FloatField(blank=True, null=True)
    actual_reworked_qty_sg_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g = models.FloatField(blank=True, null=True)
    actual_scrap_qty_g_count = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg = models.FloatField(blank=True, null=True)
    actual_scrap_qty_sg_count = models.FloatField(blank=True, null=True)
    batch_cycle_time_sum = models.FloatField(blank=True, null=True)
    batch_cts_count = models.FloatField(blank=True, null=True)
    batch_cycle_time_count = models.FloatField(blank=True, null=True)
    batch_ctc_count = models.FloatField(blank=True, null=True)
    first_time_qty = models.FloatField(blank=True, null=True)
    fts_count = models.FloatField(blank=True, null=True)
    first_time_qty_count = models.FloatField(blank=True, null=True)
    ftc_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    item_dim_key = models.FloatField(blank=True, null=True)
    item_dim_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_mtl_prod_lt_mv'


class MthResReqItMv(models.Model):
    product_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    planned_usage_qty = models.FloatField(blank=True, null=True)
    planned_usage_qty_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_res_req_it_mv'


class MthResReqLtMv(models.Model):
    product_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    planned_usage_qty = models.FloatField(blank=True, null=True)
    planned_usage_qty_count = models.FloatField(blank=True, null=True)
    planned_usage_val = models.FloatField(blank=True, null=True)
    planned_usage_val_count = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    item_dim_key = models.FloatField(blank=True, null=True)
    item_dim_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_res_req_lt_mv'


class MthResTxnItMv(models.Model):
    product_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    usage_qty = models.FloatField(blank=True, null=True)
    usage_qty_count = models.FloatField(blank=True, null=True)
    usage_val = models.FloatField(blank=True, null=True)
    usage_val_count = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_res_txn_it_mv'


class MthResTxnLtMv(models.Model):
    product_fk_key = models.FloatField(blank=True, null=True)
    level9_fk_key = models.FloatField(blank=True, null=True)
    usage_qty = models.FloatField(blank=True, null=True)
    usage_qty_count = models.FloatField(blank=True, null=True)
    usage_val = models.FloatField(blank=True, null=True)
    usage_val_count = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    total_count = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_dim_key = models.FloatField(blank=True, null=True)
    time_dim_level = models.FloatField(blank=True, null=True)
    item_dim_key = models.FloatField(blank=True, null=True)
    item_dim_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_res_txn_lt_mv'


class MthResourceCostMv(models.Model):
    resource_fk_key = models.FloatField()
    cost = models.FloatField(blank=True, null=True)
    total_entries = models.FloatField(blank=True, null=True)
    num_entries = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mth_resource_cost_mv'


class MthShiftGregorianDenormMv(models.Model):
    shift_workday_pk_key = models.FloatField()
    shift_date = models.DateField()
    plant_fk_key = models.FloatField()
    system_fk_key = models.FloatField()
    from_date = models.DateField(blank=True, null=True)
    to_date = models.DateField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    calendar_month_id = models.FloatField(blank=True, null=True)
    calendar_quarter_id = models.FloatField(blank=True, null=True)
    calendar_year_id = models.FloatField(blank=True, null=True)
    calendar_month_start_date = models.DateField(blank=True, null=True)
    calendar_quarter_start_date = models.DateField(blank=True, null=True)
    calendar_year_start_date = models.DateField(blank=True, null=True)
    rowid_ws = models.TextField(blank=True, null=True)  # This field type is a guess.
    rowid_gc = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'mth_shift_gregorian_denorm_mv'


class MtlMaterialTransacFeb12(models.Model):
    transaction_header_id = models.FloatField(blank=True, null=True)
    transaction_temp_id = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    transaction_mode = models.FloatField(blank=True, null=True)
    lock_flag = models.CharField(max_length=1, blank=True, null=True)
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    organization_id = models.FloatField()
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    locator_id = models.FloatField(blank=True, null=True)
    transaction_quantity = models.FloatField()
    primary_quantity = models.FloatField()
    transaction_uom = models.CharField(max_length=3)
    transaction_cost = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_action_id = models.FloatField()
    transaction_source_type_id = models.FloatField()
    transaction_source_id = models.FloatField(blank=True, null=True)
    transaction_source_name = models.CharField(max_length=80, blank=True, null=True)
    transaction_date = models.DateField()
    acct_period_id = models.FloatField()
    distribution_account_id = models.FloatField(blank=True, null=True)
    transaction_reference = models.CharField(max_length=240, blank=True, null=True)
    requisition_line_id = models.FloatField(blank=True, null=True)
    requisition_distribution_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    lot_number = models.CharField(max_length=80, blank=True, null=True)
    lot_expiration_date = models.DateField(blank=True, null=True)
    serial_number = models.CharField(max_length=30, blank=True, null=True)
    receiving_document = models.CharField(max_length=10, blank=True, null=True)
    demand_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    move_transaction_id = models.FloatField(blank=True, null=True)
    completion_transaction_id = models.FloatField(blank=True, null=True)
    wip_entity_type = models.FloatField(blank=True, null=True)
    schedule_id = models.FloatField(blank=True, null=True)
    repetitive_line_id = models.FloatField(blank=True, null=True)
    employee_code = models.CharField(max_length=10, blank=True, null=True)
    primary_switch = models.FloatField(blank=True, null=True)
    schedule_update_code = models.FloatField(blank=True, null=True)
    setup_teardown_code = models.FloatField(blank=True, null=True)
    item_ordering = models.FloatField(blank=True, null=True)
    negative_req_flag = models.FloatField(blank=True, null=True)
    operation_seq_num = models.FloatField(blank=True, null=True)
    picking_line_id = models.FloatField(blank=True, null=True)
    trx_source_line_id = models.FloatField(blank=True, null=True)
    trx_source_delivery_id = models.FloatField(blank=True, null=True)
    physical_adjustment_id = models.FloatField(blank=True, null=True)
    cycle_count_id = models.FloatField(blank=True, null=True)
    rma_line_id = models.FloatField(blank=True, null=True)
    customer_ship_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    encumbrance_account = models.FloatField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    ship_to_location = models.FloatField(blank=True, null=True)
    shipment_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost = models.FloatField(blank=True, null=True)
    transportation_cost = models.FloatField(blank=True, null=True)
    transportation_account = models.FloatField(blank=True, null=True)
    freight_code = models.CharField(max_length=30, blank=True, null=True)
    containers = models.FloatField(blank=True, null=True)
    waybill_airbill = models.CharField(max_length=20, blank=True, null=True)
    expected_arrival_date = models.DateField(blank=True, null=True)
    transfer_subinventory = models.CharField(max_length=10, blank=True, null=True)
    transfer_organization = models.FloatField(blank=True, null=True)
    transfer_to_location = models.FloatField(blank=True, null=True)
    new_average_cost = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    percentage_change = models.FloatField(blank=True, null=True)
    material_allocation_temp_id = models.FloatField(blank=True, null=True)
    demand_source_header_id = models.FloatField(blank=True, null=True)
    demand_source_line = models.CharField(max_length=30, blank=True, null=True)
    demand_source_delivery = models.CharField(max_length=30, blank=True, null=True)
    item_segments = models.CharField(max_length=240, blank=True, null=True)
    item_description = models.CharField(max_length=240, blank=True, null=True)
    item_trx_enabled_flag = models.CharField(max_length=1, blank=True, null=True)
    item_location_control_code = models.FloatField(blank=True, null=True)
    item_restrict_subinv_code = models.FloatField(blank=True, null=True)
    item_restrict_locators_code = models.FloatField(blank=True, null=True)
    item_revision_qty_control_code = models.FloatField(blank=True, null=True)
    item_primary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_uom_class = models.CharField(max_length=10, blank=True, null=True)
    item_shelf_life_code = models.FloatField(blank=True, null=True)
    item_shelf_life_days = models.FloatField(blank=True, null=True)
    item_lot_control_code = models.FloatField(blank=True, null=True)
    item_serial_control_code = models.FloatField(blank=True, null=True)
    item_inventory_asset_flag = models.CharField(max_length=1, blank=True, null=True)
    allowed_units_lookup_code = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    wip_supply_type = models.FloatField(blank=True, null=True)
    supply_subinventory = models.CharField(max_length=10, blank=True, null=True)
    supply_locator_id = models.FloatField(blank=True, null=True)
    valid_subinventory_flag = models.CharField(max_length=1, blank=True, null=True)
    valid_locator_flag = models.CharField(max_length=1, blank=True, null=True)
    locator_segments = models.CharField(max_length=240, blank=True, null=True)
    current_locator_control_code = models.FloatField(blank=True, null=True)
    number_of_lots_entered = models.FloatField(blank=True, null=True)
    wip_commit_flag = models.CharField(max_length=1, blank=True, null=True)
    next_lot_number = models.CharField(max_length=30, blank=True, null=True)
    lot_alpha_prefix = models.CharField(max_length=30, blank=True, null=True)
    next_serial_number = models.CharField(max_length=30, blank=True, null=True)
    serial_alpha_prefix = models.CharField(max_length=30, blank=True, null=True)
    shippable_flag = models.CharField(max_length=1, blank=True, null=True)
    posting_flag = models.CharField(max_length=1, blank=True, null=True)
    required_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    movement_id = models.FloatField(blank=True, null=True)
    reservation_quantity = models.FloatField(blank=True, null=True)
    shipped_quantity = models.FloatField(blank=True, null=True)
    transaction_line_number = models.FloatField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    to_task_id = models.BigIntegerField(blank=True, null=True)
    source_task_id = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    source_project_id = models.FloatField(blank=True, null=True)
    pa_expenditure_org_id = models.FloatField(blank=True, null=True)
    to_project_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    final_completion_flag = models.CharField(max_length=1, blank=True, null=True)
    transfer_percentage = models.FloatField(blank=True, null=True)
    transaction_sequence_id = models.FloatField(blank=True, null=True)
    material_account = models.FloatField(blank=True, null=True)
    material_overhead_account = models.FloatField(blank=True, null=True)
    resource_account = models.FloatField(blank=True, null=True)
    outside_processing_account = models.FloatField(blank=True, null=True)
    overhead_account = models.FloatField(blank=True, null=True)
    flow_schedule = models.CharField(max_length=1, blank=True, null=True)
    cost_group_id = models.FloatField(blank=True, null=True)
    demand_class = models.CharField(max_length=30, blank=True, null=True)
    qa_collection_id = models.FloatField(blank=True, null=True)
    kanban_card_id = models.FloatField(blank=True, null=True)
    overcompletion_transaction_qty = models.FloatField(blank=True, null=True)
    overcompletion_primary_qty = models.FloatField(blank=True, null=True)
    overcompletion_transaction_id = models.FloatField(blank=True, null=True)
    end_item_unit_number = models.CharField(max_length=60, blank=True, null=True)
    scheduled_payback_date = models.DateField(blank=True, null=True)
    line_type_code = models.FloatField(blank=True, null=True)
    parent_transaction_temp_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    move_order_line_id = models.FloatField(blank=True, null=True)
    task_group_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    reservation_id = models.FloatField(blank=True, null=True)
    common_bom_seq_id = models.FloatField(blank=True, null=True)
    common_routing_seq_id = models.FloatField(blank=True, null=True)
    org_cost_group_id = models.FloatField(blank=True, null=True)
    cost_type_id = models.FloatField(blank=True, null=True)
    transaction_status = models.FloatField(blank=True, null=True)
    standard_operation_id = models.FloatField(blank=True, null=True)
    task_priority = models.FloatField(blank=True, null=True)
    wms_task_type = models.FloatField(blank=True, null=True)
    parent_line_id = models.FloatField(blank=True, null=True)
    source_lot_number = models.CharField(max_length=80, blank=True, null=True)
    transfer_cost_group_id = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    transfer_lpn_id = models.FloatField(blank=True, null=True)
    wms_task_status = models.FloatField(blank=True, null=True)
    content_lpn_id = models.FloatField(blank=True, null=True)
    container_item_id = models.FloatField(blank=True, null=True)
    cartonization_id = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    rebuild_item_id = models.FloatField(blank=True, null=True)
    rebuild_serial_number = models.CharField(max_length=30, blank=True, null=True)
    rebuild_activity_id = models.FloatField(blank=True, null=True)
    rebuild_job_name = models.CharField(max_length=240, blank=True, null=True)
    organization_type = models.FloatField(blank=True, null=True)
    transfer_organization_type = models.FloatField(blank=True, null=True)
    owning_organization_id = models.FloatField(blank=True, null=True)
    owning_tp_type = models.FloatField(blank=True, null=True)
    xfr_owning_organization_id = models.FloatField(blank=True, null=True)
    transfer_owning_tp_type = models.FloatField(blank=True, null=True)
    planning_organization_id = models.FloatField(blank=True, null=True)
    planning_tp_type = models.FloatField(blank=True, null=True)
    xfr_planning_organization_id = models.FloatField(blank=True, null=True)
    transfer_planning_tp_type = models.FloatField(blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=240, blank=True, null=True)
    secondary_transaction_quantity = models.FloatField(blank=True, null=True)
    allocated_lpn_id = models.FloatField(blank=True, null=True)
    schedule_number = models.CharField(max_length=60, blank=True, null=True)
    scheduled_flag = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=10, blank=True, null=True)
    schedule_group = models.FloatField(blank=True, null=True)
    build_sequence = models.FloatField(blank=True, null=True)
    bom_revision = models.CharField(max_length=3, blank=True, null=True)
    routing_revision = models.CharField(max_length=3, blank=True, null=True)
    bom_revision_date = models.DateField(blank=True, null=True)
    routing_revision_date = models.DateField(blank=True, null=True)
    alternate_bom_designator = models.CharField(max_length=10, blank=True, null=True)
    alternate_routing_designator = models.CharField(max_length=10, blank=True, null=True)
    transaction_batch_id = models.FloatField(blank=True, null=True)
    transaction_batch_seq = models.FloatField(blank=True, null=True)
    operation_plan_id = models.FloatField(blank=True, null=True)
    intransit_account = models.FloatField(blank=True, null=True)
    fob_point = models.FloatField(blank=True, null=True)
    move_order_header_id = models.FloatField(blank=True, null=True)
    serial_allocated_flag = models.CharField(max_length=1, blank=True, null=True)
    trx_flow_header_id = models.FloatField(blank=True, null=True)
    logical_trx_type_code = models.FloatField(blank=True, null=True)
    original_transaction_temp_id = models.FloatField(blank=True, null=True)
    transfer_secondary_quantity = models.FloatField(blank=True, null=True)
    transfer_secondary_uom = models.CharField(max_length=3, blank=True, null=True)
    relieve_reservations_flag = models.CharField(max_length=1, blank=True, null=True)
    relieve_high_level_rsv_flag = models.CharField(max_length=1, blank=True, null=True)
    transfer_price = models.FloatField(blank=True, null=True)
    material_expense_account = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_material_transac_feb12'


class MtlMaterialTxnBk05112012(models.Model):
    transaction_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    organization_id = models.FloatField()
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    locator_id = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_action_id = models.FloatField()
    transaction_source_type_id = models.FloatField()
    transaction_source_id = models.FloatField(blank=True, null=True)
    transaction_source_name = models.CharField(max_length=80, blank=True, null=True)
    transaction_quantity = models.FloatField()
    transaction_uom = models.CharField(max_length=3)
    primary_quantity = models.FloatField()
    transaction_date = models.DateField()
    variance_amount = models.FloatField(blank=True, null=True)
    acct_period_id = models.FloatField(blank=True, null=True)
    transaction_reference = models.CharField(max_length=240, blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    distribution_account_id = models.FloatField(blank=True, null=True)
    encumbrance_account = models.FloatField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    cost_update_id = models.FloatField(blank=True, null=True)
    costed_flag = models.CharField(max_length=1, blank=True, null=True)
    transaction_group_id = models.FloatField(blank=True, null=True)
    invoiced_flag = models.CharField(max_length=1, blank=True, null=True)
    actual_cost = models.FloatField(blank=True, null=True)
    transaction_cost = models.FloatField(blank=True, null=True)
    prior_cost = models.FloatField(blank=True, null=True)
    new_cost = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    quantity_adjusted = models.FloatField(blank=True, null=True)
    employee_code = models.CharField(max_length=10, blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    operation_seq_num = models.FloatField(blank=True, null=True)
    master_schedule_update_code = models.CharField(max_length=10, blank=True, null=True)
    receiving_document = models.CharField(max_length=10, blank=True, null=True)
    picking_line_id = models.FloatField(blank=True, null=True)
    trx_source_line_id = models.FloatField(blank=True, null=True)
    trx_source_delivery_id = models.FloatField(blank=True, null=True)
    repetitive_line_id = models.FloatField(blank=True, null=True)
    physical_adjustment_id = models.FloatField(blank=True, null=True)
    cycle_count_id = models.FloatField(blank=True, null=True)
    rma_line_id = models.FloatField(blank=True, null=True)
    transfer_transaction_id = models.FloatField(blank=True, null=True)
    transaction_set_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    move_transaction_id = models.FloatField(blank=True, null=True)
    completion_transaction_id = models.FloatField(blank=True, null=True)
    shortage_process_code = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_organization_id = models.FloatField(blank=True, null=True)
    transfer_subinventory = models.CharField(max_length=10, blank=True, null=True)
    transfer_locator_id = models.FloatField(blank=True, null=True)
    shipment_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost = models.FloatField(blank=True, null=True)
    transportation_dist_account = models.FloatField(blank=True, null=True)
    transportation_cost = models.FloatField(blank=True, null=True)
    transfer_cost_dist_account = models.FloatField(blank=True, null=True)
    waybill_airbill = models.CharField(max_length=20, blank=True, null=True)
    freight_code = models.CharField(max_length=30, blank=True, null=True)
    number_of_containers = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    percentage_change = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    movement_id = models.FloatField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    to_task_id = models.BigIntegerField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    to_project_id = models.BigIntegerField(blank=True, null=True)
    source_project_id = models.FloatField(blank=True, null=True)
    pa_expenditure_org_id = models.FloatField(blank=True, null=True)
    source_task_id = models.FloatField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    prior_costed_quantity = models.FloatField(blank=True, null=True)
    transfer_prior_costed_quantity = models.FloatField(blank=True, null=True)
    final_completion_flag = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collected = models.CharField(max_length=1, blank=True, null=True)
    pm_cost_collector_group_id = models.FloatField(blank=True, null=True)
    shipment_costed = models.CharField(max_length=1, blank=True, null=True)
    transfer_percentage = models.FloatField(blank=True, null=True)
    material_account = models.FloatField(blank=True, null=True)
    material_overhead_account = models.FloatField(blank=True, null=True)
    resource_account = models.FloatField(blank=True, null=True)
    outside_processing_account = models.FloatField(blank=True, null=True)
    overhead_account = models.FloatField(blank=True, null=True)
    cost_group_id = models.FloatField(blank=True, null=True)
    transfer_cost_group_id = models.FloatField(blank=True, null=True)
    flow_schedule = models.CharField(max_length=1, blank=True, null=True)
    qa_collection_id = models.FloatField(blank=True, null=True)
    overcompletion_transaction_qty = models.FloatField(blank=True, null=True)
    overcompletion_primary_qty = models.FloatField(blank=True, null=True)
    overcompletion_transaction_id = models.FloatField(blank=True, null=True)
    mvt_stat_status = models.CharField(max_length=240, blank=True, null=True)
    common_bom_seq_id = models.FloatField(blank=True, null=True)
    common_routing_seq_id = models.FloatField(blank=True, null=True)
    org_cost_group_id = models.FloatField(blank=True, null=True)
    cost_type_id = models.FloatField(blank=True, null=True)
    periodic_primary_quantity = models.FloatField(blank=True, null=True)
    move_order_line_id = models.FloatField(blank=True, null=True)
    task_group_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    transfer_lpn_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    content_lpn_id = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    cost_category_id = models.FloatField(blank=True, null=True)
    organization_type = models.FloatField(blank=True, null=True)
    transfer_organization_type = models.FloatField(blank=True, null=True)
    owning_organization_id = models.FloatField(blank=True, null=True)
    owning_tp_type = models.FloatField(blank=True, null=True)
    xfr_owning_organization_id = models.FloatField(blank=True, null=True)
    transfer_owning_tp_type = models.FloatField(blank=True, null=True)
    planning_organization_id = models.FloatField(blank=True, null=True)
    planning_tp_type = models.FloatField(blank=True, null=True)
    xfr_planning_organization_id = models.FloatField(blank=True, null=True)
    transfer_planning_tp_type = models.FloatField(blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    secondary_transaction_quantity = models.FloatField(blank=True, null=True)
    transaction_group_seq = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    reservation_id = models.FloatField(blank=True, null=True)
    transaction_mode = models.FloatField(blank=True, null=True)
    transaction_batch_id = models.FloatField(blank=True, null=True)
    transaction_batch_seq = models.FloatField(blank=True, null=True)
    intransit_account = models.FloatField(blank=True, null=True)
    fob_point = models.FloatField(blank=True, null=True)
    parent_transaction_id = models.FloatField(blank=True, null=True)
    logical_trx_type_code = models.FloatField(blank=True, null=True)
    trx_flow_header_id = models.FloatField(blank=True, null=True)
    logical_transactions_created = models.FloatField(blank=True, null=True)
    logical_transaction = models.FloatField(blank=True, null=True)
    intercompany_cost = models.FloatField(blank=True, null=True)
    intercompany_pricing_option = models.FloatField(blank=True, null=True)
    intercompany_currency_code = models.CharField(max_length=15, blank=True, null=True)
    original_transaction_temp_id = models.FloatField(blank=True, null=True)
    transfer_price = models.FloatField(blank=True, null=True)
    expense_account_id = models.FloatField(blank=True, null=True)
    cogs_recognition_percent = models.FloatField(blank=True, null=True)
    so_issue_account_type = models.FloatField(blank=True, null=True)
    opm_costed_flag = models.CharField(max_length=1, blank=True, null=True)
    material_expense_account = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_material_txn_bk_05112012'


class MtlMmttBackup(models.Model):
    transaction_header_id = models.FloatField(blank=True, null=True)
    transaction_temp_id = models.FloatField(blank=True, null=True)
    source_code = models.CharField(max_length=30, blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    transaction_mode = models.FloatField(blank=True, null=True)
    lock_flag = models.CharField(max_length=1, blank=True, null=True)
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    organization_id = models.FloatField()
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    locator_id = models.FloatField(blank=True, null=True)
    transaction_quantity = models.FloatField()
    primary_quantity = models.FloatField()
    transaction_uom = models.CharField(max_length=3)
    transaction_cost = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_action_id = models.FloatField()
    transaction_source_type_id = models.FloatField()
    transaction_source_id = models.FloatField(blank=True, null=True)
    transaction_source_name = models.CharField(max_length=30, blank=True, null=True)
    transaction_date = models.DateField()
    acct_period_id = models.FloatField()
    distribution_account_id = models.FloatField(blank=True, null=True)
    transaction_reference = models.CharField(max_length=240, blank=True, null=True)
    requisition_line_id = models.FloatField(blank=True, null=True)
    requisition_distribution_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    lot_number = models.CharField(max_length=30, blank=True, null=True)
    lot_expiration_date = models.DateField(blank=True, null=True)
    serial_number = models.CharField(max_length=30, blank=True, null=True)
    receiving_document = models.CharField(max_length=10, blank=True, null=True)
    demand_id = models.FloatField(blank=True, null=True)
    rcv_transaction_id = models.FloatField(blank=True, null=True)
    move_transaction_id = models.FloatField(blank=True, null=True)
    completion_transaction_id = models.FloatField(blank=True, null=True)
    wip_entity_type = models.FloatField(blank=True, null=True)
    schedule_id = models.FloatField(blank=True, null=True)
    repetitive_line_id = models.FloatField(blank=True, null=True)
    employee_code = models.CharField(max_length=10, blank=True, null=True)
    primary_switch = models.FloatField(blank=True, null=True)
    schedule_update_code = models.FloatField(blank=True, null=True)
    setup_teardown_code = models.FloatField(blank=True, null=True)
    item_ordering = models.FloatField(blank=True, null=True)
    negative_req_flag = models.FloatField(blank=True, null=True)
    operation_seq_num = models.FloatField(blank=True, null=True)
    picking_line_id = models.FloatField(blank=True, null=True)
    trx_source_line_id = models.FloatField(blank=True, null=True)
    trx_source_delivery_id = models.FloatField(blank=True, null=True)
    physical_adjustment_id = models.FloatField(blank=True, null=True)
    cycle_count_id = models.FloatField(blank=True, null=True)
    rma_line_id = models.FloatField(blank=True, null=True)
    customer_ship_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    encumbrance_account = models.FloatField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    ship_to_location = models.FloatField(blank=True, null=True)
    shipment_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost = models.FloatField(blank=True, null=True)
    transportation_cost = models.FloatField(blank=True, null=True)
    transportation_account = models.FloatField(blank=True, null=True)
    freight_code = models.CharField(max_length=25, blank=True, null=True)
    containers = models.FloatField(blank=True, null=True)
    waybill_airbill = models.CharField(max_length=20, blank=True, null=True)
    expected_arrival_date = models.DateField(blank=True, null=True)
    transfer_subinventory = models.CharField(max_length=10, blank=True, null=True)
    transfer_organization = models.FloatField(blank=True, null=True)
    transfer_to_location = models.FloatField(blank=True, null=True)
    new_average_cost = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    percentage_change = models.FloatField(blank=True, null=True)
    material_allocation_temp_id = models.FloatField(blank=True, null=True)
    demand_source_header_id = models.FloatField(blank=True, null=True)
    demand_source_line = models.CharField(max_length=30, blank=True, null=True)
    demand_source_delivery = models.CharField(max_length=30, blank=True, null=True)
    item_segments = models.CharField(max_length=240, blank=True, null=True)
    item_description = models.CharField(max_length=240, blank=True, null=True)
    item_trx_enabled_flag = models.CharField(max_length=1, blank=True, null=True)
    item_location_control_code = models.FloatField(blank=True, null=True)
    item_restrict_subinv_code = models.FloatField(blank=True, null=True)
    item_restrict_locators_code = models.FloatField(blank=True, null=True)
    item_revision_qty_control_code = models.FloatField(blank=True, null=True)
    item_primary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_uom_class = models.CharField(max_length=10, blank=True, null=True)
    item_shelf_life_code = models.FloatField(blank=True, null=True)
    item_shelf_life_days = models.FloatField(blank=True, null=True)
    item_lot_control_code = models.FloatField(blank=True, null=True)
    item_serial_control_code = models.FloatField(blank=True, null=True)
    item_inventory_asset_flag = models.CharField(max_length=1, blank=True, null=True)
    allowed_units_lookup_code = models.FloatField(blank=True, null=True)
    department_id = models.FloatField(blank=True, null=True)
    department_code = models.CharField(max_length=10, blank=True, null=True)
    wip_supply_type = models.FloatField(blank=True, null=True)
    supply_subinventory = models.CharField(max_length=10, blank=True, null=True)
    supply_locator_id = models.FloatField(blank=True, null=True)
    valid_subinventory_flag = models.CharField(max_length=1, blank=True, null=True)
    valid_locator_flag = models.CharField(max_length=1, blank=True, null=True)
    locator_segments = models.CharField(max_length=240, blank=True, null=True)
    current_locator_control_code = models.FloatField(blank=True, null=True)
    number_of_lots_entered = models.FloatField(blank=True, null=True)
    wip_commit_flag = models.CharField(max_length=1, blank=True, null=True)
    next_lot_number = models.CharField(max_length=30, blank=True, null=True)
    lot_alpha_prefix = models.CharField(max_length=30, blank=True, null=True)
    next_serial_number = models.CharField(max_length=30, blank=True, null=True)
    serial_alpha_prefix = models.CharField(max_length=30, blank=True, null=True)
    shippable_flag = models.CharField(max_length=1, blank=True, null=True)
    posting_flag = models.CharField(max_length=1, blank=True, null=True)
    required_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    movement_id = models.FloatField(blank=True, null=True)
    reservation_quantity = models.FloatField(blank=True, null=True)
    shipped_quantity = models.FloatField(blank=True, null=True)
    transaction_line_number = models.FloatField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    to_task_id = models.BigIntegerField(blank=True, null=True)
    source_task_id = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    source_project_id = models.FloatField(blank=True, null=True)
    pa_expenditure_org_id = models.FloatField(blank=True, null=True)
    to_project_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    final_completion_flag = models.CharField(max_length=1, blank=True, null=True)
    transfer_percentage = models.FloatField(blank=True, null=True)
    transaction_sequence_id = models.FloatField(blank=True, null=True)
    material_account = models.FloatField(blank=True, null=True)
    material_overhead_account = models.FloatField(blank=True, null=True)
    resource_account = models.FloatField(blank=True, null=True)
    outside_processing_account = models.FloatField(blank=True, null=True)
    overhead_account = models.FloatField(blank=True, null=True)
    flow_schedule = models.CharField(max_length=1, blank=True, null=True)
    cost_group_id = models.FloatField(blank=True, null=True)
    demand_class = models.CharField(max_length=30, blank=True, null=True)
    qa_collection_id = models.FloatField(blank=True, null=True)
    kanban_card_id = models.FloatField(blank=True, null=True)
    overcompletion_transaction_qty = models.FloatField(blank=True, null=True)
    overcompletion_primary_qty = models.FloatField(blank=True, null=True)
    overcompletion_transaction_id = models.FloatField(blank=True, null=True)
    end_item_unit_number = models.CharField(max_length=60, blank=True, null=True)
    scheduled_payback_date = models.DateField(blank=True, null=True)
    line_type_code = models.FloatField(blank=True, null=True)
    parent_transaction_temp_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    move_order_line_id = models.FloatField(blank=True, null=True)
    task_group_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    reservation_id = models.FloatField(blank=True, null=True)
    common_bom_seq_id = models.FloatField(blank=True, null=True)
    common_routing_seq_id = models.FloatField(blank=True, null=True)
    org_cost_group_id = models.FloatField(blank=True, null=True)
    cost_type_id = models.FloatField(blank=True, null=True)
    transaction_status = models.FloatField(blank=True, null=True)
    standard_operation_id = models.FloatField(blank=True, null=True)
    task_priority = models.FloatField(blank=True, null=True)
    wms_task_type = models.FloatField(blank=True, null=True)
    parent_line_id = models.FloatField(blank=True, null=True)
    source_lot_number = models.CharField(max_length=30, blank=True, null=True)
    transfer_cost_group_id = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    transfer_lpn_id = models.FloatField(blank=True, null=True)
    wms_task_status = models.FloatField(blank=True, null=True)
    content_lpn_id = models.FloatField(blank=True, null=True)
    container_item_id = models.FloatField(blank=True, null=True)
    cartonization_id = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    rebuild_item_id = models.FloatField(blank=True, null=True)
    rebuild_serial_number = models.CharField(max_length=30, blank=True, null=True)
    rebuild_activity_id = models.FloatField(blank=True, null=True)
    rebuild_job_name = models.CharField(max_length=240, blank=True, null=True)
    organization_type = models.FloatField(blank=True, null=True)
    transfer_organization_type = models.FloatField(blank=True, null=True)
    owning_organization_id = models.FloatField(blank=True, null=True)
    owning_tp_type = models.FloatField(blank=True, null=True)
    xfr_owning_organization_id = models.FloatField(blank=True, null=True)
    transfer_owning_tp_type = models.FloatField(blank=True, null=True)
    planning_organization_id = models.FloatField(blank=True, null=True)
    planning_tp_type = models.FloatField(blank=True, null=True)
    xfr_planning_organization_id = models.FloatField(blank=True, null=True)
    transfer_planning_tp_type = models.FloatField(blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=240, blank=True, null=True)
    secondary_transaction_quantity = models.FloatField(blank=True, null=True)
    transaction_group_id = models.FloatField(blank=True, null=True)
    transaction_group_seq = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_mmtt_backup'


class MtlMsntBackup(models.Model):
    transaction_temp_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    vendor_serial_number = models.CharField(max_length=30, blank=True, null=True)
    vendor_lot_number = models.CharField(max_length=30, blank=True, null=True)
    fm_serial_number = models.CharField(max_length=30, blank=True, null=True)
    to_serial_number = models.CharField(max_length=30, blank=True, null=True)
    serial_prefix = models.CharField(max_length=30, blank=True, null=True)
    error_code = models.CharField(max_length=30, blank=True, null=True)
    parent_serial_number = models.CharField(max_length=30, blank=True, null=True)
    group_header_id = models.FloatField(blank=True, null=True)
    end_item_unit_number = models.CharField(max_length=30, blank=True, null=True)
    serial_attribute_category = models.CharField(max_length=30, blank=True, null=True)
    country_of_origin = models.CharField(max_length=30, blank=True, null=True)
    origination_date = models.DateField(blank=True, null=True)
    c_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute21 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute22 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute23 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute24 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute25 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute26 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute27 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute28 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute29 = models.CharField(max_length=30, blank=True, null=True)
    c_attribute30 = models.CharField(max_length=30, blank=True, null=True)
    d_attribute1 = models.DateField(blank=True, null=True)
    d_attribute2 = models.DateField(blank=True, null=True)
    d_attribute3 = models.DateField(blank=True, null=True)
    d_attribute4 = models.DateField(blank=True, null=True)
    d_attribute5 = models.DateField(blank=True, null=True)
    d_attribute6 = models.DateField(blank=True, null=True)
    d_attribute7 = models.DateField(blank=True, null=True)
    d_attribute8 = models.DateField(blank=True, null=True)
    d_attribute9 = models.DateField(blank=True, null=True)
    d_attribute10 = models.DateField(blank=True, null=True)
    d_attribute11 = models.DateField(blank=True, null=True)
    d_attribute12 = models.DateField(blank=True, null=True)
    d_attribute13 = models.DateField(blank=True, null=True)
    d_attribute14 = models.DateField(blank=True, null=True)
    d_attribute15 = models.DateField(blank=True, null=True)
    d_attribute16 = models.DateField(blank=True, null=True)
    d_attribute17 = models.DateField(blank=True, null=True)
    d_attribute18 = models.DateField(blank=True, null=True)
    d_attribute19 = models.DateField(blank=True, null=True)
    d_attribute20 = models.DateField(blank=True, null=True)
    n_attribute1 = models.FloatField(blank=True, null=True)
    n_attribute2 = models.FloatField(blank=True, null=True)
    n_attribute3 = models.FloatField(blank=True, null=True)
    n_attribute4 = models.FloatField(blank=True, null=True)
    n_attribute5 = models.FloatField(blank=True, null=True)
    n_attribute6 = models.FloatField(blank=True, null=True)
    n_attribute7 = models.FloatField(blank=True, null=True)
    n_attribute8 = models.FloatField(blank=True, null=True)
    n_attribute9 = models.FloatField(blank=True, null=True)
    n_attribute10 = models.FloatField(blank=True, null=True)
    n_attribute11 = models.BigIntegerField(blank=True, null=True)
    n_attribute12 = models.BigIntegerField(blank=True, null=True)
    n_attribute13 = models.BigIntegerField(blank=True, null=True)
    n_attribute14 = models.BigIntegerField(blank=True, null=True)
    n_attribute15 = models.BigIntegerField(blank=True, null=True)
    n_attribute16 = models.BigIntegerField(blank=True, null=True)
    n_attribute17 = models.BigIntegerField(blank=True, null=True)
    n_attribute18 = models.BigIntegerField(blank=True, null=True)
    n_attribute19 = models.BigIntegerField(blank=True, null=True)
    n_attribute20 = models.BigIntegerField(blank=True, null=True)
    n_attribute21 = models.BigIntegerField(blank=True, null=True)
    n_attribute22 = models.BigIntegerField(blank=True, null=True)
    n_attribute23 = models.BigIntegerField(blank=True, null=True)
    n_attribute24 = models.BigIntegerField(blank=True, null=True)
    n_attribute25 = models.BigIntegerField(blank=True, null=True)
    n_attribute26 = models.BigIntegerField(blank=True, null=True)
    n_attribute27 = models.BigIntegerField(blank=True, null=True)
    n_attribute28 = models.BigIntegerField(blank=True, null=True)
    n_attribute29 = models.BigIntegerField(blank=True, null=True)
    n_attribute30 = models.BigIntegerField(blank=True, null=True)
    status_id = models.BigIntegerField(blank=True, null=True)
    territory_code = models.CharField(max_length=30, blank=True, null=True)
    time_since_new = models.FloatField(blank=True, null=True)
    cycles_since_new = models.FloatField(blank=True, null=True)
    time_since_overhaul = models.FloatField(blank=True, null=True)
    cycles_since_overhaul = models.FloatField(blank=True, null=True)
    time_since_repair = models.FloatField(blank=True, null=True)
    cycles_since_repair = models.FloatField(blank=True, null=True)
    time_since_visit = models.FloatField(blank=True, null=True)
    cycles_since_visit = models.FloatField(blank=True, null=True)
    time_since_mark = models.FloatField(blank=True, null=True)
    cycles_since_mark = models.FloatField(blank=True, null=True)
    numer_of_repairs = models.CharField(max_length=30, blank=True, null=True)
    number_of_repairs = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_msnt_backup'


class MtlMtltBackup(models.Model):
    transaction_temp_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.FloatField()
    creation_date = models.DateField()
    created_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    transaction_quantity = models.FloatField()
    primary_quantity = models.FloatField()
    lot_number = models.CharField(max_length=30)
    lot_expiration_date = models.DateField(blank=True, null=True)
    error_code = models.CharField(max_length=240, blank=True, null=True)
    serial_transaction_temp_id = models.FloatField(blank=True, null=True)
    group_header_id = models.FloatField(blank=True, null=True)
    put_away_rule_id = models.FloatField(blank=True, null=True)
    pick_rule_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=256, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    supplier_lot_number = models.CharField(max_length=150, blank=True, null=True)
    country_of_origin = models.CharField(max_length=150, blank=True, null=True)
    origination_date = models.DateField(blank=True, null=True)
    date_code = models.CharField(max_length=150, blank=True, null=True)
    grade_code = models.CharField(max_length=150, blank=True, null=True)
    change_date = models.DateField(blank=True, null=True)
    maturity_date = models.DateField(blank=True, null=True)
    status_id = models.FloatField(blank=True, null=True)
    retest_date = models.DateField(blank=True, null=True)
    age = models.FloatField(blank=True, null=True)
    item_size = models.FloatField(blank=True, null=True)
    color = models.CharField(max_length=150, blank=True, null=True)
    volume = models.FloatField(blank=True, null=True)
    volume_uom = models.CharField(max_length=3, blank=True, null=True)
    place_of_origin = models.CharField(max_length=150, blank=True, null=True)
    kill_date = models.DateField(blank=True, null=True)
    best_by_date = models.DateField(blank=True, null=True)
    length = models.FloatField(blank=True, null=True)
    length_uom = models.CharField(max_length=3, blank=True, null=True)
    recycled_content = models.FloatField(blank=True, null=True)
    thickness = models.FloatField(blank=True, null=True)
    thickness_uom = models.CharField(max_length=3, blank=True, null=True)
    width = models.FloatField(blank=True, null=True)
    width_uom = models.CharField(max_length=3, blank=True, null=True)
    curl_wrinkle_fold = models.CharField(max_length=150, blank=True, null=True)
    lot_attribute_category = models.CharField(max_length=30, blank=True, null=True)
    c_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute21 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute22 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute23 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute24 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute25 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute26 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute27 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute28 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute29 = models.CharField(max_length=150, blank=True, null=True)
    c_attribute30 = models.CharField(max_length=150, blank=True, null=True)
    d_attribute1 = models.DateField(blank=True, null=True)
    d_attribute2 = models.DateField(blank=True, null=True)
    d_attribute3 = models.DateField(blank=True, null=True)
    d_attribute4 = models.DateField(blank=True, null=True)
    d_attribute5 = models.DateField(blank=True, null=True)
    d_attribute6 = models.DateField(blank=True, null=True)
    d_attribute7 = models.DateField(blank=True, null=True)
    d_attribute8 = models.DateField(blank=True, null=True)
    d_attribute9 = models.DateField(blank=True, null=True)
    d_attribute10 = models.DateField(blank=True, null=True)
    d_attribute11 = models.DateField(blank=True, null=True)
    d_attribute12 = models.DateField(blank=True, null=True)
    d_attribute13 = models.DateField(blank=True, null=True)
    d_attribute14 = models.DateField(blank=True, null=True)
    d_attribute15 = models.DateField(blank=True, null=True)
    d_attribute16 = models.DateField(blank=True, null=True)
    d_attribute17 = models.DateField(blank=True, null=True)
    d_attribute18 = models.DateField(blank=True, null=True)
    d_attribute19 = models.DateField(blank=True, null=True)
    d_attribute20 = models.DateField(blank=True, null=True)
    n_attribute1 = models.FloatField(blank=True, null=True)
    n_attribute2 = models.FloatField(blank=True, null=True)
    n_attribute3 = models.FloatField(blank=True, null=True)
    n_attribute4 = models.FloatField(blank=True, null=True)
    n_attribute5 = models.FloatField(blank=True, null=True)
    n_attribute6 = models.FloatField(blank=True, null=True)
    n_attribute7 = models.FloatField(blank=True, null=True)
    n_attribute8 = models.FloatField(blank=True, null=True)
    n_attribute9 = models.FloatField(blank=True, null=True)
    n_attribute10 = models.FloatField(blank=True, null=True)
    n_attribute11 = models.FloatField(blank=True, null=True)
    n_attribute12 = models.FloatField(blank=True, null=True)
    n_attribute13 = models.FloatField(blank=True, null=True)
    n_attribute14 = models.FloatField(blank=True, null=True)
    n_attribute15 = models.FloatField(blank=True, null=True)
    n_attribute16 = models.FloatField(blank=True, null=True)
    n_attribute17 = models.FloatField(blank=True, null=True)
    n_attribute18 = models.FloatField(blank=True, null=True)
    n_attribute19 = models.FloatField(blank=True, null=True)
    n_attribute20 = models.FloatField(blank=True, null=True)
    n_attribute21 = models.FloatField(blank=True, null=True)
    n_attribute22 = models.FloatField(blank=True, null=True)
    n_attribute23 = models.FloatField(blank=True, null=True)
    n_attribute24 = models.FloatField(blank=True, null=True)
    n_attribute25 = models.FloatField(blank=True, null=True)
    n_attribute26 = models.FloatField(blank=True, null=True)
    n_attribute27 = models.FloatField(blank=True, null=True)
    n_attribute28 = models.FloatField(blank=True, null=True)
    n_attribute29 = models.FloatField(blank=True, null=True)
    n_attribute30 = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    territory_code = models.CharField(max_length=30, blank=True, null=True)
    sublot_num = models.CharField(max_length=30, blank=True, null=True)
    secondary_quantity = models.FloatField(blank=True, null=True)
    secondary_unit_of_measure = models.CharField(max_length=25, blank=True, null=True)
    qc_grade = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_mtlt_backup'


class MtlMtrlBackup(models.Model):
    line_id = models.FloatField()
    header_id = models.FloatField()
    line_number = models.FloatField()
    organization_id = models.FloatField()
    inventory_item_id = models.FloatField()
    revision = models.CharField(max_length=3, blank=True, null=True)
    from_subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    from_locator_id = models.FloatField(blank=True, null=True)
    to_subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    to_locator_id = models.FloatField(blank=True, null=True)
    to_account_id = models.FloatField(blank=True, null=True)
    lot_number = models.CharField(max_length=30, blank=True, null=True)
    serial_number_start = models.CharField(max_length=30, blank=True, null=True)
    serial_number_end = models.CharField(max_length=30, blank=True, null=True)
    uom_code = models.CharField(max_length=3)
    quantity = models.FloatField()
    quantity_delivered = models.FloatField(blank=True, null=True)
    quantity_detailed = models.FloatField(blank=True, null=True)
    date_required = models.DateField()
    reason_id = models.FloatField(blank=True, null=True)
    reference = models.CharField(max_length=240, blank=True, null=True)
    reference_type_code = models.FloatField(blank=True, null=True)
    reference_id = models.FloatField(blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    transaction_header_id = models.FloatField(blank=True, null=True)
    line_status = models.FloatField()
    status_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_login = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField()
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField()
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    txn_source_id = models.FloatField(blank=True, null=True)
    txn_source_line_id = models.FloatField(blank=True, null=True)
    txn_source_line_detail_id = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField()
    transaction_source_type_id = models.FloatField(blank=True, null=True)
    primary_quantity = models.FloatField(blank=True, null=True)
    to_organization_id = models.FloatField(blank=True, null=True)
    put_away_strategy_id = models.FloatField(blank=True, null=True)
    pick_strategy_id = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    unit_number = models.CharField(max_length=30, blank=True, null=True)
    reference_detail_id = models.FloatField(blank=True, null=True)
    assignment_id = models.FloatField(blank=True, null=True)
    from_cost_group_id = models.FloatField(blank=True, null=True)
    to_cost_group_id = models.FloatField(blank=True, null=True)
    lpn_id = models.FloatField(blank=True, null=True)
    to_lpn_id = models.FloatField(blank=True, null=True)
    pick_slip_number = models.FloatField(blank=True, null=True)
    pick_slip_date = models.DateField(blank=True, null=True)
    from_subinventory_id = models.FloatField(blank=True, null=True)
    to_subinventory_id = models.FloatField(blank=True, null=True)
    inspection_status = models.FloatField(blank=True, null=True)
    pick_methodology_id = models.FloatField(blank=True, null=True)
    container_item_id = models.FloatField(blank=True, null=True)
    carton_grouping_id = models.FloatField(blank=True, null=True)
    backorder_delivery_detail_id = models.FloatField(blank=True, null=True)
    wms_process_flag = models.FloatField(blank=True, null=True)
    ship_set_id = models.FloatField(blank=True, null=True)
    ship_model_id = models.FloatField(blank=True, null=True)
    model_quantity = models.FloatField(blank=True, null=True)
    crossdock_type = models.FloatField(blank=True, null=True)
    required_quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mtl_mtrl_backup'


class OeItemsMv(models.Model):
    item = models.CharField(max_length=1000, blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    item_description = models.CharField(max_length=240, blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    inventory_item = models.CharField(max_length=1000, blank=True, null=True)
    item_identifier_type = models.CharField(max_length=25, blank=True, null=True)
    sold_to_org_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    item_status = models.CharField(max_length=10, blank=True, null=True)
    cross_ref_status = models.CharField(max_length=10, blank=True, null=True)
    address = models.CharField(max_length=1000, blank=True, null=True)
    cust_address = models.CharField(max_length=1000, blank=True, null=True)
    item_definition_level = models.CharField(max_length=100, blank=True, null=True)
    rank = models.FloatField(blank=True, null=True)
    site_use_id = models.FloatField(blank=True, null=True)
    item_definition_level_code = models.CharField(max_length=100, blank=True, null=True)
    language = models.CharField(max_length=4, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    org_independent_flag = models.CharField(max_length=1, blank=True, null=True)
    cross_ref_org_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oe_items_mv'


class OkiBiGrpCntMv(models.Model):
    gcount = models.FloatField(blank=True, null=True)
    sales_group_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'oki_bi_grp_cnt_mv'


class OkiRsGroupMv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    parent_prg_id = models.FloatField(blank=True, null=True)
    immediate_parent_flag = models.CharField(max_length=1, blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_rs_group_mv'


class OkiScmOcrMv(models.Model):
    chr_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    start_date = models.DateField()
    end_date = models.DateField(blank=True, null=True)
    hdate_cancelled = models.DateField(blank=True, null=True)
    hsts_code = models.CharField(max_length=30, blank=True, null=True)
    customer_party_id = models.FloatField()
    salesrep_id = models.FloatField(blank=True, null=True)
    authoring_org_id = models.FloatField()
    complete_k_number = models.CharField(max_length=241, blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    price_nego_f = models.FloatField(blank=True, null=True)
    c_price_nego_f = models.FloatField(blank=True, null=True)
    price_nego_a = models.FloatField(blank=True, null=True)
    c_price_nego_a = models.FloatField(blank=True, null=True)
    price_nego_g = models.FloatField(blank=True, null=True)
    c_price_nego_g = models.FloatField(blank=True, null=True)
    price_nego_sg = models.FloatField(blank=True, null=True)
    c_price_nego_sg = models.FloatField(blank=True, null=True)
    ren_price_nego_f = models.FloatField(blank=True, null=True)
    c_ren_price_nego_f = models.FloatField(blank=True, null=True)
    ren_price_nego_g = models.FloatField(blank=True, null=True)
    c_ren_price_nego_g = models.FloatField(blank=True, null=True)
    ren_price_nego_sg = models.FloatField(blank=True, null=True)
    c_ren_price_nego_sg = models.FloatField(blank=True, null=True)
    renewal_lines = models.FloatField(blank=True, null=True)
    c_renewal_lines = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_scm_ocr_mv'


class OkiSrm001Mv(models.Model):
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    authoring_org_id = models.FloatField()
    customer_party_id = models.FloatField()
    resource_group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    renewal_flag = models.FloatField()
    cle_creation_date = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    p_grace_end_date = models.DateField(blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    exp_renewal_flag = models.FloatField(blank=True, null=True)
    p_term_flag = models.FloatField(blank=True, null=True)
    trn_billed_value_f = models.FloatField(blank=True, null=True)
    trn_billed_value_g = models.FloatField(blank=True, null=True)
    trn_billed_value_sg = models.FloatField(blank=True, null=True)
    trn_billed_value_a = models.FloatField(blank=True, null=True)
    p_price_negotiated_f = models.FloatField(blank=True, null=True)
    p_price_negotiated_g = models.FloatField(blank=True, null=True)
    p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_f = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_g = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_a = models.FloatField(blank=True, null=True)
    price_negotiated_f = models.FloatField(blank=True, null=True)
    price_negotiated_g = models.FloatField(blank=True, null=True)
    price_negotiated_sg = models.FloatField(blank=True, null=True)
    price_negotiated_a = models.FloatField(blank=True, null=True)
    c_trn_billed_value_f = models.FloatField(blank=True, null=True)
    c_trn_billed_value_g = models.FloatField(blank=True, null=True)
    c_trn_billed_value_sg = models.FloatField(blank=True, null=True)
    c_trn_billed_value_a = models.FloatField(blank=True, null=True)
    c_price_negotiated_f = models.FloatField(blank=True, null=True)
    c_price_negotiated_g = models.FloatField(blank=True, null=True)
    c_price_negotiated_sg = models.FloatField(blank=True, null=True)
    c_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    effective_term_date = models.DateField(blank=True, null=True)
    effective_expire_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_001_mv'


class OkiSrm002Mv(models.Model):
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    authoring_org_id = models.FloatField()
    customer_party_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    cle_creation_date = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    p_grace_end_date = models.DateField(blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    renewal_flag = models.FloatField()
    p_term_flag = models.FloatField(blank=True, null=True)
    exp_renewal_flag = models.FloatField(blank=True, null=True)
    trn_billed_value_f = models.FloatField(blank=True, null=True)
    trn_billed_value_g = models.FloatField(blank=True, null=True)
    trn_billed_value_sg = models.FloatField(blank=True, null=True)
    trn_billed_value_a = models.FloatField(blank=True, null=True)
    price_negotiated_f = models.FloatField(blank=True, null=True)
    price_negotiated_g = models.FloatField(blank=True, null=True)
    price_negotiated_sg = models.FloatField(blank=True, null=True)
    price_negotiated_a = models.FloatField(blank=True, null=True)
    p_price_negotiated_f = models.FloatField(blank=True, null=True)
    p_price_negotiated_g = models.FloatField(blank=True, null=True)
    p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    p_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_trn_billed_value_f = models.FloatField(blank=True, null=True)
    c_trn_billed_value_g = models.FloatField(blank=True, null=True)
    c_trn_billed_value_sg = models.FloatField(blank=True, null=True)
    c_trn_billed_value_a = models.FloatField(blank=True, null=True)
    c_price_negotiated_f = models.FloatField(blank=True, null=True)
    c_price_negotiated_g = models.FloatField(blank=True, null=True)
    c_price_negotiated_sg = models.FloatField(blank=True, null=True)
    c_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_f = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_g = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_sg = models.FloatField(blank=True, null=True)
    c_p_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    effective_term_date = models.DateField(blank=True, null=True)
    effective_expire_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_002_mv'


class OkiSrm003Mv(models.Model):
    authoring_org_id = models.FloatField()
    resource_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    ren_type = models.CharField(max_length=3, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    bucket1_amt_g = models.FloatField(blank=True, null=True)
    bucket1_amt_sg = models.FloatField(blank=True, null=True)
    bucket1_amt_f = models.FloatField(blank=True, null=True)
    bucket2_amt_g = models.FloatField(blank=True, null=True)
    bucket2_amt_sg = models.FloatField(blank=True, null=True)
    bucket2_amt_f = models.FloatField(blank=True, null=True)
    bucket3_amt_g = models.FloatField(blank=True, null=True)
    bucket3_amt_sg = models.FloatField(blank=True, null=True)
    bucket3_amt_f = models.FloatField(blank=True, null=True)
    bucket4_amt_g = models.FloatField(blank=True, null=True)
    bucket4_amt_sg = models.FloatField(blank=True, null=True)
    bucket4_amt_f = models.FloatField(blank=True, null=True)
    bucket5_amt_g = models.FloatField(blank=True, null=True)
    bucket5_amt_sg = models.FloatField(blank=True, null=True)
    bucket5_amt_f = models.FloatField(blank=True, null=True)
    bucket6_amt_g = models.FloatField(blank=True, null=True)
    bucket6_amt_sg = models.FloatField(blank=True, null=True)
    bucket6_amt_f = models.FloatField(blank=True, null=True)
    bucket7_amt_g = models.FloatField(blank=True, null=True)
    bucket7_amt_sg = models.FloatField(blank=True, null=True)
    bucket7_amt_f = models.FloatField(blank=True, null=True)
    bucket8_amt_g = models.FloatField(blank=True, null=True)
    bucket8_amt_sg = models.FloatField(blank=True, null=True)
    bucket8_amt_f = models.FloatField(blank=True, null=True)
    bucket9_amt_g = models.FloatField(blank=True, null=True)
    bucket9_amt_sg = models.FloatField(blank=True, null=True)
    bucket9_amt_f = models.FloatField(blank=True, null=True)
    bucket10_amt_g = models.FloatField(blank=True, null=True)
    bucket10_amt_sg = models.FloatField(blank=True, null=True)
    bucket10_amt_f = models.FloatField(blank=True, null=True)
    bucket1_cnt_g = models.FloatField(blank=True, null=True)
    bucket1_cnt_sg = models.FloatField(blank=True, null=True)
    bucket1_cnt_f = models.FloatField(blank=True, null=True)
    bucket2_cnt_g = models.FloatField(blank=True, null=True)
    bucket2_cnt_sg = models.FloatField(blank=True, null=True)
    bucket2_cnt_f = models.FloatField(blank=True, null=True)
    bucket3_cnt_g = models.FloatField(blank=True, null=True)
    bucket3_cnt_sg = models.FloatField(blank=True, null=True)
    bucket3_cnt_f = models.FloatField(blank=True, null=True)
    bucket4_cnt_g = models.FloatField(blank=True, null=True)
    bucket4_cnt_sg = models.FloatField(blank=True, null=True)
    bucket4_cnt_f = models.FloatField(blank=True, null=True)
    bucket5_cnt_g = models.FloatField(blank=True, null=True)
    bucket5_cnt_sg = models.FloatField(blank=True, null=True)
    bucket5_cnt_f = models.FloatField(blank=True, null=True)
    bucket6_cnt_g = models.FloatField(blank=True, null=True)
    bucket6_cnt_sg = models.FloatField(blank=True, null=True)
    bucket6_cnt_f = models.FloatField(blank=True, null=True)
    bucket7_cnt_g = models.FloatField(blank=True, null=True)
    bucket7_cnt_sg = models.FloatField(blank=True, null=True)
    bucket7_cnt_f = models.FloatField(blank=True, null=True)
    bucket8_cnt_g = models.FloatField(blank=True, null=True)
    bucket8_cnt_sg = models.FloatField(blank=True, null=True)
    bucket8_cnt_f = models.FloatField(blank=True, null=True)
    bucket9_cnt_g = models.FloatField(blank=True, null=True)
    bucket9_cnt_sg = models.FloatField(blank=True, null=True)
    bucket9_cnt_f = models.FloatField(blank=True, null=True)
    bucket10_cnt_g = models.FloatField(blank=True, null=True)
    bucket10_cnt_sg = models.FloatField(blank=True, null=True)
    bucket10_cnt_f = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_003_mv'


class OkiSrm004Mv(models.Model):
    chr_id = models.FloatField()
    resource_group_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30)
    customer_party_id = models.FloatField()
    authoring_org_id = models.FloatField()
    win_percent = models.FloatField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    effective_start_date = models.DateField(blank=True, null=True)
    effective_end_date = models.DateField(blank=True, null=True)
    effective_term_date = models.DateField(blank=True, null=True)
    effective_expire_date = models.DateField(blank=True, null=True)
    effective_active_date = models.DateField(blank=True, null=True)
    termination_entry_date = models.DateField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    renewal_flag = models.FloatField()
    exp_renewal_flag = models.FloatField(blank=True, null=True)
    past_due_date = models.DateField(blank=True, null=True)
    price_negotiated_f = models.FloatField(blank=True, null=True)
    price_negotiated_g = models.FloatField(blank=True, null=True)
    price_negotiated_sg = models.FloatField(blank=True, null=True)
    price_negotiated_a = models.FloatField(blank=True, null=True)
    trn_billed_value_f = models.FloatField(blank=True, null=True)
    trn_billed_value_g = models.FloatField(blank=True, null=True)
    trn_billed_value_sg = models.FloatField(blank=True, null=True)
    trn_billed_value_a = models.FloatField(blank=True, null=True)
    c_price_negotiaed_f = models.FloatField(blank=True, null=True)
    c_price_negotiated_g = models.FloatField(blank=True, null=True)
    c_price_negotiated_sg = models.FloatField(blank=True, null=True)
    c_price_negotiated_a = models.FloatField(blank=True, null=True)
    c_trn_billed_value_f = models.FloatField(blank=True, null=True)
    c_trn_billed_value_g = models.FloatField(blank=True, null=True)
    c_trn_billed_value_sg = models.FloatField(blank=True, null=True)
    c_trn_billed_value_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    hstart_date = models.DateField()
    hend_date = models.DateField(blank=True, null=True)
    complete_k_number = models.CharField(max_length=241, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_004_mv'


class OkiSrm005Mv(models.Model):
    sle_id = models.FloatField(blank=True, null=True)
    chr_id = models.FloatField()
    contract_number = models.CharField(max_length=120)
    contract_number_modifier = models.CharField(max_length=120, blank=True, null=True)
    complete_k_number = models.CharField(max_length=241, blank=True, null=True)
    line_number = models.CharField(max_length=300, blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    renewal_type_code = models.CharField(max_length=30, blank=True, null=True)
    curr_code = models.CharField(max_length=15, blank=True, null=True)
    curr_code_f = models.CharField(max_length=15, blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    inv_org_id = models.FloatField(blank=True, null=True)
    scs_code = models.CharField(max_length=30, blank=True, null=True)
    authoring_org_id = models.FloatField()
    trx_func_curr_rate = models.FloatField(blank=True, null=True)
    func_global_curr_rate = models.FloatField(blank=True, null=True)
    func_sglobal_curr_rate = models.FloatField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    term_cancel_source = models.CharField(max_length=30, blank=True, null=True)
    ubt_amt = models.FloatField(blank=True, null=True)
    ubt_amt_f = models.FloatField(blank=True, null=True)
    ubt_amt_g = models.FloatField(blank=True, null=True)
    ubt_amt_sg = models.FloatField(blank=True, null=True)
    ubt_amt_a = models.FloatField(blank=True, null=True)
    supp_credit = models.FloatField(blank=True, null=True)
    supp_credit_f = models.FloatField(blank=True, null=True)
    supp_credit_g = models.FloatField(blank=True, null=True)
    supp_credit_sg = models.FloatField(blank=True, null=True)
    supp_credit_a = models.FloatField(blank=True, null=True)
    credit_amt = models.FloatField(blank=True, null=True)
    credit_amt_f = models.FloatField(blank=True, null=True)
    credit_amt_g = models.FloatField(blank=True, null=True)
    credit_amt_sg = models.FloatField(blank=True, null=True)
    credit_amt_a = models.FloatField(blank=True, null=True)
    override_amt = models.FloatField(blank=True, null=True)
    override_amt_f = models.FloatField(blank=True, null=True)
    override_amt_g = models.FloatField(blank=True, null=True)
    override_amt_sg = models.FloatField(blank=True, null=True)
    override_amt_a = models.FloatField(blank=True, null=True)
    price_nego = models.FloatField(blank=True, null=True)
    price_nego_f = models.FloatField(blank=True, null=True)
    price_nego_a = models.FloatField(blank=True, null=True)
    price_nego_g = models.FloatField(blank=True, null=True)
    price_nego_sg = models.FloatField(blank=True, null=True)
    c_ubt_amt = models.FloatField(blank=True, null=True)
    c_ubt_amt_f = models.FloatField(blank=True, null=True)
    c_ubt_amt_g = models.FloatField(blank=True, null=True)
    c_ubt_amt_sg = models.FloatField(blank=True, null=True)
    c_ubt_amt_a = models.FloatField(blank=True, null=True)
    c_supp_credit = models.FloatField(blank=True, null=True)
    c_supp_credit_f = models.FloatField(blank=True, null=True)
    c_supp_credit_g = models.FloatField(blank=True, null=True)
    c_supp_credit_sg = models.FloatField(blank=True, null=True)
    c_supp_credit_a = models.FloatField(blank=True, null=True)
    c_credit_amt = models.FloatField(blank=True, null=True)
    c_credit_amt_f = models.FloatField(blank=True, null=True)
    c_credit_amt_g = models.FloatField(blank=True, null=True)
    c_credit_amt_sg = models.FloatField(blank=True, null=True)
    c_credit_amt_a = models.FloatField(blank=True, null=True)
    c_override_amt = models.FloatField(blank=True, null=True)
    c_override_amt_f = models.FloatField(blank=True, null=True)
    c_override_amt_g = models.FloatField(blank=True, null=True)
    c_override_amt_sg = models.FloatField(blank=True, null=True)
    c_override_amt_a = models.FloatField(blank=True, null=True)
    c_price_nego = models.FloatField(blank=True, null=True)
    c_price_nego_f = models.FloatField(blank=True, null=True)
    c_price_nego_a = models.FloatField(blank=True, null=True)
    c_price_nego_g = models.FloatField(blank=True, null=True)
    c_price_nego_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_005_mv'


class OkiSrm006Mv(models.Model):
    chr_id = models.FloatField()
    contract_number = models.CharField(max_length=120)
    contract_number_modifier = models.CharField(max_length=120, blank=True, null=True)
    complete_k_number = models.CharField(max_length=241, blank=True, null=True)
    customer_party_id = models.FloatField()
    salesrep_id = models.FloatField(blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    scs_code = models.CharField(max_length=30, blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    renewal_type_code = models.CharField(max_length=30, blank=True, null=True)
    order_number = models.FloatField(blank=True, null=True)
    curr_code = models.CharField(max_length=15, blank=True, null=True)
    curr_code_f = models.CharField(max_length=15, blank=True, null=True)
    win_percent = models.FloatField(blank=True, null=True)
    expected_close_date = models.DateField(blank=True, null=True)
    date_cancelled = models.DateField(blank=True, null=True)
    date_signed = models.DateField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    grace_end_date = models.DateField(blank=True, null=True)
    date_approved = models.DateField(blank=True, null=True)
    date_terminated = models.DateField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    bill_site_id = models.FloatField(blank=True, null=True)
    ship_site_id = models.FloatField(blank=True, null=True)
    acct_rule_id = models.FloatField(blank=True, null=True)
    subsequent_renewal_type_code = models.CharField(max_length=30, blank=True, null=True)
    negotiation_status = models.CharField(max_length=30, blank=True, null=True)
    reminder = models.CharField(max_length=30, blank=True, null=True)
    term_cancel_source = models.CharField(max_length=30, blank=True, null=True)
    ubt_amt = models.FloatField(blank=True, null=True)
    ubt_amt_f = models.FloatField(blank=True, null=True)
    ubt_amt_g = models.FloatField(blank=True, null=True)
    ubt_amt_sg = models.FloatField(blank=True, null=True)
    ubt_amt_a = models.FloatField(blank=True, null=True)
    supp_credit = models.FloatField(blank=True, null=True)
    supp_credit_f = models.FloatField(blank=True, null=True)
    supp_credit_g = models.FloatField(blank=True, null=True)
    supp_credit_sg = models.FloatField(blank=True, null=True)
    supp_credit_a = models.FloatField(blank=True, null=True)
    credit_amt = models.FloatField(blank=True, null=True)
    credit_amt_f = models.FloatField(blank=True, null=True)
    credit_amt_g = models.FloatField(blank=True, null=True)
    credit_amt_sg = models.FloatField(blank=True, null=True)
    credit_amt_a = models.FloatField(blank=True, null=True)
    override_amt = models.FloatField(blank=True, null=True)
    override_amt_f = models.FloatField(blank=True, null=True)
    override_amt_g = models.FloatField(blank=True, null=True)
    override_amt_sg = models.FloatField(blank=True, null=True)
    override_amt_a = models.FloatField(blank=True, null=True)
    price_nego = models.FloatField(blank=True, null=True)
    price_nego_f = models.FloatField(blank=True, null=True)
    price_nego_a = models.FloatField(blank=True, null=True)
    price_nego_g = models.FloatField(blank=True, null=True)
    price_nego_sg = models.FloatField(blank=True, null=True)
    c_ubt_amt = models.FloatField(blank=True, null=True)
    c_ubt_amt_f = models.FloatField(blank=True, null=True)
    c_ubt_amt_g = models.FloatField(blank=True, null=True)
    c_ubt_amt_sg = models.FloatField(blank=True, null=True)
    c_ubt_amt_a = models.FloatField(blank=True, null=True)
    c_supp_credit = models.FloatField(blank=True, null=True)
    c_supp_credit_f = models.FloatField(blank=True, null=True)
    c_supp_credit_g = models.FloatField(blank=True, null=True)
    c_supp_credit_sg = models.FloatField(blank=True, null=True)
    c_supp_credit_a = models.FloatField(blank=True, null=True)
    c_credit_amt = models.FloatField(blank=True, null=True)
    c_credit_amt_f = models.FloatField(blank=True, null=True)
    c_credit_amt_g = models.FloatField(blank=True, null=True)
    c_credit_amt_sg = models.FloatField(blank=True, null=True)
    c_credit_amt_a = models.FloatField(blank=True, null=True)
    c_override_amt = models.FloatField(blank=True, null=True)
    c_override_amt_f = models.FloatField(blank=True, null=True)
    c_override_amt_g = models.FloatField(blank=True, null=True)
    c_override_amt_sg = models.FloatField(blank=True, null=True)
    c_override_amt_a = models.FloatField(blank=True, null=True)
    c_price_nego = models.FloatField(blank=True, null=True)
    c_price_nego_f = models.FloatField(blank=True, null=True)
    c_price_nego_a = models.FloatField(blank=True, null=True)
    c_price_nego_g = models.FloatField(blank=True, null=True)
    c_price_nego_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_006_mv'


class OkiSrm011Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    s_r_amt_f = models.FloatField(blank=True, null=True)
    s_r_amt_g = models.FloatField(blank=True, null=True)
    s_r_amt_sg = models.FloatField(blank=True, null=True)
    s_r_amt_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_scr_amt_a = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    s_g_o_amt_f = models.FloatField(blank=True, null=True)
    s_g_o_amt_g = models.FloatField(blank=True, null=True)
    s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    s_g_o_amt_a = models.FloatField(blank=True, null=True)
    s_r_o_amt_f = models.FloatField(blank=True, null=True)
    s_r_o_amt_g = models.FloatField(blank=True, null=True)
    s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    s_r_o_amt_a = models.FloatField(blank=True, null=True)
    s_g_amt_f = models.FloatField(blank=True, null=True)
    s_g_amt_g = models.FloatField(blank=True, null=True)
    s_g_amt_sg = models.FloatField(blank=True, null=True)
    s_g_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_amt_a = models.FloatField(blank=True, null=True)
    s_rg_amt_f = models.FloatField(blank=True, null=True)
    s_rg_amt_g = models.FloatField(blank=True, null=True)
    s_rg_amt_sg = models.FloatField(blank=True, null=True)
    s_rg_amt_a = models.FloatField(blank=True, null=True)
    c_s_rg_amt_f = models.FloatField(blank=True, null=True)
    c_s_rg_amt_g = models.FloatField(blank=True, null=True)
    c_s_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_s_rg_amt_a = models.FloatField(blank=True, null=True)
    s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    s_x_r_amt_f = models.FloatField(blank=True, null=True)
    s_x_r_amt_g = models.FloatField(blank=True, null=True)
    s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_c_scr_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_011_mv'


class OkiSrm012Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_012_mv'


class OkiSrm013Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    x_rg_amt_f = models.FloatField(blank=True, null=True)
    x_rg_amt_g = models.FloatField(blank=True, null=True)
    x_rg_amt_sg = models.FloatField(blank=True, null=True)
    x_rg_amt_a = models.FloatField(blank=True, null=True)
    x_rc_amt_f = models.FloatField(blank=True, null=True)
    x_rc_amt_g = models.FloatField(blank=True, null=True)
    x_rc_amt_sg = models.FloatField(blank=True, null=True)
    x_rc_amt_a = models.FloatField(blank=True, null=True)
    x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_x_rg_amt_f = models.FloatField(blank=True, null=True)
    c_x_rg_amt_g = models.FloatField(blank=True, null=True)
    c_x_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rg_amt_a = models.FloatField(blank=True, null=True)
    c_x_rc_amt_f = models.FloatField(blank=True, null=True)
    c_x_rc_amt_g = models.FloatField(blank=True, null=True)
    c_x_rc_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rc_amt_a = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_013_mv'


class OkiSrm014Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    g_r_amt_f = models.FloatField(blank=True, null=True)
    g_r_amt_g = models.FloatField(blank=True, null=True)
    g_r_amt_sg = models.FloatField(blank=True, null=True)
    g_r_amt_a = models.FloatField(blank=True, null=True)
    g_o_amt_f = models.FloatField(blank=True, null=True)
    g_o_amt_g = models.FloatField(blank=True, null=True)
    g_o_amt_sg = models.FloatField(blank=True, null=True)
    g_o_amt_a = models.FloatField(blank=True, null=True)
    g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    o_rgr_amt_f = models.FloatField(blank=True, null=True)
    o_rgr_amt_g = models.FloatField(blank=True, null=True)
    o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    o_rgr_amt_a = models.FloatField(blank=True, null=True)
    b_rgr_amt_f = models.FloatField(blank=True, null=True)
    b_rgr_amt_g = models.FloatField(blank=True, null=True)
    b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    b_rgr_amt_a = models.FloatField(blank=True, null=True)
    gl_r_amt_f = models.FloatField(blank=True, null=True)
    gl_r_amt_g = models.FloatField(blank=True, null=True)
    gl_r_amt_sg = models.FloatField(blank=True, null=True)
    gl_r_amt_a = models.FloatField(blank=True, null=True)
    gr_r_amt_f = models.FloatField(blank=True, null=True)
    gr_r_amt_g = models.FloatField(blank=True, null=True)
    gr_r_amt_sg = models.FloatField(blank=True, null=True)
    gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days = models.FloatField(blank=True, null=True)
    g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_r_amt_f = models.FloatField(blank=True, null=True)
    c_g_r_amt_g = models.FloatField(blank=True, null=True)
    c_g_r_amt_sg = models.FloatField(blank=True, null=True)
    c_g_r_amt_a = models.FloatField(blank=True, null=True)
    c_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_gl_r_amt_f = models.FloatField(blank=True, null=True)
    c_gl_r_amt_g = models.FloatField(blank=True, null=True)
    c_gl_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_r_amt_a = models.FloatField(blank=True, null=True)
    gl_s_amt_f = models.FloatField(blank=True, null=True)
    gl_s_amt_g = models.FloatField(blank=True, null=True)
    gl_s_amt_sg = models.FloatField(blank=True, null=True)
    gl_s_amt_a = models.FloatField(blank=True, null=True)
    c_gl_s_amt_f = models.FloatField(blank=True, null=True)
    c_gl_s_amt_g = models.FloatField(blank=True, null=True)
    c_gl_s_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_s_amt_a = models.FloatField(blank=True, null=True)
    gl_o_amt_f = models.FloatField(blank=True, null=True)
    gl_o_amt_g = models.FloatField(blank=True, null=True)
    gl_o_amt_sg = models.FloatField(blank=True, null=True)
    gl_o_amt_a = models.FloatField(blank=True, null=True)
    c_gl_o_amt_f = models.FloatField(blank=True, null=True)
    c_gl_o_amt_g = models.FloatField(blank=True, null=True)
    c_gl_o_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_o_amt_a = models.FloatField(blank=True, null=True)
    c_gr_r_amt_f = models.FloatField(blank=True, null=True)
    c_gr_r_amt_g = models.FloatField(blank=True, null=True)
    c_gr_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days_count = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_014_mv'


class OkiSrm015Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    t_rv_amt_f = models.FloatField(blank=True, null=True)
    t_rv_amt_g = models.FloatField(blank=True, null=True)
    t_rv_amt_sg = models.FloatField(blank=True, null=True)
    t_rv_amt_a = models.FloatField(blank=True, null=True)
    t_bv_amt_f = models.FloatField(blank=True, null=True)
    t_bv_amt_g = models.FloatField(blank=True, null=True)
    t_bv_amt_sg = models.FloatField(blank=True, null=True)
    t_bv_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_t_rv_amt_f = models.FloatField(blank=True, null=True)
    c_t_rv_amt_g = models.FloatField(blank=True, null=True)
    c_t_rv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_rv_amt_a = models.FloatField(blank=True, null=True)
    c_t_bv_amt_f = models.FloatField(blank=True, null=True)
    c_t_bv_amt_g = models.FloatField(blank=True, null=True)
    c_t_bv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_bv_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_015_mv'


class OkiSrm016Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    f_f_amt_f = models.FloatField(blank=True, null=True)
    f_f_amt_g = models.FloatField(blank=True, null=True)
    f_f_amt_sg = models.FloatField(blank=True, null=True)
    f_f_amt_a = models.FloatField(blank=True, null=True)
    f_r_amt_f = models.FloatField(blank=True, null=True)
    f_r_amt_g = models.FloatField(blank=True, null=True)
    f_r_amt_sg = models.FloatField(blank=True, null=True)
    f_r_amt_a = models.FloatField(blank=True, null=True)
    c_f_f_amt_f = models.FloatField(blank=True, null=True)
    c_f_f_amt_g = models.FloatField(blank=True, null=True)
    c_f_f_amt_sg = models.FloatField(blank=True, null=True)
    c_f_f_amt_a = models.FloatField(blank=True, null=True)
    c_f_r_amt_f = models.FloatField(blank=True, null=True)
    c_f_r_amt_g = models.FloatField(blank=True, null=True)
    c_f_r_amt_sg = models.FloatField(blank=True, null=True)
    c_f_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_016_mv'


class OkiSrm017Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    o_rcr_amt_f = models.FloatField(blank=True, null=True)
    o_rcr_amt_g = models.FloatField(blank=True, null=True)
    o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    o_rcr_amt_a = models.FloatField(blank=True, null=True)
    b_rcr_amt_f = models.FloatField(blank=True, null=True)
    b_rcr_amt_g = models.FloatField(blank=True, null=True)
    b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_r_amt_f = models.FloatField(blank=True, null=True)
    c_r_amt_g = models.FloatField(blank=True, null=True)
    c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_c_r_amt_f = models.FloatField(blank=True, null=True)
    c_c_r_amt_g = models.FloatField(blank=True, null=True)
    c_c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_c_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_017_mv'


class OkiSrm018Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    bal_amt_f = models.FloatField(blank=True, null=True)
    bal_amt_g = models.FloatField(blank=True, null=True)
    bal_amt_sg = models.FloatField(blank=True, null=True)
    bal_amt_a = models.FloatField(blank=True, null=True)
    c_bal_amt_f = models.FloatField(blank=True, null=True)
    c_bal_amt_g = models.FloatField(blank=True, null=True)
    c_bal_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_018_mv'


class OkiSrm019Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_019_mv'


class OkiSrm020Mv(models.Model):
    umarker = models.CharField(max_length=8, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_020_mv'


class OkiSrm021Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    s_r_amt_f = models.FloatField(blank=True, null=True)
    s_r_amt_g = models.FloatField(blank=True, null=True)
    s_r_amt_sg = models.FloatField(blank=True, null=True)
    s_r_amt_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_scr_amt_a = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    s_g_o_amt_f = models.FloatField(blank=True, null=True)
    s_g_o_amt_g = models.FloatField(blank=True, null=True)
    s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    s_g_o_amt_a = models.FloatField(blank=True, null=True)
    s_r_o_amt_f = models.FloatField(blank=True, null=True)
    s_r_o_amt_g = models.FloatField(blank=True, null=True)
    s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    s_r_o_amt_a = models.FloatField(blank=True, null=True)
    s_g_amt_f = models.FloatField(blank=True, null=True)
    s_g_amt_g = models.FloatField(blank=True, null=True)
    s_g_amt_sg = models.FloatField(blank=True, null=True)
    s_g_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_amt_a = models.FloatField(blank=True, null=True)
    s_rg_amt_f = models.FloatField(blank=True, null=True)
    s_rg_amt_g = models.FloatField(blank=True, null=True)
    s_rg_amt_sg = models.FloatField(blank=True, null=True)
    s_rg_amt_a = models.FloatField(blank=True, null=True)
    c_s_rg_amt_f = models.FloatField(blank=True, null=True)
    c_s_rg_amt_g = models.FloatField(blank=True, null=True)
    c_s_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_s_rg_amt_a = models.FloatField(blank=True, null=True)
    s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    s_x_r_amt_f = models.FloatField(blank=True, null=True)
    s_x_r_amt_g = models.FloatField(blank=True, null=True)
    s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_c_scr_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_021_mv'


class OkiSrm022Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_022_mv'


class OkiSrm023Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    x_rg_amt_f = models.FloatField(blank=True, null=True)
    x_rg_amt_g = models.FloatField(blank=True, null=True)
    x_rg_amt_sg = models.FloatField(blank=True, null=True)
    x_rg_amt_a = models.FloatField(blank=True, null=True)
    x_rc_amt_f = models.FloatField(blank=True, null=True)
    x_rc_amt_g = models.FloatField(blank=True, null=True)
    x_rc_amt_sg = models.FloatField(blank=True, null=True)
    x_rc_amt_a = models.FloatField(blank=True, null=True)
    x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_x_rg_amt_f = models.FloatField(blank=True, null=True)
    c_x_rg_amt_g = models.FloatField(blank=True, null=True)
    c_x_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rg_amt_a = models.FloatField(blank=True, null=True)
    c_x_rc_amt_f = models.FloatField(blank=True, null=True)
    c_x_rc_amt_g = models.FloatField(blank=True, null=True)
    c_x_rc_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rc_amt_a = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_023_mv'


class OkiSrm024Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    g_r_amt_f = models.FloatField(blank=True, null=True)
    g_r_amt_g = models.FloatField(blank=True, null=True)
    g_r_amt_sg = models.FloatField(blank=True, null=True)
    g_r_amt_a = models.FloatField(blank=True, null=True)
    g_o_amt_f = models.FloatField(blank=True, null=True)
    g_o_amt_g = models.FloatField(blank=True, null=True)
    g_o_amt_sg = models.FloatField(blank=True, null=True)
    g_o_amt_a = models.FloatField(blank=True, null=True)
    g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    o_rgr_amt_f = models.FloatField(blank=True, null=True)
    o_rgr_amt_g = models.FloatField(blank=True, null=True)
    o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    o_rgr_amt_a = models.FloatField(blank=True, null=True)
    b_rgr_amt_f = models.FloatField(blank=True, null=True)
    b_rgr_amt_g = models.FloatField(blank=True, null=True)
    b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    b_rgr_amt_a = models.FloatField(blank=True, null=True)
    gl_r_amt_f = models.FloatField(blank=True, null=True)
    gl_r_amt_g = models.FloatField(blank=True, null=True)
    gl_r_amt_sg = models.FloatField(blank=True, null=True)
    gl_r_amt_a = models.FloatField(blank=True, null=True)
    gr_r_amt_f = models.FloatField(blank=True, null=True)
    gr_r_amt_g = models.FloatField(blank=True, null=True)
    gr_r_amt_sg = models.FloatField(blank=True, null=True)
    gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days = models.FloatField(blank=True, null=True)
    g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_r_amt_f = models.FloatField(blank=True, null=True)
    c_g_r_amt_g = models.FloatField(blank=True, null=True)
    c_g_r_amt_sg = models.FloatField(blank=True, null=True)
    c_g_r_amt_a = models.FloatField(blank=True, null=True)
    c_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_gl_r_amt_f = models.FloatField(blank=True, null=True)
    c_gl_r_amt_g = models.FloatField(blank=True, null=True)
    c_gl_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_r_amt_a = models.FloatField(blank=True, null=True)
    gl_s_amt_f = models.FloatField(blank=True, null=True)
    gl_s_amt_g = models.FloatField(blank=True, null=True)
    gl_s_amt_sg = models.FloatField(blank=True, null=True)
    gl_s_amt_a = models.FloatField(blank=True, null=True)
    c_gl_s_amt_f = models.FloatField(blank=True, null=True)
    c_gl_s_amt_g = models.FloatField(blank=True, null=True)
    c_gl_s_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_s_amt_a = models.FloatField(blank=True, null=True)
    gl_o_amt_f = models.FloatField(blank=True, null=True)
    gl_o_amt_g = models.FloatField(blank=True, null=True)
    gl_o_amt_sg = models.FloatField(blank=True, null=True)
    gl_o_amt_a = models.FloatField(blank=True, null=True)
    c_gl_o_amt_f = models.FloatField(blank=True, null=True)
    c_gl_o_amt_g = models.FloatField(blank=True, null=True)
    c_gl_o_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_o_amt_a = models.FloatField(blank=True, null=True)
    c_gr_r_amt_f = models.FloatField(blank=True, null=True)
    c_gr_r_amt_g = models.FloatField(blank=True, null=True)
    c_gr_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days_count = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_024_mv'


class OkiSrm025Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    t_rv_amt_f = models.FloatField(blank=True, null=True)
    t_rv_amt_g = models.FloatField(blank=True, null=True)
    t_rv_amt_sg = models.FloatField(blank=True, null=True)
    t_rv_amt_a = models.FloatField(blank=True, null=True)
    t_bv_amt_f = models.FloatField(blank=True, null=True)
    t_bv_amt_g = models.FloatField(blank=True, null=True)
    t_bv_amt_sg = models.FloatField(blank=True, null=True)
    t_bv_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_t_rv_amt_f = models.FloatField(blank=True, null=True)
    c_t_rv_amt_g = models.FloatField(blank=True, null=True)
    c_t_rv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_rv_amt_a = models.FloatField(blank=True, null=True)
    c_t_bv_amt_f = models.FloatField(blank=True, null=True)
    c_t_bv_amt_g = models.FloatField(blank=True, null=True)
    c_t_bv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_bv_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_025_mv'


class OkiSrm026Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    f_f_amt_f = models.FloatField(blank=True, null=True)
    f_f_amt_g = models.FloatField(blank=True, null=True)
    f_f_amt_sg = models.FloatField(blank=True, null=True)
    f_f_amt_a = models.FloatField(blank=True, null=True)
    f_r_amt_f = models.FloatField(blank=True, null=True)
    f_r_amt_g = models.FloatField(blank=True, null=True)
    f_r_amt_sg = models.FloatField(blank=True, null=True)
    f_r_amt_a = models.FloatField(blank=True, null=True)
    c_f_f_amt_f = models.FloatField(blank=True, null=True)
    c_f_f_amt_g = models.FloatField(blank=True, null=True)
    c_f_f_amt_sg = models.FloatField(blank=True, null=True)
    c_f_f_amt_a = models.FloatField(blank=True, null=True)
    c_f_r_amt_f = models.FloatField(blank=True, null=True)
    c_f_r_amt_g = models.FloatField(blank=True, null=True)
    c_f_r_amt_sg = models.FloatField(blank=True, null=True)
    c_f_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_026_mv'


class OkiSrm027Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    o_rcr_amt_f = models.FloatField(blank=True, null=True)
    o_rcr_amt_g = models.FloatField(blank=True, null=True)
    o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    o_rcr_amt_a = models.FloatField(blank=True, null=True)
    b_rcr_amt_f = models.FloatField(blank=True, null=True)
    b_rcr_amt_g = models.FloatField(blank=True, null=True)
    b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_r_amt_f = models.FloatField(blank=True, null=True)
    c_r_amt_g = models.FloatField(blank=True, null=True)
    c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_c_r_amt_f = models.FloatField(blank=True, null=True)
    c_c_r_amt_g = models.FloatField(blank=True, null=True)
    c_c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_c_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_027_mv'


class OkiSrm028Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    cc_flag = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    bal_amt_f = models.FloatField(blank=True, null=True)
    bal_amt_g = models.FloatField(blank=True, null=True)
    bal_amt_sg = models.FloatField(blank=True, null=True)
    bal_amt_a = models.FloatField(blank=True, null=True)
    c_bal_amt_f = models.FloatField(blank=True, null=True)
    c_bal_amt_g = models.FloatField(blank=True, null=True)
    c_bal_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_028_mv'


class OkiSrm029Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_029_mv'


class OkiSrm030Mv(models.Model):
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField()
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_org_id = models.CharField(max_length=81, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_030_mv'


class OkiSrm031Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    s_r_amt_f = models.FloatField(blank=True, null=True)
    s_r_amt_g = models.FloatField(blank=True, null=True)
    s_r_amt_sg = models.FloatField(blank=True, null=True)
    s_r_amt_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_scr_amt_a = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    s_g_o_amt_f = models.FloatField(blank=True, null=True)
    s_g_o_amt_g = models.FloatField(blank=True, null=True)
    s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    s_g_o_amt_a = models.FloatField(blank=True, null=True)
    s_r_o_amt_f = models.FloatField(blank=True, null=True)
    s_r_o_amt_g = models.FloatField(blank=True, null=True)
    s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    s_r_o_amt_a = models.FloatField(blank=True, null=True)
    s_g_amt_f = models.FloatField(blank=True, null=True)
    s_g_amt_g = models.FloatField(blank=True, null=True)
    s_g_amt_sg = models.FloatField(blank=True, null=True)
    s_g_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_amt_a = models.FloatField(blank=True, null=True)
    s_rg_amt_f = models.FloatField(blank=True, null=True)
    s_rg_amt_g = models.FloatField(blank=True, null=True)
    s_rg_amt_sg = models.FloatField(blank=True, null=True)
    s_rg_amt_a = models.FloatField(blank=True, null=True)
    c_s_rg_amt_f = models.FloatField(blank=True, null=True)
    c_s_rg_amt_g = models.FloatField(blank=True, null=True)
    c_s_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_s_rg_amt_a = models.FloatField(blank=True, null=True)
    s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_xg_r_amt_a = models.FloatField(blank=True, null=True)
    s_x_r_amt_f = models.FloatField(blank=True, null=True)
    s_x_r_amt_g = models.FloatField(blank=True, null=True)
    s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpr_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_y_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_q_a = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_f = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_g = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_sg = models.FloatField(blank=True, null=True)
    c_s_gpo_amt_p_a = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_f = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_g = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_sg = models.FloatField(blank=True, null=True)
    c_s_x_r_amt_a = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_r_o_amt_a = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_s_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_c_scr_amt_f = models.FloatField(blank=True, null=True)
    c_c_scr_amt_g = models.FloatField(blank=True, null=True)
    c_c_scr_amt_sg = models.FloatField(blank=True, null=True)
    c_c_scr_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_031_mv'


class OkiSrm032Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_032_mv'


class OkiSrm033Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    x_rg_amt_f = models.FloatField(blank=True, null=True)
    x_rg_amt_g = models.FloatField(blank=True, null=True)
    x_rg_amt_sg = models.FloatField(blank=True, null=True)
    x_rg_amt_a = models.FloatField(blank=True, null=True)
    x_rc_amt_f = models.FloatField(blank=True, null=True)
    x_rc_amt_g = models.FloatField(blank=True, null=True)
    x_rc_amt_sg = models.FloatField(blank=True, null=True)
    x_rc_amt_a = models.FloatField(blank=True, null=True)
    x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_x_rg_amt_f = models.FloatField(blank=True, null=True)
    c_x_rg_amt_g = models.FloatField(blank=True, null=True)
    c_x_rg_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rg_amt_a = models.FloatField(blank=True, null=True)
    c_x_rc_amt_f = models.FloatField(blank=True, null=True)
    c_x_rc_amt_g = models.FloatField(blank=True, null=True)
    c_x_rc_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rc_amt_a = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_ro_o_amt_a = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_f = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_g = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_sg = models.FloatField(blank=True, null=True)
    c_x_rd_o_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_033_mv'


class OkiSrm034Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    g_r_amt_f = models.FloatField(blank=True, null=True)
    g_r_amt_g = models.FloatField(blank=True, null=True)
    g_r_amt_sg = models.FloatField(blank=True, null=True)
    g_r_amt_a = models.FloatField(blank=True, null=True)
    g_o_amt_f = models.FloatField(blank=True, null=True)
    g_o_amt_g = models.FloatField(blank=True, null=True)
    g_o_amt_sg = models.FloatField(blank=True, null=True)
    g_o_amt_a = models.FloatField(blank=True, null=True)
    g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    o_rgr_amt_f = models.FloatField(blank=True, null=True)
    o_rgr_amt_g = models.FloatField(blank=True, null=True)
    o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    o_rgr_amt_a = models.FloatField(blank=True, null=True)
    b_rgr_amt_f = models.FloatField(blank=True, null=True)
    b_rgr_amt_g = models.FloatField(blank=True, null=True)
    b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    b_rgr_amt_a = models.FloatField(blank=True, null=True)
    gl_r_amt_f = models.FloatField(blank=True, null=True)
    gl_r_amt_g = models.FloatField(blank=True, null=True)
    gl_r_amt_sg = models.FloatField(blank=True, null=True)
    gl_r_amt_a = models.FloatField(blank=True, null=True)
    gl_s_amt_f = models.FloatField(blank=True, null=True)
    gl_s_amt_g = models.FloatField(blank=True, null=True)
    gl_s_amt_sg = models.FloatField(blank=True, null=True)
    gl_s_amt_a = models.FloatField(blank=True, null=True)
    c_gl_s_amt_f = models.FloatField(blank=True, null=True)
    c_gl_s_amt_g = models.FloatField(blank=True, null=True)
    c_gl_s_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_s_amt_a = models.FloatField(blank=True, null=True)
    gl_o_amt_f = models.FloatField(blank=True, null=True)
    gl_o_amt_g = models.FloatField(blank=True, null=True)
    gl_o_amt_sg = models.FloatField(blank=True, null=True)
    gl_o_amt_a = models.FloatField(blank=True, null=True)
    c_gl_o_amt_f = models.FloatField(blank=True, null=True)
    c_gl_o_amt_g = models.FloatField(blank=True, null=True)
    c_gl_o_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_o_amt_a = models.FloatField(blank=True, null=True)
    gr_r_amt_f = models.FloatField(blank=True, null=True)
    gr_r_amt_g = models.FloatField(blank=True, null=True)
    gr_r_amt_sg = models.FloatField(blank=True, null=True)
    gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days = models.FloatField(blank=True, null=True)
    g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_r_amt_f = models.FloatField(blank=True, null=True)
    c_g_r_amt_g = models.FloatField(blank=True, null=True)
    c_g_r_amt_sg = models.FloatField(blank=True, null=True)
    c_g_r_amt_a = models.FloatField(blank=True, null=True)
    c_g_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_o_amt_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_scr_amt_p_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_y_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_q_a = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_f = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_g = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_sg = models.FloatField(blank=True, null=True)
    c_g_sco_amt_p_a = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rgr_amt_a = models.FloatField(blank=True, null=True)
    c_gl_r_amt_f = models.FloatField(blank=True, null=True)
    c_gl_r_amt_g = models.FloatField(blank=True, null=True)
    c_gl_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gl_r_amt_a = models.FloatField(blank=True, null=True)
    c_gr_r_amt_f = models.FloatField(blank=True, null=True)
    c_gr_r_amt_g = models.FloatField(blank=True, null=True)
    c_gr_r_amt_sg = models.FloatField(blank=True, null=True)
    c_gr_r_amt_a = models.FloatField(blank=True, null=True)
    gl_days_count = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_f = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_g = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_sg = models.FloatField(blank=True, null=True)
    c_g_nb_o_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_034_mv'


class OkiSrm035Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    trn_code = models.CharField(max_length=30, blank=True, null=True)
    t_rv_amt_f = models.FloatField(blank=True, null=True)
    t_rv_amt_g = models.FloatField(blank=True, null=True)
    t_rv_amt_sg = models.FloatField(blank=True, null=True)
    t_rv_amt_a = models.FloatField(blank=True, null=True)
    t_bv_amt_f = models.FloatField(blank=True, null=True)
    t_bv_amt_g = models.FloatField(blank=True, null=True)
    t_bv_amt_sg = models.FloatField(blank=True, null=True)
    t_bv_amt_a = models.FloatField(blank=True, null=True)
    bal_k_amt_f = models.FloatField(blank=True, null=True)
    bal_k_amt_g = models.FloatField(blank=True, null=True)
    bal_k_amt_sg = models.FloatField(blank=True, null=True)
    bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_t_rv_amt_f = models.FloatField(blank=True, null=True)
    c_t_rv_amt_g = models.FloatField(blank=True, null=True)
    c_t_rv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_rv_amt_a = models.FloatField(blank=True, null=True)
    c_t_bv_amt_f = models.FloatField(blank=True, null=True)
    c_t_bv_amt_g = models.FloatField(blank=True, null=True)
    c_t_bv_amt_sg = models.FloatField(blank=True, null=True)
    c_t_bv_amt_a = models.FloatField(blank=True, null=True)
    c_bal_k_amt_f = models.FloatField(blank=True, null=True)
    c_bal_k_amt_g = models.FloatField(blank=True, null=True)
    c_bal_k_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_k_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_035_mv'


class OkiSrm036Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    f_f_amt_f = models.FloatField(blank=True, null=True)
    f_f_amt_g = models.FloatField(blank=True, null=True)
    f_f_amt_sg = models.FloatField(blank=True, null=True)
    f_f_amt_a = models.FloatField(blank=True, null=True)
    f_r_amt_f = models.FloatField(blank=True, null=True)
    f_r_amt_g = models.FloatField(blank=True, null=True)
    f_r_amt_sg = models.FloatField(blank=True, null=True)
    f_r_amt_a = models.FloatField(blank=True, null=True)
    c_f_f_amt_f = models.FloatField(blank=True, null=True)
    c_f_f_amt_g = models.FloatField(blank=True, null=True)
    c_f_f_amt_sg = models.FloatField(blank=True, null=True)
    c_f_f_amt_a = models.FloatField(blank=True, null=True)
    c_f_r_amt_f = models.FloatField(blank=True, null=True)
    c_f_r_amt_g = models.FloatField(blank=True, null=True)
    c_f_r_amt_sg = models.FloatField(blank=True, null=True)
    c_f_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_036_mv'


class OkiSrm037Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    sts_code = models.CharField(max_length=30, blank=True, null=True)
    o_rcr_amt_f = models.FloatField(blank=True, null=True)
    o_rcr_amt_g = models.FloatField(blank=True, null=True)
    o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    o_rcr_amt_a = models.FloatField(blank=True, null=True)
    b_rcr_amt_f = models.FloatField(blank=True, null=True)
    b_rcr_amt_g = models.FloatField(blank=True, null=True)
    b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_r_amt_f = models.FloatField(blank=True, null=True)
    c_r_amt_g = models.FloatField(blank=True, null=True)
    c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_o_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_f = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_g = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_sg = models.FloatField(blank=True, null=True)
    c_b_rcr_amt_a = models.FloatField(blank=True, null=True)
    c_c_r_amt_f = models.FloatField(blank=True, null=True)
    c_c_r_amt_g = models.FloatField(blank=True, null=True)
    c_c_r_amt_sg = models.FloatField(blank=True, null=True)
    c_c_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_037_mv'


class OkiSrm038Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    class_code = models.CharField(max_length=30, blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    bal_amt_f = models.FloatField(blank=True, null=True)
    bal_amt_g = models.FloatField(blank=True, null=True)
    bal_amt_sg = models.FloatField(blank=True, null=True)
    bal_amt_a = models.FloatField(blank=True, null=True)
    c_bal_amt_f = models.FloatField(blank=True, null=True)
    c_bal_amt_g = models.FloatField(blank=True, null=True)
    c_bal_amt_sg = models.FloatField(blank=True, null=True)
    c_bal_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_038_mv'


class OkiSrm039Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    b_r_amt_f = models.FloatField(blank=True, null=True)
    b_r_amt_g = models.FloatField(blank=True, null=True)
    b_r_amt_sg = models.FloatField(blank=True, null=True)
    b_r_amt_a = models.FloatField(blank=True, null=True)
    c_b_r_amt_f = models.FloatField(blank=True, null=True)
    c_b_r_amt_g = models.FloatField(blank=True, null=True)
    c_b_r_amt_sg = models.FloatField(blank=True, null=True)
    c_b_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_039_mv'


class OkiSrm040Mv(models.Model):
    lumarker = models.FloatField(blank=True, null=True)
    umarker = models.CharField(max_length=9, blank=True, null=True)
    authoring_org_id = models.FloatField(blank=True, null=True)
    rg_id = models.FloatField(blank=True, null=True)
    prg_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    service_item_category_id = models.FloatField(blank=True, null=True)
    pc_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    o_r_amt_f = models.FloatField(blank=True, null=True)
    o_r_amt_g = models.FloatField(blank=True, null=True)
    o_r_amt_sg = models.FloatField(blank=True, null=True)
    o_r_amt_a = models.FloatField(blank=True, null=True)
    c_o_r_amt_f = models.FloatField(blank=True, null=True)
    c_o_r_amt_g = models.FloatField(blank=True, null=True)
    c_o_r_amt_sg = models.FloatField(blank=True, null=True)
    c_o_r_amt_a = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_srm_040_mv'


class OkiTimeEntYearMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    c_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oki_time_ent_year_mv'


class OklTaxTrxDtlsGt(models.Model):
    trx_id = models.FloatField(blank=True, null=True)
    trx_line_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'okl_tax_trx_dtls_gt'


class OklXlaAccDataGt(models.Model):
    tcn_id = models.FloatField(blank=True, null=True)
    legal_entity_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    trx_number = models.CharField(max_length=30, blank=True, null=True)
    representation_code = models.CharField(max_length=20, blank=True, null=True)
    date_transaction_occurred = models.DateField(blank=True, null=True)
    tcl_id = models.FloatField(blank=True, null=True)
    accounting_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    entity_code = models.CharField(max_length=19, blank=True, null=True)
    accounting_class_code = models.CharField(max_length=23, blank=True, null=True)
    tad_id = models.FloatField(blank=True, null=True)
    set_of_books_id = models.FloatField(blank=True, null=True)
    type_of_event = models.CharField(max_length=7, blank=True, null=True)
    line_num = models.FloatField(blank=True, null=True)
    event_type_code = models.CharField(max_length=27, blank=True, null=True)
    event_date = models.DateField(blank=True, null=True)
    period_name = models.CharField(max_length=45, blank=True, null=True)
    gl_transfer_flag = models.CharField(max_length=3, blank=True, null=True)
    je_category_name = models.CharField(max_length=90, blank=True, null=True)
    aeh_description = models.CharField(max_length=720, blank=True, null=True)
    ae_header_id = models.FloatField(blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    entered_dr = models.FloatField(blank=True, null=True)
    entered_cr = models.FloatField(blank=True, null=True)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    gl_sl_link_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    ael_description = models.CharField(max_length=720, blank=True, null=True)
    account_overlay_source_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'okl_xla_acc_data_gt'


class OklXlaEntTcnMapGt(models.Model):
    tcn_id = models.FloatField(blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'okl_xla_ent_tcn_map_gt'


class OklXlaEveHdrTrxMapGt(models.Model):
    tcn_id = models.FloatField(blank=True, null=True)
    type_of_event = models.CharField(max_length=7, blank=True, null=True)
    entity_id = models.FloatField(blank=True, null=True)
    event_id = models.FloatField(blank=True, null=True)
    ae_hdr_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'okl_xla_eve_hdr_trx_map_gt'


class OpiCogs001Mv(models.Model):
    organization_id = models.FloatField()
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    uom_code = models.CharField(max_length=5, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    cogs_val_b = models.FloatField(blank=True, null=True)
    cnt_cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cnt_cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    cnt_cogs_val_sg = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_cogs_001_mv'


class OpiCompScrMv(models.Model):
    row_id = models.TextField(blank=True, null=True)  # This field type is a guess.
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    job_type = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    completion_quantity = models.FloatField(blank=True, null=True)
    completion_value_b = models.FloatField(blank=True, null=True)
    completion_value_g = models.FloatField(blank=True, null=True)
    completion_value_sg = models.FloatField(blank=True, null=True)
    scrap_quantity = models.FloatField(blank=True, null=True)
    scrap_quantity_cnt = models.FloatField(blank=True, null=True)
    scrap_value_b = models.FloatField(blank=True, null=True)
    scrap_value_b_cnt = models.FloatField(blank=True, null=True)
    scrap_value_g = models.FloatField(blank=True, null=True)
    scrap_value_g_cnt = models.FloatField(blank=True, null=True)
    scrap_value_sg = models.FloatField(blank=True, null=True)
    scrap_value_sg_cnt = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_comp_scr_mv'


class OpiCurrProdDel001Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField()
    assembly_item_id = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    late_jobs_cnt = models.FloatField(blank=True, null=True)
    late_jobs_qty = models.FloatField(blank=True, null=True)
    late_jobs_val_b = models.FloatField(blank=True, null=True)
    late_jobs_val_g = models.FloatField(blank=True, null=True)
    late_jobs_val_sg = models.FloatField(blank=True, null=True)
    open_jobs_cnt = models.FloatField(blank=True, null=True)
    open_jobs_qty = models.FloatField(blank=True, null=True)
    open_jobs_val_b = models.FloatField(blank=True, null=True)
    open_jobs_val_g = models.FloatField(blank=True, null=True)
    open_jobs_val_sg = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_curr_prod_del_001_mv'


class OpiDbiResUtlMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    resource_level_flag = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_id = models.CharField(max_length=30, blank=True, null=True)
    resource_org_id = models.CharField(max_length=122, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_group_id = models.CharField(max_length=32, blank=True, null=True)
    department_id = models.CharField(max_length=40, blank=True, null=True)
    resource_department_id = models.CharField(max_length=42, blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    avail_val_b = models.FloatField(blank=True, null=True)
    avail_val_g = models.FloatField(blank=True, null=True)
    avail_qty = models.FloatField(blank=True, null=True)
    actual_val_b = models.FloatField(blank=True, null=True)
    actual_val_g = models.FloatField(blank=True, null=True)
    actual_qty = models.FloatField(blank=True, null=True)
    avail_val_b_cnt = models.FloatField(blank=True, null=True)
    avail_val_g_cnt = models.FloatField(blank=True, null=True)
    avail_qty_cnt = models.FloatField(blank=True, null=True)
    actual_val_b_cnt = models.FloatField(blank=True, null=True)
    actual_val_g_cnt = models.FloatField(blank=True, null=True)
    actual_qty_cnt = models.FloatField(blank=True, null=True)
    avail_val_sg = models.FloatField(blank=True, null=True)
    avail_val_sg_cnt = models.FloatField(blank=True, null=True)
    actual_val_sg = models.FloatField(blank=True, null=True)
    actual_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_dbi_res_utl_mv'


class OpiDbiResVarMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    resource_level_flag = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField(blank=True, null=True)
    resource_org_id = models.CharField(max_length=122, blank=True, null=True)
    resource_group = models.CharField(max_length=30, blank=True, null=True)
    resource_group_id = models.CharField(max_length=32, blank=True, null=True)
    department_id = models.CharField(max_length=40, blank=True, null=True)
    resource_department_id = models.CharField(max_length=42, blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    std_usage_val_b = models.FloatField(blank=True, null=True)
    std_usage_val_g = models.FloatField(blank=True, null=True)
    std_usage_qty = models.FloatField(blank=True, null=True)
    actual_val_b = models.FloatField(blank=True, null=True)
    actual_val_g = models.FloatField(blank=True, null=True)
    actual_qty = models.FloatField(blank=True, null=True)
    std_usage_val_b_cnt = models.FloatField(blank=True, null=True)
    std_usage_val_g_cnt = models.FloatField(blank=True, null=True)
    std_usage_qty_cnt = models.FloatField(blank=True, null=True)
    actual_val_b_cnt = models.FloatField(blank=True, null=True)
    actual_val_g_cnt = models.FloatField(blank=True, null=True)
    actual_qty_cnt = models.FloatField(blank=True, null=True)
    std_usage_val_sg = models.FloatField(blank=True, null=True)
    std_usage_val_sg_cnt = models.FloatField(blank=True, null=True)
    actual_val_sg = models.FloatField(blank=True, null=True)
    actual_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_dbi_res_var_mv'


class OpiInvCcaSumMv(models.Model):
    organization_id = models.FloatField()
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    cycle_count_header_id = models.CharField(max_length=81, blank=True, null=True)
    cycle_count_class_id = models.CharField(max_length=122, blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    source = models.FloatField()
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    number_of_total_entries = models.FloatField(blank=True, null=True)
    count_tot_entries = models.FloatField(blank=True, null=True)
    number_of_hits = models.FloatField(blank=True, null=True)
    count_hits = models.FloatField(blank=True, null=True)
    number_of_misses = models.FloatField(blank=True, null=True)
    count_misses = models.FloatField(blank=True, null=True)
    number_of_exact_matches = models.FloatField(blank=True, null=True)
    count_exact_matches = models.FloatField(blank=True, null=True)
    number_of_adjustments = models.FloatField(blank=True, null=True)
    count_adjustments = models.FloatField(blank=True, null=True)
    positive_adjustment_qty = models.FloatField(blank=True, null=True)
    count_pos_adj_qty = models.FloatField(blank=True, null=True)
    negative_adjustment_qty = models.FloatField(blank=True, null=True)
    count_neg_adj_qty = models.FloatField(blank=True, null=True)
    positive_adjustment_val_b = models.FloatField(blank=True, null=True)
    count_pos_adj_val_b = models.FloatField(blank=True, null=True)
    positive_adjustment_val_g = models.FloatField(blank=True, null=True)
    count_pos_adj_val_g = models.FloatField(blank=True, null=True)
    negative_adjustment_val_b = models.FloatField(blank=True, null=True)
    count_neg_adj_val_b = models.FloatField(blank=True, null=True)
    negative_adjustment_val_g = models.FloatField(blank=True, null=True)
    count_neg_adj_val_g = models.FloatField(blank=True, null=True)
    gross_adjustment_qty = models.FloatField(blank=True, null=True)
    count_gr_adj_qty = models.FloatField(blank=True, null=True)
    gross_adjustment_val_b = models.FloatField(blank=True, null=True)
    count_gr_adj_val_b = models.FloatField(blank=True, null=True)
    gross_adjustment_val_g = models.FloatField(blank=True, null=True)
    count_gr_adj_val_g = models.FloatField(blank=True, null=True)
    net_adjustment_qty = models.FloatField(blank=True, null=True)
    count_net_adj_qty = models.FloatField(blank=True, null=True)
    net_adjustment_val_b = models.FloatField(blank=True, null=True)
    count_net_adj_val_b = models.FloatField(blank=True, null=True)
    net_adjustment_val_g = models.FloatField(blank=True, null=True)
    count_net_adj_val_g = models.FloatField(blank=True, null=True)
    system_inventory_qty = models.FloatField(blank=True, null=True)
    count_sys_inv_qty = models.FloatField(blank=True, null=True)
    system_inventory_val_b = models.FloatField(blank=True, null=True)
    count_sys_inv_val_b = models.FloatField(blank=True, null=True)
    system_inventory_val_g = models.FloatField(blank=True, null=True)
    count_sys_inv_val_g = models.FloatField(blank=True, null=True)
    positive_adjustment_val_sg = models.FloatField(blank=True, null=True)
    count_pos_adj_val_sg = models.FloatField(blank=True, null=True)
    negative_adjustment_val_sg = models.FloatField(blank=True, null=True)
    count_neg_adj_val_sg = models.FloatField(blank=True, null=True)
    gross_adjustment_val_sg = models.FloatField(blank=True, null=True)
    count_gr_adj_val_sg = models.FloatField(blank=True, null=True)
    net_adjustment_val_sg = models.FloatField(blank=True, null=True)
    count_net_adj_val_sg = models.FloatField(blank=True, null=True)
    system_inventory_val_sg = models.FloatField(blank=True, null=True)
    count_sys_inv_val_sg = models.FloatField(blank=True, null=True)
    count_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_inv_cca_sum_mv'


class OpiInvItdOrgMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    inv_balance_g = models.FloatField(blank=True, null=True)
    inv_balance_b = models.FloatField(blank=True, null=True)
    inv_balance_sg = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_inv_itd_org_mv'


class OpiInvTypOrgMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    inventory_type = models.CharField(max_length=3, blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField()
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    count_total = models.FloatField(blank=True, null=True)
    inv_value_g = models.FloatField(blank=True, null=True)
    count_i_v_g = models.FloatField(blank=True, null=True)
    inv_value_b = models.FloatField(blank=True, null=True)
    count_i_v_b = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_inv_typ_org_mv'


class OpiInvValSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=281, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    onhand_value_g = models.FloatField(blank=True, null=True)
    count_ovg = models.FloatField(blank=True, null=True)
    onhand_value_b = models.FloatField(blank=True, null=True)
    count_ovb = models.FloatField(blank=True, null=True)
    onhand_qty = models.FloatField(blank=True, null=True)
    count_o_qty = models.FloatField(blank=True, null=True)
    intransit_value_g = models.FloatField(blank=True, null=True)
    count_ivg = models.FloatField(blank=True, null=True)
    intransit_value_b = models.FloatField(blank=True, null=True)
    count_ivb = models.FloatField(blank=True, null=True)
    intransit_qty = models.FloatField(blank=True, null=True)
    count_i_qty = models.FloatField(blank=True, null=True)
    wip_value_g = models.FloatField(blank=True, null=True)
    count_wvg = models.FloatField(blank=True, null=True)
    wip_value_b = models.FloatField(blank=True, null=True)
    count_wvb = models.FloatField(blank=True, null=True)
    inv_total_value_g = models.FloatField(blank=True, null=True)
    count_i_t_v_g = models.FloatField(blank=True, null=True)
    inv_total_value_b = models.FloatField(blank=True, null=True)
    count_i_t_v_b = models.FloatField(blank=True, null=True)
    onhand_value_sg = models.FloatField(blank=True, null=True)
    count_ovsg = models.FloatField(blank=True, null=True)
    intransit_value_sg = models.FloatField(blank=True, null=True)
    count_ivsg = models.FloatField(blank=True, null=True)
    wip_value_sg = models.FloatField(blank=True, null=True)
    count_wvsg = models.FloatField(blank=True, null=True)
    inv_total_value_sg = models.FloatField(blank=True, null=True)
    count_i_t_v_sg = models.FloatField(blank=True, null=True)
    count_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_inv_val_sum_mv'


class OpiJobs001Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=25, blank=True, null=True)
    uom_code = models.CharField(max_length=5, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    prod_usage_qty = models.FloatField(blank=True, null=True)
    cnt_prod_usage_qty = models.FloatField(blank=True, null=True)
    prod_usage_val_b = models.FloatField(blank=True, null=True)
    cnt_prod_usage_val_b = models.FloatField(blank=True, null=True)
    prod_usage_val_g = models.FloatField(blank=True, null=True)
    cnt_prod_usage_val_g = models.FloatField(blank=True, null=True)
    prod_usage_val_sg = models.FloatField(blank=True, null=True)
    cnt_prod_usage_val_sg = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_jobs_001_mv'


class OpiMfgVarSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    assembly_item_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    source = models.FloatField()
    std_value_b = models.FloatField(blank=True, null=True)
    std_value_b_cnt = models.FloatField(blank=True, null=True)
    std_value_g = models.FloatField(blank=True, null=True)
    std_value_g_cnt = models.FloatField(blank=True, null=True)
    act_value_b = models.FloatField(blank=True, null=True)
    act_value_b_cnt = models.FloatField(blank=True, null=True)
    act_value_g = models.FloatField(blank=True, null=True)
    act_value_g_cnt = models.FloatField(blank=True, null=True)
    actual_qty_completed = models.FloatField(blank=True, null=True)
    act_qty_completed_cnt = models.FloatField(blank=True, null=True)
    std_value_sg = models.FloatField(blank=True, null=True)
    std_value_sg_cnt = models.FloatField(blank=True, null=True)
    act_value_sg = models.FloatField(blank=True, null=True)
    act_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_mfg_var_sum_mv'


class OpiMtlVarActMvF(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    job_type = models.FloatField()
    job_id = models.FloatField()
    assembly_item_id = models.FloatField(blank=True, null=True)
    component_item_id = models.FloatField(blank=True, null=True)
    source = models.FloatField()
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_quantity_cnt = models.FloatField(blank=True, null=True)
    actual_value_b = models.FloatField(blank=True, null=True)
    actual_value_b_cnt = models.FloatField(blank=True, null=True)
    actual_value_g = models.FloatField(blank=True, null=True)
    actual_value_g_cnt = models.FloatField(blank=True, null=True)
    actual_value_sg = models.FloatField(blank=True, null=True)
    actual_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_mtl_var_act_mv_f'


class OpiMtlVarMvF(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    assembly_item_id = models.FloatField(blank=True, null=True)
    completion_date = models.DateField(blank=True, null=True)
    std_usage_value_b = models.FloatField(blank=True, null=True)
    std_usage_value_b_cnt = models.FloatField(blank=True, null=True)
    std_usage_value_g = models.FloatField(blank=True, null=True)
    std_usage_value_g_cnt = models.FloatField(blank=True, null=True)
    act_usage_value_b = models.FloatField(blank=True, null=True)
    act_usage_value_b_cnt = models.FloatField(blank=True, null=True)
    act_usage_value_g = models.FloatField(blank=True, null=True)
    act_usage_value_g_cnt = models.FloatField(blank=True, null=True)
    source = models.FloatField()
    last_update_date = models.DateField(blank=True, null=True)
    std_usage_value_sg = models.FloatField(blank=True, null=True)
    std_usage_value_sg_cnt = models.FloatField(blank=True, null=True)
    act_usage_value_sg = models.FloatField(blank=True, null=True)
    act_usage_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_mtl_var_mv_f'


class OpiMtlVarSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    assembly_item_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    std_value_b = models.FloatField(blank=True, null=True)
    std_value_b_cnt = models.FloatField(blank=True, null=True)
    std_value_g = models.FloatField(blank=True, null=True)
    std_value_g_cnt = models.FloatField(blank=True, null=True)
    act_value_b = models.FloatField(blank=True, null=True)
    act_value_b_cnt = models.FloatField(blank=True, null=True)
    act_value_g = models.FloatField(blank=True, null=True)
    act_value_g_cnt = models.FloatField(blank=True, null=True)
    std_value_sg = models.FloatField(blank=True, null=True)
    std_value_sg_cnt = models.FloatField(blank=True, null=True)
    act_value_sg = models.FloatField(blank=True, null=True)
    act_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_mtl_var_sum_mv'


class OpiOntimeProd001Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    late_prod_cnt = models.FloatField(blank=True, null=True)
    late_prod_qty = models.FloatField(blank=True, null=True)
    late_prod_qty_cnt = models.FloatField(blank=True, null=True)
    late_prod_val_b = models.FloatField(blank=True, null=True)
    late_prod_val_b_cnt = models.FloatField(blank=True, null=True)
    late_prod_val_g = models.FloatField(blank=True, null=True)
    late_prod_val_g_cnt = models.FloatField(blank=True, null=True)
    late_prod_val_sg = models.FloatField(blank=True, null=True)
    late_prod_val_sg_cnt = models.FloatField(blank=True, null=True)
    ontime_prod_cnt = models.FloatField(blank=True, null=True)
    ontime_prod_qty = models.FloatField(blank=True, null=True)
    ontime_prod_qty_cnt = models.FloatField(blank=True, null=True)
    ontime_prod_val_b = models.FloatField(blank=True, null=True)
    ontime_prod_val_b_cnt = models.FloatField(blank=True, null=True)
    ontime_prod_val_g = models.FloatField(blank=True, null=True)
    ontime_prod_val_g_cnt = models.FloatField(blank=True, null=True)
    ontime_prod_val_sg = models.FloatField(blank=True, null=True)
    ontime_prod_val_sg_cnt = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ontime_prod_001_mv'


class OpiPgmCatMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_b_cnt = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_g_cnt = models.FloatField(blank=True, null=True)
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_b_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    fulfilled_val_sg_cnt = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    cogs_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_pgm_cat_mv'


class OpiPgmCbnMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    top_model_item_id = models.CharField(max_length=81, blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=30, blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_b = models.FloatField(blank=True, null=True)
    pmarker = models.FloatField(blank=True, null=True)
    fulfilled_val_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_b_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    cogs_val_g_cnt = models.FloatField(blank=True, null=True)
    cogs_val_b_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    fulfilled_val_sg_cnt = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    cogs_val_sg_cnt = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_pgm_cbn_mv'


class OpiPgmGrpMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    top_model_item_id = models.CharField(max_length=81, blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=30, blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_b_cnt = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_g_cnt = models.FloatField(blank=True, null=True)
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_b_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    fulfilled_val_sg_cnt = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    cogs_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_pgm_grp_mv'


class OpiPgmSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    customer_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    top_model_org_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    customer_item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    fulfilled_val_g = models.FloatField(blank=True, null=True)
    fulfilled_val_g_cnt = models.FloatField(blank=True, null=True)
    fulfilled_val_b = models.FloatField(blank=True, null=True)
    fulfilled_val_b_cnt = models.FloatField(blank=True, null=True)
    cogs_val_g = models.FloatField(blank=True, null=True)
    cogs_val_g_cnt = models.FloatField(blank=True, null=True)
    cogs_val_b = models.FloatField(blank=True, null=True)
    cogs_val_b_cnt = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=30, blank=True, null=True)
    fulfilled_val_sg = models.FloatField(blank=True, null=True)
    fulfilled_val_sg_cnt = models.FloatField(blank=True, null=True)
    cogs_val_sg = models.FloatField(blank=True, null=True)
    cogs_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_pgm_sum_mv'


class OpiProdScrMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    production_qty = models.FloatField(blank=True, null=True)
    production_qty_cnt = models.FloatField(blank=True, null=True)
    production_val_b = models.FloatField(blank=True, null=True)
    production_val_b_cnt = models.FloatField(blank=True, null=True)
    production_val_g = models.FloatField(blank=True, null=True)
    production_val_g_cnt = models.FloatField(blank=True, null=True)
    scrap_qty = models.FloatField(blank=True, null=True)
    scrap_qty_cnt = models.FloatField(blank=True, null=True)
    scrap_val_b = models.FloatField(blank=True, null=True)
    scrap_val_b_cnt = models.FloatField(blank=True, null=True)
    scrap_val_g = models.FloatField(blank=True, null=True)
    scrap_val_g_cnt = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    production_val_sg = models.FloatField(blank=True, null=True)
    production_val_sg_cnt = models.FloatField(blank=True, null=True)
    scrap_val_sg = models.FloatField(blank=True, null=True)
    scrap_val_sg_cnt = models.FloatField(blank=True, null=True)
    job_id = models.FloatField(blank=True, null=True)
    job_type = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_prod_scr_mv'


class OpiPtpCbnMv(models.Model):
    f_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    cost_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    conv_rowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_quantity_cnt = models.FloatField(blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    planned_item = models.CharField(max_length=1, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    unit_cost = models.FloatField(blank=True, null=True)
    conversion_rate = models.FloatField(blank=True, null=True)
    marker = models.FloatField(blank=True, null=True)
    sec_conversion_rate = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ptp_cbn_mv'


class OpiPtpItemFMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    planned_item = models.CharField(max_length=1, blank=True, null=True)
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_standard_value_b = models.FloatField(blank=True, null=True)
    actual_standard_value_g = models.FloatField(blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    planned_standard_value_b = models.FloatField(blank=True, null=True)
    planned_standard_value_g = models.FloatField(blank=True, null=True)
    act_qty_cnt = models.FloatField(blank=True, null=True)
    act_std_val_b_cnt = models.FloatField(blank=True, null=True)
    act_std_val_g_cnt = models.FloatField(blank=True, null=True)
    pln_qty_cnt = models.FloatField(blank=True, null=True)
    pln_std_val_b_cnt = models.FloatField(blank=True, null=True)
    pln_std_val_g_cnt = models.FloatField(blank=True, null=True)
    actual_standard_value_sg = models.FloatField(blank=True, null=True)
    act_std_val_sg_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_sg = models.FloatField(blank=True, null=True)
    pln_std_val_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ptp_item_f_mv'


class OpiPtpRptBndMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    data_clean_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ptp_rpt_bnd_mv'


class OpiPtpSumFMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    actual_quantity = models.FloatField(blank=True, null=True)
    actual_quantity_cnt = models.FloatField(blank=True, null=True)
    actual_standard_value_b = models.FloatField(blank=True, null=True)
    actual_standard_value_b_cnt = models.FloatField(blank=True, null=True)
    actual_standard_value_g = models.FloatField(blank=True, null=True)
    actual_standard_value_g_cnt = models.FloatField(blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    planned_quantity_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_b = models.FloatField(blank=True, null=True)
    planned_standard_value_b_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_g = models.FloatField(blank=True, null=True)
    planned_standard_value_g_cnt = models.FloatField(blank=True, null=True)
    actual_standard_value_sg = models.FloatField(blank=True, null=True)
    actual_standard_value_sg_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_sg = models.FloatField(blank=True, null=True)
    planned_standard_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ptp_sum_f_mv'


class OpiPtpSumStgMv(models.Model):
    baseline_id = models.FloatField()
    plan_name = models.CharField(max_length=10)
    owning_org_id = models.FloatField()
    organization_id = models.FloatField()
    inventory_item_id = models.FloatField(blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    planned_quantity = models.FloatField(blank=True, null=True)
    planned_quantity_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_b = models.FloatField(blank=True, null=True)
    planned_standard_value_b_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_g = models.FloatField(blank=True, null=True)
    planned_standard_value_g_cnt = models.FloatField(blank=True, null=True)
    planned_standard_value_sg = models.FloatField(blank=True, null=True)
    planned_standard_value_sg_cnt = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_ptp_sum_stg_mv'


class OpiScrapReason001Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    scrap_reason_id = models.FloatField(blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    scrap_qty = models.FloatField(blank=True, null=True)
    scrap_qty_cnt = models.FloatField(blank=True, null=True)
    scrap_val_b = models.FloatField(blank=True, null=True)
    scrap_val_b_cnt = models.FloatField(blank=True, null=True)
    scrap_val_g = models.FloatField(blank=True, null=True)
    scrap_val_g_cnt = models.FloatField(blank=True, null=True)
    scrap_val_sg = models.FloatField(blank=True, null=True)
    scrap_val_sg_cnt = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_scrap_reason_001_mv'


class OpiScrapSumMv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    source = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    grouping_id = models.FloatField(blank=True, null=True)
    item_cat_flag = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    report_date_julian = models.FloatField(blank=True, null=True)
    production_qty = models.FloatField(blank=True, null=True)
    production_qty_cnt = models.FloatField(blank=True, null=True)
    production_val_b = models.FloatField(blank=True, null=True)
    production_val_b_cnt = models.FloatField(blank=True, null=True)
    production_val_g = models.FloatField(blank=True, null=True)
    production_val_g_cnt = models.FloatField(blank=True, null=True)
    scrap_qty = models.FloatField(blank=True, null=True)
    scrap_qty_cnt = models.FloatField(blank=True, null=True)
    scrap_val_b = models.FloatField(blank=True, null=True)
    scrap_val_b_cnt = models.FloatField(blank=True, null=True)
    scrap_val_g = models.FloatField(blank=True, null=True)
    scrap_val_g_cnt = models.FloatField(blank=True, null=True)
    production_val_sg = models.FloatField(blank=True, null=True)
    production_val_sg_cnt = models.FloatField(blank=True, null=True)
    scrap_val_sg = models.FloatField(blank=True, null=True)
    scrap_val_sg_cnt = models.FloatField(blank=True, null=True)
    lines_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_scrap_sum_mv'


class OpiWms001Mv(models.Model):
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=10, blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    rtp_cycle_time = models.FloatField(blank=True, null=True)
    c_rtp_cycle_time = models.FloatField(blank=True, null=True)
    putaway_quantity = models.FloatField(blank=True, null=True)
    c_putaway_quantity = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'opi_wms_001_mv'


class OpiWms002Mv(models.Model):
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    transactions_cnt = models.FloatField(blank=True, null=True)
    count_field = models.FloatField(db_column='count(*)', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.

    class Meta:
        managed = False
        db_table = 'opi_wms_002_mv'


class OpiWms004Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=281, blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    aggregation_level_flag = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    stored_qty = models.FloatField(blank=True, null=True)
    cnt_stored_qty = models.FloatField(blank=True, null=True)
    weight_stored = models.FloatField(blank=True, null=True)
    cnt_weight_stored = models.FloatField(blank=True, null=True)
    utilized_volume = models.FloatField(blank=True, null=True)
    cnt_utilized_volume = models.FloatField(blank=True, null=True)
    cnt_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_wms_004_mv'


class OpiWms006Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    picks = models.FloatField(blank=True, null=True)
    picks_cnt = models.FloatField(blank=True, null=True)
    picks_with_exceptions = models.FloatField(blank=True, null=True)
    picks_with_exceptions_cnt = models.FloatField(blank=True, null=True)
    pick_exceptions = models.FloatField(blank=True, null=True)
    pick_exceptions_cnt = models.FloatField(blank=True, null=True)
    total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_wms_006_mv'


class OpiWms007Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    exceptions = models.FloatField(blank=True, null=True)
    exceptions_cnt = models.FloatField(blank=True, null=True)
    total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_wms_007_mv'


class OpiWms008Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    operation_plan_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    elapsed_time = models.FloatField(blank=True, null=True)
    elapsed_time_cnt = models.FloatField(blank=True, null=True)
    executions = models.FloatField(blank=True, null=True)
    executions_cnt = models.FloatField(blank=True, null=True)
    exec_with_exceptions = models.FloatField(blank=True, null=True)
    exec_with_exceptions_cnt = models.FloatField(blank=True, null=True)
    exceptions = models.FloatField(blank=True, null=True)
    exceptions_cnt = models.FloatField(blank=True, null=True)
    total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_wms_008_mv'


class OpiWms009Mv(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    subinventory_code = models.CharField(max_length=51, blank=True, null=True)
    inv_category_id = models.FloatField(blank=True, null=True)
    item_org_id = models.CharField(max_length=81, blank=True, null=True)
    operation_plan_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    agg_level = models.FloatField(blank=True, null=True)
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    month_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    exceptions = models.FloatField(blank=True, null=True)
    exceptions_cnt = models.FloatField(blank=True, null=True)
    total_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'opi_wms_009_mv'


class Oscar(models.Model):
    user_id = models.BigIntegerField()
    user_name = models.CharField(max_length=100)
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    encrypted_foundation_password = models.CharField(max_length=100)
    encrypted_user_password = models.CharField(max_length=100)
    session_number = models.FloatField()
    start_date = models.DateField()
    end_date = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    last_logon_date = models.DateField(blank=True, null=True)
    password_date = models.DateField(blank=True, null=True)
    password_accesses_left = models.BigIntegerField(blank=True, null=True)
    password_lifespan_accesses = models.BigIntegerField(blank=True, null=True)
    password_lifespan_days = models.BigIntegerField(blank=True, null=True)
    employee_id = models.BigIntegerField(blank=True, null=True)
    email_address = models.CharField(max_length=240, blank=True, null=True)
    fax = models.CharField(max_length=80, blank=True, null=True)
    customer_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    web_password = models.CharField(max_length=240, blank=True, null=True)
    user_guid = models.TextField(blank=True, null=True)  # This field type is a guess.
    gcn_code_combination_id = models.BigIntegerField(blank=True, null=True)
    person_party_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'oscar'


class OzfAvailableQuantityTmpT(models.Model):
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    line_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    primary_uom_code = models.CharField(max_length=30, blank=True, null=True)
    available_quantity = models.FloatField(blank=True, null=True)
    available_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_available_quantity_tmp_t'


class OzfBaselineSalesMv(models.Model):
    data_source = models.CharField(max_length=30)
    market_type = models.CharField(max_length=30)
    market_id = models.FloatField()
    item_level = models.CharField(max_length=30)
    item_id = models.FloatField()
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    baseline_qty = models.FloatField(blank=True, null=True)
    baseline_amt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_baseline_sales_mv'


class OzfCustFundSummaryMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    bill_to_site_use_id = models.FloatField(blank=True, null=True)
    ship_to_site_use_id = models.FloatField(blank=True, null=True)
    product_level_type = models.CharField(max_length=30, blank=True, null=True)
    product_id = models.FloatField(blank=True, null=True)
    plan_type = models.CharField(max_length=30, blank=True, null=True)
    plan_id = models.FloatField(blank=True, null=True)
    fund_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    status_code = models.CharField(max_length=30, blank=True, null=True)
    owner = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    utilized_amt = models.FloatField(blank=True, null=True)
    earned_amt = models.FloatField(blank=True, null=True)
    paid_amt = models.FloatField(blank=True, null=True)
    func_curr_utilized_amt = models.FloatField(blank=True, null=True)
    func_curr_earned_amt = models.FloatField(blank=True, null=True)
    func_curr_paid_amt = models.FloatField(blank=True, null=True)
    plan_curr_utilized_amt = models.FloatField(blank=True, null=True)
    plan_curr_earned_amt = models.FloatField(blank=True, null=True)
    plan_curr_paid_amt = models.FloatField(blank=True, null=True)
    univ_curr_utilized_amt = models.FloatField(blank=True, null=True)
    univ_curr_earned_amt = models.FloatField(blank=True, null=True)
    univ_curr_paid_amt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_cust_fund_summary_mv'


class OzfEarningSummaryMv(models.Model):
    cust_account_id = models.FloatField(blank=True, null=True)
    item_category_id = models.FloatField(blank=True, null=True)
    offer_type = models.CharField(max_length=30, blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    activity_type = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    amount_earned = models.FloatField(blank=True, null=True)
    amount_earned_cnt = models.FloatField(blank=True, null=True)
    amount_paid = models.FloatField(blank=True, null=True)
    amount_paid_cnt = models.FloatField(blank=True, null=True)
    amount_balance = models.FloatField(blank=True, null=True)
    amount_balance_cnt = models.FloatField(blank=True, null=True)
    all_cnt = models.FloatField(blank=True, null=True)
    grp_cust_account_id = models.FloatField(blank=True, null=True)
    grp_item_category_id = models.FloatField(blank=True, null=True)
    grp_offer_type = models.FloatField(blank=True, null=True)
    grp_object_type = models.FloatField(blank=True, null=True)
    grp_activity_type = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_earning_summary_mv'


class OzfInventorySummaryMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    party_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    primary_uom = models.CharField(max_length=3, blank=True, null=True)
    common_quantity_in = models.FloatField(blank=True, null=True)
    common_quantity_out = models.FloatField(blank=True, null=True)
    common_quantity_manual = models.FloatField(blank=True, null=True)
    primary_quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_inventory_summary_mv'


class OzfOfferSelectionsT(models.Model):
    offer_id = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_offer_selections_t'


class OzfOrderSalesSumryMv(models.Model):
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    sold_to_cust_account_id = models.FloatField(blank=True, null=True)
    ship_to_site_use_id = models.FloatField(blank=True, null=True)
    bill_to_site_use_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    sales_qty = models.FloatField(blank=True, null=True)
    sales_amt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_order_sales_sumry_mv'


class OzfPartyMarketSegmentsT(models.Model):
    ams_party_market_segment_id = models.FloatField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    object_version_number = models.IntegerField(blank=True, null=True)
    market_segment_id = models.FloatField()
    market_segment_flag = models.CharField(max_length=1)
    party_id = models.FloatField()
    start_date_active = models.DateField(blank=True, null=True)
    end_date_active = models.DateField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    security_group_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    territory_id = models.FloatField(blank=True, null=True)
    market_qualifier_type = models.CharField(max_length=15, blank=True, null=True)
    market_qualifier_reference = models.FloatField(blank=True, null=True)
    cust_account_id = models.FloatField(blank=True, null=True)
    cust_acct_site_id = models.FloatField(blank=True, null=True)
    site_use_code = models.CharField(max_length=30, blank=True, null=True)
    bill_to_site_use_id = models.FloatField(blank=True, null=True)
    rollup_party_id = models.FloatField(blank=True, null=True)
    site_use_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_party_market_segments_t'


class OzfSearchSelectionsT(models.Model):
    attribute_value = models.FloatField(blank=True, null=True)
    attribute_id = models.CharField(max_length=100, blank=True, null=True)
    attribute_context = models.CharField(max_length=100, blank=True, null=True)
    search_type = models.CharField(max_length=20, blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ozf_search_selections_t'


class PaBillingProcessGt(models.Model):
    project_id = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    process = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_billing_process_gt'


class PaBug76628881(models.Model):
    document_type = models.CharField(max_length=5, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=20, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    run = models.CharField(max_length=10, blank=True, null=True)
    prev_status = models.CharField(max_length=20, blank=True, null=True)
    packet_id = models.FloatField(blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    sl_no = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_1'


class PaBug76628881Debug(models.Model):
    sl_no = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    debug_text = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_1_debug'


class PaBug76628882(models.Model):
    document_type = models.CharField(max_length=10, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=20, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    run = models.CharField(max_length=10, blank=True, null=True)
    prev_status = models.CharField(max_length=20, blank=True, null=True)
    packet_id = models.FloatField(blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_2'


class PaBug76628882Debug(models.Model):
    sl_no = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    debug_text = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_2_debug'


class PaBug76628883(models.Model):
    document_type = models.CharField(max_length=10, blank=True, null=True)
    document_header_id = models.FloatField(blank=True, null=True)
    document_distribution_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=20, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    run = models.CharField(max_length=10, blank=True, null=True)
    prev_status = models.CharField(max_length=20, blank=True, null=True)
    packet_id = models.FloatField(blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_3'


class PaBug76628883Debug(models.Model):
    sl_no = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    debug_text = models.CharField(max_length=4000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pa_bug7662888_3_debug'


class PaFiAssigTemp(models.Model):
    item_date = models.DateField()
    item_quantity = models.FloatField()

    class Meta:
        managed = False
        db_table = 'pa_fi_assig_temp'


class PjiAcClsFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_ac_cls_f_mv'


class PjiAcClsoFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_ac_clso_f_mv'


class PjiAcOrgFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_ac_org_f_mv'


class PjiAcOrgoFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    initial_funding_amount = models.FloatField(blank=True, null=True)
    initial_funding_amount_cnt = models.FloatField(blank=True, null=True)
    initial_funding_count = models.FloatField(blank=True, null=True)
    initial_funding_count_cnt = models.FloatField(blank=True, null=True)
    additional_funding_amount = models.FloatField(blank=True, null=True)
    additional_funding_amount_cnt = models.FloatField(blank=True, null=True)
    additional_funding_count = models.FloatField(blank=True, null=True)
    additional_funding_count_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_amount = models.FloatField(blank=True, null=True)
    cancelled_funding_amount_cnt = models.FloatField(blank=True, null=True)
    cancelled_funding_count = models.FloatField(blank=True, null=True)
    cancelled_funding_count_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_amount = models.FloatField(blank=True, null=True)
    funding_adjustment_amount_cnt = models.FloatField(blank=True, null=True)
    funding_adjustment_count = models.FloatField(blank=True, null=True)
    funding_adjustment_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_amount = models.FloatField(blank=True, null=True)
    ar_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_count = models.FloatField(blank=True, null=True)
    ar_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount = models.FloatField(blank=True, null=True)
    ar_cash_applied_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_amount_cnt = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count = models.FloatField(blank=True, null=True)
    ar_invoice_writeoff_count_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount = models.FloatField(blank=True, null=True)
    ar_credit_memo_amount_cnt = models.FloatField(blank=True, null=True)
    ar_credit_memo_count = models.FloatField(blank=True, null=True)
    ar_credit_memo_count_cnt = models.FloatField(blank=True, null=True)
    unbilled_receivables = models.FloatField(blank=True, null=True)
    unbilled_receivables_cnt = models.FloatField(blank=True, null=True)
    unearned_revenue = models.FloatField(blank=True, null=True)
    unearned_revenue_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count = models.FloatField(blank=True, null=True)
    ar_unappr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount = models.FloatField(blank=True, null=True)
    ar_appr_invoice_amount_cnt = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count = models.FloatField(blank=True, null=True)
    ar_appr_invoice_count_cnt = models.FloatField(blank=True, null=True)
    ar_amount_due = models.FloatField(blank=True, null=True)
    ar_amount_due_cnt = models.FloatField(blank=True, null=True)
    ar_count_due = models.FloatField(blank=True, null=True)
    ar_count_due_cnt = models.FloatField(blank=True, null=True)
    ar_amount_overdue = models.FloatField(blank=True, null=True)
    ar_amount_overdue_cnt = models.FloatField(blank=True, null=True)
    ar_count_overdue = models.FloatField(blank=True, null=True)
    ar_count_overdue_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv = models.FloatField(blank=True, null=True)
    dormant_backlog_inactiv_cnt = models.FloatField(blank=True, null=True)
    dormant_backlog_start = models.FloatField(blank=True, null=True)
    dormant_backlog_start_cnt = models.FloatField(blank=True, null=True)
    lost_backlog = models.FloatField(blank=True, null=True)
    lost_backlog_cnt = models.FloatField(blank=True, null=True)
    active_backlog = models.FloatField(blank=True, null=True)
    active_backlog_cnt = models.FloatField(blank=True, null=True)
    revenue_at_risk = models.FloatField(blank=True, null=True)
    revenue_at_risk_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_ac_orgo_f_mv'


class PjiAvOrgoFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    threshold = models.FloatField(blank=True, null=True)
    as_of_date = models.FloatField(blank=True, null=True)
    bckt_1_cs = models.FloatField(blank=True, null=True)
    bckt_1_cs_cnt = models.FloatField(blank=True, null=True)
    bckt_2_cs = models.FloatField(blank=True, null=True)
    bckt_2_cs_cnt = models.FloatField(blank=True, null=True)
    bckt_3_cs = models.FloatField(blank=True, null=True)
    bckt_3_cs_cnt = models.FloatField(blank=True, null=True)
    bckt_4_cs = models.FloatField(blank=True, null=True)
    bckt_4_cs_cnt = models.FloatField(blank=True, null=True)
    bckt_5_cs = models.FloatField(blank=True, null=True)
    bckt_5_cs_cnt = models.FloatField(blank=True, null=True)
    bckt_1_cm = models.FloatField(blank=True, null=True)
    bckt_1_cm_cnt = models.FloatField(blank=True, null=True)
    bckt_2_cm = models.FloatField(blank=True, null=True)
    bckt_2_cm_cnt = models.FloatField(blank=True, null=True)
    bckt_3_cm = models.FloatField(blank=True, null=True)
    bckt_3_cm_cnt = models.FloatField(blank=True, null=True)
    bckt_4_cm = models.FloatField(blank=True, null=True)
    bckt_4_cm_cnt = models.FloatField(blank=True, null=True)
    bckt_5_cm = models.FloatField(blank=True, null=True)
    bckt_5_cm_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_av_orgo_f_mv'


class PjiCaOrgoFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)
    period_type_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.BigIntegerField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    threshold = models.FloatField(blank=True, null=True)
    as_of_date = models.FloatField(blank=True, null=True)
    availability = models.FloatField(blank=True, null=True)
    availability_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_ca_orgo_f_mv'


class PjiFpClsEtFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_cls_et_f_mv'


class PjiFpClsEtWtFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_cls_et_wt_f_mv'


class PjiFpClsFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_cls_f_mv'


class PjiFpClsoEtFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_clso_et_f_mv'


class PjiFpClsoEtWtFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_clso_et_wt_f_mv'


class PjiFpClsoFMv(models.Model):
    time_id = models.BigIntegerField()
    project_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    project_class_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    project_org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_clso_f_mv'


class PjiFpOrgEtFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_org_et_f_mv'


class PjiFpOrgEtWtFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_org_et_wt_f_mv'


class PjiFpOrgFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_org_f_mv'


class PjiFpOrgoEtFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_orgo_et_f_mv'


class PjiFpOrgoEtWtFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    exp_evt_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    quantity_cnt = models.FloatField(blank=True, null=True)
    bill_quantity = models.FloatField(blank=True, null=True)
    bill_quantity_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_orgo_et_wt_f_mv'


class PjiFpOrgoFMv(models.Model):
    time_id = models.BigIntegerField()
    organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=30)
    period_type_id = models.BigIntegerField()
    curr_record_type_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField()
    cnt = models.FloatField(blank=True, null=True)
    revenue = models.FloatField(blank=True, null=True)
    revenue_cnt = models.FloatField(blank=True, null=True)
    labor_revenue = models.FloatField(blank=True, null=True)
    labor_revenue_cnt = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    raw_cost_cnt = models.FloatField(blank=True, null=True)
    burdened_cost = models.FloatField(blank=True, null=True)
    burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_raw_cost = models.FloatField(blank=True, null=True)
    bill_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_burdened_cost = models.FloatField(blank=True, null=True)
    bill_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    labor_raw_cost = models.FloatField(blank=True, null=True)
    labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    labor_burdened_cost = models.FloatField(blank=True, null=True)
    labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost = models.FloatField(blank=True, null=True)
    bill_labor_raw_cost_cnt = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost = models.FloatField(blank=True, null=True)
    bill_labor_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    capital_raw_cost = models.FloatField(blank=True, null=True)
    capital_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capital_brdn_cost = models.FloatField(blank=True, null=True)
    capital_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    contract_raw_cost = models.FloatField(blank=True, null=True)
    contract_raw_cost_cnt = models.FloatField(blank=True, null=True)
    contract_brdn_cost = models.FloatField(blank=True, null=True)
    contract_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost = models.FloatField(blank=True, null=True)
    capitalizable_raw_cost_cnt = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost = models.FloatField(blank=True, null=True)
    capitalizable_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    project_count = models.FloatField(blank=True, null=True)
    project_count_cnt = models.FloatField(blank=True, null=True)
    revenue_writeoff = models.FloatField(blank=True, null=True)
    revenue_writeoff_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_revenue = models.FloatField(blank=True, null=True)
    curr_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    curr_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    curr_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_revenue = models.FloatField(blank=True, null=True)
    orig_bgt_revenue_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost = models.FloatField(blank=True, null=True)
    orig_bgt_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs = models.FloatField(blank=True, null=True)
    orig_bgt_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    forecast_revenue = models.FloatField(blank=True, null=True)
    forecast_revenue_cnt = models.FloatField(blank=True, null=True)
    forecast_raw_cost = models.FloatField(blank=True, null=True)
    forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_burdened_cost = models.FloatField(blank=True, null=True)
    forecast_burdened_cost_cnt = models.FloatField(blank=True, null=True)
    forecast_labor_hrs = models.FloatField(blank=True, null=True)
    forecast_labor_hrs_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    cap_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost = models.FloatField(blank=True, null=True)
    cap_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    cap_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_curr_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost = models.FloatField(blank=True, null=True)
    con_orig_bgt_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost = models.FloatField(blank=True, null=True)
    con_forecast_raw_cost_cnt = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost = models.FloatField(blank=True, null=True)
    con_forecast_brdn_cost_cnt = models.FloatField(blank=True, null=True)
    labor_hrs = models.FloatField(blank=True, null=True)
    labor_hrs_cnt = models.FloatField(blank=True, null=True)
    bill_labor_hrs = models.FloatField(blank=True, null=True)
    bill_labor_hrs_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_fp_orgo_f_mv'


class PjiRmJobFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    job_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_job_f_mv'


class PjiRmJoboFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    job_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_jobo_f_mv'


class PjiRmOrgFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_org_f_mv'


class PjiRmOrgoFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    total_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_org_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a = models.FloatField(blank=True, null=True)
    bill_wtd_res_hrs_a_cnt = models.FloatField(blank=True, null=True)
    training_hrs_a = models.FloatField(blank=True, null=True)
    training_hrs_a_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_a = models.FloatField(blank=True, null=True)
    unassigned_hrs_a_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    conf_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_org_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s = models.FloatField(blank=True, null=True)
    prov_bill_wtd_res_hrs_s_cnt = models.FloatField(blank=True, null=True)
    training_hrs_s = models.FloatField(blank=True, null=True)
    training_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s = models.FloatField(blank=True, null=True)
    reduce_capacity_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s = models.FloatField(blank=True, null=True)
    available_hrs_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt1_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt2_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt3_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt4_s_cnt = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s = models.FloatField(blank=True, null=True)
    available_res_count_bkt5_s_cnt = models.FloatField(blank=True, null=True)
    total_res_count = models.FloatField(blank=True, null=True)
    total_res_count_cnt = models.FloatField(blank=True, null=True)
    missing_hrs_a = models.FloatField(blank=True, null=True)
    missing_hrs_a_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_orgo_f_mv'


class PjiRmWtFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.BigIntegerField()
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_wt_f_mv'


class PjiRmWtoFMv(models.Model):
    cnt = models.FloatField(blank=True, null=True)
    capacity_hrs = models.FloatField(blank=True, null=True)
    capacity_hrs_cnt = models.FloatField(blank=True, null=True)
    total_hrs_a = models.FloatField(blank=True, null=True)
    total_hrs_a_cnt = models.FloatField(blank=True, null=True)
    bill_hrs_a = models.FloatField(blank=True, null=True)
    bill_hrs_a_cnt = models.FloatField(blank=True, null=True)
    conf_hrs_s = models.FloatField(blank=True, null=True)
    conf_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_hrs_s = models.FloatField(blank=True, null=True)
    prov_hrs_s_cnt = models.FloatField(blank=True, null=True)
    unassigned_hrs_s = models.FloatField(blank=True, null=True)
    unassigned_hrs_s_cnt = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s = models.FloatField(blank=True, null=True)
    conf_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s = models.FloatField(blank=True, null=True)
    prov_overcom_hrs_s_cnt = models.FloatField(blank=True, null=True)
    time_id = models.BigIntegerField()
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    calendar_type = models.CharField(max_length=1)
    period_type_id = models.BigIntegerField()
    work_type_id = models.BigIntegerField()
    expenditure_org_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_rm_wto_f_mv'


class PjiTimeDayMv(models.Model):
    report_date_julian = models.FloatField(blank=True, null=True)
    report_date = models.DateField(blank=True, null=True)
    period_name = models.CharField(max_length=119, blank=True, null=True)
    qtr_name = models.CharField(max_length=100, blank=True, null=True)
    year_name = models.CharField(max_length=100, blank=True, null=True)
    period_type = models.CharField(max_length=19, blank=True, null=True)
    calendar_id = models.FloatField(blank=True, null=True)
    period_id = models.FloatField(blank=True, null=True)
    qtr_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    period_start_date = models.DateField(blank=True, null=True)
    period_end_date = models.DateField(blank=True, null=True)
    qtr_start_date = models.DateField(blank=True, null=True)
    qtr_end_date = models.DateField(blank=True, null=True)
    year_start_date = models.DateField(blank=True, null=True)
    year_end_date = models.DateField(blank=True, null=True)
    period_original_name = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_time_day_mv'


class PjiTimeMv(models.Model):
    period_name = models.CharField(max_length=100, blank=True, null=True)
    quarter_name = models.CharField(max_length=100, blank=True, null=True)
    year = models.CharField(max_length=100, blank=True, null=True)
    period_type = models.CharField(max_length=19, blank=True, null=True)
    calendar_id = models.FloatField(blank=True, null=True)
    period_id = models.FloatField(blank=True, null=True)
    quarter_id = models.FloatField(blank=True, null=True)
    year_id = models.FloatField(blank=True, null=True)
    sequence = models.FloatField(blank=True, null=True)
    period_start_date = models.DateField(blank=True, null=True)
    period_end_date = models.DateField(blank=True, null=True)
    start_date_time = models.FloatField(blank=True, null=True)
    end_date_time = models.FloatField(blank=True, null=True)
    quarter_start_date = models.DateField(blank=True, null=True)
    quarter_end_date = models.DateField(blank=True, null=True)
    year_start_date = models.DateField(blank=True, null=True)
    year_end_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_time_mv'


class PjiTimePaRptStrMv(models.Model):
    calendar_id = models.FloatField()
    calendar_type = models.CharField(max_length=1, blank=True, null=True)
    report_date = models.DateField()
    period_type_id = models.FloatField(blank=True, null=True)
    record_type_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'pji_time_pa_rpt_str_mv'


class PjiTimeTrendMv(models.Model):
    reporting_period = models.CharField(max_length=120, blank=True, null=True)
    reporting_period_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=100, blank=True, null=True)
    period_id = models.FloatField(blank=True, null=True)
    sequence = models.FloatField(blank=True, null=True)
    period_type = models.CharField(max_length=19, blank=True, null=True)
    period_start_date = models.DateField(blank=True, null=True)
    original_reporting_period = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pji_time_trend_mv'


class PlanTable(models.Model):
    statement_id = models.CharField(max_length=30, blank=True, null=True)
    timestamp = models.DateField(blank=True, null=True)
    remarks = models.CharField(max_length=80, blank=True, null=True)
    operation = models.CharField(max_length=30, blank=True, null=True)
    options = models.CharField(max_length=255, blank=True, null=True)
    object_node = models.CharField(max_length=128, blank=True, null=True)
    object_owner = models.CharField(max_length=30, blank=True, null=True)
    object_name = models.CharField(max_length=30, blank=True, null=True)
    object_instance = models.BigIntegerField(blank=True, null=True)
    object_type = models.CharField(max_length=30, blank=True, null=True)
    optimizer = models.CharField(max_length=255, blank=True, null=True)
    search_columns = models.FloatField(blank=True, null=True)
    id = models.BigIntegerField(blank=True, null=True)
    parent_id = models.BigIntegerField(blank=True, null=True)
    position = models.BigIntegerField(blank=True, null=True)
    cost = models.BigIntegerField(blank=True, null=True)
    cardinality = models.BigIntegerField(blank=True, null=True)
    bytes = models.BigIntegerField(blank=True, null=True)
    other_tag = models.CharField(max_length=255, blank=True, null=True)
    partition_start = models.CharField(max_length=255, blank=True, null=True)
    partition_stop = models.CharField(max_length=255, blank=True, null=True)
    partition_id = models.BigIntegerField(blank=True, null=True)
    other = models.TextField(blank=True, null=True)  # This field type is a guess.
    distribution = models.CharField(max_length=30, blank=True, null=True)
    cpu_cost = models.BigIntegerField(blank=True, null=True)
    io_cost = models.BigIntegerField(blank=True, null=True)
    temp_space = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'plan_table'


class PoaApi001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_api_001_mv'


class PoaApi002Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    parent_company_id = models.BigIntegerField(blank=True, null=True)
    parent_cc_id = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_api_002_mv'


class PoaApiBsJMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    pofrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    comrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    amount_financed_b = models.FloatField(blank=True, null=True)
    amount_financed_g = models.FloatField(blank=True, null=True)
    amount_financed_sg = models.FloatField(blank=True, null=True)
    amount_recouped_b = models.FloatField(blank=True, null=True)
    amount_recouped_g = models.FloatField(blank=True, null=True)
    amount_recouped_sg = models.FloatField(blank=True, null=True)
    approved_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_type = models.CharField(max_length=25, blank=True, null=True)
    line_type_lookup_code = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_api_bs_j_mv'


class PoaApiBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_api_bs_mv'


class PoaBmItemOMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_bm_item_o_mv'


class PoaBmItemSMv(models.Model):
    ent_year_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_bm_item_s_mv'


class PoaDbiPllMv(models.Model):
    line_location_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField()
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    order_type = models.CharField(max_length=25, blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    base_uom_conv_rate = models.FloatField(blank=True, null=True)
    expected_date = models.DateField(blank=True, null=True)
    days_late_receipt_allowed = models.FloatField(blank=True, null=True)
    days_early_receipt_allowed = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    price_override = models.FloatField(blank=True, null=True)
    matching_basis = models.CharField(max_length=30, blank=True, null=True)
    receiving_routing_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    payment_type = models.CharField(max_length=30, blank=True, null=True)
    shipment_type = models.CharField(max_length=25, blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)
    func_cur_code = models.CharField(max_length=25, blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_dbi_pll_mv'


class PoaIdl001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    leakage_amount_b = models.FloatField(blank=True, null=True)
    leakage_amount_g = models.FloatField(blank=True, null=True)
    leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_leakage_amount_b = models.FloatField(blank=True, null=True)
    c_leakage_amount_g = models.FloatField(blank=True, null=True)
    c_leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_idl_001_mv'


class PoaIdl002Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    parent_company_id = models.BigIntegerField(blank=True, null=True)
    parent_cc_id = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    leakage_amount_b = models.FloatField(blank=True, null=True)
    leakage_amount_g = models.FloatField(blank=True, null=True)
    leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_leakage_amount_b = models.FloatField(blank=True, null=True)
    c_leakage_amount_g = models.FloatField(blank=True, null=True)
    c_leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_idl_002_mv'


class PoaIdlBsJMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    vrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    vsrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    po_matched_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_required_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_idl_bs_j_mv'


class PoaIdlBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    leakage_amount_b = models.FloatField(blank=True, null=True)
    leakage_amount_g = models.FloatField(blank=True, null=True)
    leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_amount_b = models.FloatField(blank=True, null=True)
    c_amount_g = models.FloatField(blank=True, null=True)
    c_amount_sg = models.FloatField(blank=True, null=True)
    c_leakage_amount_b = models.FloatField(blank=True, null=True)
    c_leakage_amount_g = models.FloatField(blank=True, null=True)
    c_leakage_amount_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_idl_bs_mv'


class PoaItemsMv(models.Model):
    trid = models.TextField(blank=True, null=True)  # This field type is a guess.
    vrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    po_item_id = models.FloatField()
    vendor_product_num = models.CharField(max_length=125, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_items_mv'


class PoaMidBsJMv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    vrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    source = models.CharField(max_length=25, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dist_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_mid_bs_j_mv'


class PoaMidBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    supplier_id = models.BigIntegerField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    inv_d_created_by = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    dist_count = models.FloatField(blank=True, null=True)
    c_dist_count = models.FloatField(blank=True, null=True)
    manual_dist_count = models.FloatField(blank=True, null=True)
    c_manual_dist_count = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_mid_bs_mv'


class PoaNeg000Mv(models.Model):
    umarker = models.FloatField(blank=True, null=True)
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    comrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    auction_header_id = models.FloatField(blank=True, null=True)
    auction_line_number = models.FloatField(blank=True, null=True)
    bid_number = models.FloatField(blank=True, null=True)
    bid_line_number = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    auction_round_number = models.FloatField(blank=True, null=True)
    auction_creation_date = models.DateField(blank=True, null=True)
    publish_date = models.DateField(blank=True, null=True)
    open_bidding_date = models.DateField(blank=True, null=True)
    close_bidding_date = models.DateField(blank=True, null=True)
    prev_round_close_date = models.DateField(blank=True, null=True)
    next_round_creation_date = models.DateField(blank=True, null=True)
    award_date = models.DateField(blank=True, null=True)
    award_complete_date = models.DateField(blank=True, null=True)
    rfi_complete_date = models.DateField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    award_qty = models.FloatField(blank=True, null=True)
    award_price = models.FloatField(blank=True, null=True)
    current_price = models.FloatField(blank=True, null=True)
    award_amount_t = models.FloatField(blank=True, null=True)
    award_amount_b = models.FloatField(blank=True, null=True)
    award_amount_g = models.FloatField(blank=True, null=True)
    award_amount_sg = models.FloatField(blank=True, null=True)
    current_amount_t = models.FloatField(blank=True, null=True)
    current_amount_b = models.FloatField(blank=True, null=True)
    current_amount_g = models.FloatField(blank=True, null=True)
    current_amount_sg = models.FloatField(blank=True, null=True)
    auction_status = models.CharField(max_length=25, blank=True, null=True)
    award_status = models.CharField(max_length=25, blank=True, null=True)
    allocation_status = models.CharField(max_length=30, blank=True, null=True)
    supplier_invite_date = models.DateField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    contract_type = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_neg_000_mv'


class PoaNeg001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    award_qty = models.FloatField(blank=True, null=True)
    award_amt_b = models.FloatField(blank=True, null=True)
    award_amt_g = models.FloatField(blank=True, null=True)
    award_amt_sg = models.FloatField(blank=True, null=True)
    current_amt_b = models.FloatField(blank=True, null=True)
    current_amt_g = models.FloatField(blank=True, null=True)
    current_amt_sg = models.FloatField(blank=True, null=True)
    proj_savings_amt_b = models.FloatField(blank=True, null=True)
    proj_savings_amt_g = models.FloatField(blank=True, null=True)
    proj_savings_amt_sg = models.FloatField(blank=True, null=True)
    preparation_time = models.FloatField(blank=True, null=True)
    bidding_time = models.FloatField(blank=True, null=True)
    analysis_time = models.FloatField(blank=True, null=True)
    award_time = models.FloatField(blank=True, null=True)
    negotiated_lines = models.FloatField(blank=True, null=True)
    neg_lines_with_cp = models.FloatField(blank=True, null=True)
    c_award_qty = models.FloatField(blank=True, null=True)
    c_award_amt_b = models.FloatField(blank=True, null=True)
    c_award_amt_g = models.FloatField(blank=True, null=True)
    c_award_amt_sg = models.FloatField(blank=True, null=True)
    c_current_amt_b = models.FloatField(blank=True, null=True)
    c_current_amt_g = models.FloatField(blank=True, null=True)
    c_current_amt_sg = models.FloatField(blank=True, null=True)
    c_proj_savings_amt_b = models.FloatField(blank=True, null=True)
    c_proj_savings_amt_g = models.FloatField(blank=True, null=True)
    c_proj_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_preparation_time = models.FloatField(blank=True, null=True)
    c_bidding_time = models.FloatField(blank=True, null=True)
    c_award_time = models.FloatField(blank=True, null=True)
    c_analysis_time = models.FloatField(blank=True, null=True)
    c_negotiated_lines = models.FloatField(blank=True, null=True)
    c_neg_lines_with_cp = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_neg_001_mv'


class PoaPod001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_p_contract_amt_b = models.FloatField(blank=True, null=True)
    c_p_contract_amt_g = models.FloatField(blank=True, null=True)
    c_p_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_n_contract_amt_b = models.FloatField(blank=True, null=True)
    c_n_contract_amt_g = models.FloatField(blank=True, null=True)
    c_n_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_p_savings_amt_b = models.FloatField(blank=True, null=True)
    c_p_savings_amt_g = models.FloatField(blank=True, null=True)
    c_p_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_contract_amt_b = models.FloatField(blank=True, null=True)
    c_contract_amt_g = models.FloatField(blank=True, null=True)
    c_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_above_contract_amt_b = models.FloatField(blank=True, null=True)
    c_above_contract_amt_g = models.FloatField(blank=True, null=True)
    c_above_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_below_contract_amt_b = models.FloatField(blank=True, null=True)
    c_below_contract_amt_g = models.FloatField(blank=True, null=True)
    c_below_contract_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pod_001_mv'


class PoaPod002Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    parent_company_id = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    parent_cc_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_p_contract_amt_b = models.FloatField(blank=True, null=True)
    c_p_contract_amt_g = models.FloatField(blank=True, null=True)
    c_p_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_n_contract_amt_b = models.FloatField(blank=True, null=True)
    c_n_contract_amt_g = models.FloatField(blank=True, null=True)
    c_n_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_p_savings_amt_b = models.FloatField(blank=True, null=True)
    c_p_savings_amt_g = models.FloatField(blank=True, null=True)
    c_p_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_contract_amt_b = models.FloatField(blank=True, null=True)
    c_contract_amt_g = models.FloatField(blank=True, null=True)
    c_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_above_contract_amt_b = models.FloatField(blank=True, null=True)
    c_above_contract_amt_g = models.FloatField(blank=True, null=True)
    c_above_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_below_contract_amt_b = models.FloatField(blank=True, null=True)
    c_below_contract_amt_g = models.FloatField(blank=True, null=True)
    c_below_contract_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pod_002_mv'


class PoaPodBsJMv(models.Model):
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    comrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    buyer_id = models.FloatField()
    shipment_type = models.CharField(max_length=25, blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    day_id = models.FloatField()
    quantity = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    nz_quantity = models.FloatField(blank=True, null=True)
    auction_header_id = models.FloatField(blank=True, null=True)
    auction_line_number = models.FloatField(blank=True, null=True)
    bid_number = models.FloatField(blank=True, null=True)
    bid_line_number = models.FloatField(blank=True, null=True)
    po_release_id = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField()
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    current_amt_b = models.FloatField(blank=True, null=True)
    current_amt_g = models.FloatField(blank=True, null=True)
    current_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pod_bs_j_mv'


class PoaPodBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    negotiation_creator_id = models.FloatField(blank=True, null=True)
    doctype_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    p_contract_amt_b = models.FloatField(blank=True, null=True)
    p_contract_amt_g = models.FloatField(blank=True, null=True)
    p_contract_amt_sg = models.FloatField(blank=True, null=True)
    n_contract_amt_b = models.FloatField(blank=True, null=True)
    n_contract_amt_g = models.FloatField(blank=True, null=True)
    n_contract_amt_sg = models.FloatField(blank=True, null=True)
    p_savings_amt_b = models.FloatField(blank=True, null=True)
    p_savings_amt_g = models.FloatField(blank=True, null=True)
    p_savings_amt_sg = models.FloatField(blank=True, null=True)
    neg_purchase_amt_b = models.FloatField(blank=True, null=True)
    neg_purchase_amt_g = models.FloatField(blank=True, null=True)
    neg_purchase_amt_sg = models.FloatField(blank=True, null=True)
    current_amt_b = models.FloatField(blank=True, null=True)
    current_amt_g = models.FloatField(blank=True, null=True)
    current_amt_sg = models.FloatField(blank=True, null=True)
    real_svngs_amt_b = models.FloatField(blank=True, null=True)
    real_svngs_amt_g = models.FloatField(blank=True, null=True)
    real_svngs_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    contract_amt_b = models.FloatField(blank=True, null=True)
    contract_amt_g = models.FloatField(blank=True, null=True)
    contract_amt_sg = models.FloatField(blank=True, null=True)
    above_contract_amt_b = models.FloatField(blank=True, null=True)
    above_contract_amt_g = models.FloatField(blank=True, null=True)
    above_contract_amt_sg = models.FloatField(blank=True, null=True)
    below_contract_amt_b = models.FloatField(blank=True, null=True)
    below_contract_amt_g = models.FloatField(blank=True, null=True)
    below_contract_amt_sg = models.FloatField(blank=True, null=True)
    nz_quantity = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_p_contract_amt_b = models.FloatField(blank=True, null=True)
    c_p_contract_amt_g = models.FloatField(blank=True, null=True)
    c_p_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_n_contract_amt_b = models.FloatField(blank=True, null=True)
    c_n_contract_amt_g = models.FloatField(blank=True, null=True)
    c_n_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_p_savings_amt_b = models.FloatField(blank=True, null=True)
    c_p_savings_amt_g = models.FloatField(blank=True, null=True)
    c_p_savings_amt_sg = models.FloatField(blank=True, null=True)
    c_neg_purchase_amt_b = models.FloatField(blank=True, null=True)
    c_neg_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_neg_purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_real_svngs_amt_b = models.FloatField(blank=True, null=True)
    c_real_svngs_amt_g = models.FloatField(blank=True, null=True)
    c_real_svngs_amt_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_contract_amt_b = models.FloatField(blank=True, null=True)
    c_contract_amt_g = models.FloatField(blank=True, null=True)
    c_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_above_contract_amt_b = models.FloatField(blank=True, null=True)
    c_above_contract_amt_g = models.FloatField(blank=True, null=True)
    c_above_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_below_contract_amt_b = models.FloatField(blank=True, null=True)
    c_below_contract_amt_g = models.FloatField(blank=True, null=True)
    c_below_contract_amt_sg = models.FloatField(blank=True, null=True)
    c_nz_quantity = models.FloatField(blank=True, null=True)
    c_current_amt_b = models.FloatField(blank=True, null=True)
    c_current_amt_g = models.FloatField(blank=True, null=True)
    c_current_amt_sg = models.FloatField(blank=True, null=True)
    contract_type = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pod_bs_mv'


class PoaPqc001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    pbcqco_amt_g = models.FloatField(blank=True, null=True)
    pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pqc_001_mv'


class PoaPqc002Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    parent_company_id = models.BigIntegerField(blank=True, null=True)
    parent_cc_id = models.BigIntegerField(blank=True, null=True)
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    pbcqco_amt_g = models.FloatField(blank=True, null=True)
    pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pqc_002_mv'


class PoaPqcBsJ2Mv(models.Model):
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    prid = models.TextField(blank=True, null=True)  # This field type is a guess.
    psrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField()
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    day_id = models.FloatField()
    ent_year_id = models.FloatField(blank=True, null=True)
    p_ent_year_id = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    global_cur_conv_rate = models.FloatField(blank=True, null=True)
    pip_amt_g = models.FloatField(blank=True, null=True)
    pip_amt_sg = models.FloatField(blank=True, null=True)
    pip_amt_b = models.FloatField(blank=True, null=True)
    pip_quantity = models.FloatField(blank=True, null=True)
    pisp_amt_g = models.FloatField(blank=True, null=True)
    pisp_amt_sg = models.FloatField(blank=True, null=True)
    pisp_quantity = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField()
    po_line_id = models.FloatField()
    po_release_id = models.FloatField(blank=True, null=True)
    approved_date = models.DateField(blank=True, null=True)
    order_type = models.CharField(max_length=25, blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pqc_bs_j2_mv'


class PoaPqcBsJMv(models.Model):
    frid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    comrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    org_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    buyer_id = models.FloatField()
    company_id = models.BigIntegerField(blank=True, null=True)
    cost_center_id = models.BigIntegerField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    day_id = models.FloatField()
    purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    p_ent_year_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    global_cur_conv_rate = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField()
    po_line_id = models.FloatField()
    po_release_id = models.FloatField(blank=True, null=True)
    approved_date = models.DateField(blank=True, null=True)
    consigned_code = models.FloatField(blank=True, null=True)
    order_type = models.CharField(max_length=25, blank=True, null=True)
    complex_work_flag = models.CharField(max_length=1, blank=True, null=True)
    line_location_id = models.FloatField(blank=True, null=True)
    po_distribution_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'poa_pqc_bs_j_mv'


class PoaPqcBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    pbcqco_amt_g = models.FloatField(blank=True, null=True)
    pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqco_amt_b = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_g = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_sg = models.FloatField(blank=True, null=True)
    pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    c_pbpcqcs_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_b = models.FloatField(blank=True, null=True)
    c_purchase_amt_b = models.FloatField(blank=True, null=True)
    purchase_amt_g = models.FloatField(blank=True, null=True)
    purchase_amt_sg = models.FloatField(blank=True, null=True)
    c_purchase_amt_g = models.FloatField(blank=True, null=True)
    c_purchase_amt_sg = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    c_quantity = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_pqc_bs_mv'


class PoaReq000Mv(models.Model):
    aggregation_level = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    requester_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    num_days_unprocessed = models.FloatField(blank=True, null=True)
    num_days_unfulfilled = models.FloatField(blank=True, null=True)
    pen_src_amt_g = models.FloatField(blank=True, null=True)
    pen_src_amt_b = models.FloatField(blank=True, null=True)
    pen_src_amt_sg = models.FloatField(blank=True, null=True)
    pen_buyer_wk_amt_g = models.FloatField(blank=True, null=True)
    pen_buyer_wk_amt_b = models.FloatField(blank=True, null=True)
    pen_buyer_wk_amt_sg = models.FloatField(blank=True, null=True)
    pen_po_submit_amt_g = models.FloatField(blank=True, null=True)
    pen_po_submit_amt_b = models.FloatField(blank=True, null=True)
    pen_po_submit_amt_sg = models.FloatField(blank=True, null=True)
    pen_po_appr_amt_g = models.FloatField(blank=True, null=True)
    pen_po_appr_amt_b = models.FloatField(blank=True, null=True)
    pen_po_appr_amt_sg = models.FloatField(blank=True, null=True)
    unprocessed_amt_g = models.FloatField(blank=True, null=True)
    unprocessed_amt_b = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg = models.FloatField(blank=True, null=True)
    pen_fulfill_amt_g = models.FloatField(blank=True, null=True)
    pen_fulfill_amt_b = models.FloatField(blank=True, null=True)
    pen_fulfill_amt_sg = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg = models.FloatField(blank=True, null=True)
    pen_src_cnt = models.FloatField(blank=True, null=True)
    pen_buyer_wk_cnt = models.FloatField(blank=True, null=True)
    pen_po_submit_cnt = models.FloatField(blank=True, null=True)
    pen_po_appr_cnt = models.FloatField(blank=True, null=True)
    unprocessed_cnt = models.FloatField(blank=True, null=True)
    pen_fulfill_cnt = models.FloatField(blank=True, null=True)
    unfulfilled_cnt = models.FloatField(blank=True, null=True)
    unprocessed_ped_cnt = models.FloatField(blank=True, null=True)
    unprocessed_emer_cnt = models.FloatField(blank=True, null=True)
    unprocessed_urg_cnt = models.FloatField(blank=True, null=True)
    unfulfilled_ped_cnt = models.FloatField(blank=True, null=True)
    unprocessed_qty = models.FloatField(blank=True, null=True)
    unfulfilled_qty = models.FloatField(blank=True, null=True)
    unful_po_revisions = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b1 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b2 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b3 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b4 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b5 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b6 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b7 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b8 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b9 = models.FloatField(blank=True, null=True)
    unprocessed_amt_g_age_b10 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b1 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b2 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b3 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b4 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b5 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b6 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b7 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b8 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b9 = models.FloatField(blank=True, null=True)
    unprocessed_amt_b_age_b10 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b1 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b2 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b3 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b4 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b5 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b6 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b7 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b8 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b9 = models.FloatField(blank=True, null=True)
    unprocessed_amt_sg_age_b10 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b1 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b2 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b3 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b4 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b5 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b6 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b7 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b8 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b9 = models.FloatField(blank=True, null=True)
    unprocessed_cnt_age_b10 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b1 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b2 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b3 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b4 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b5 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b6 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b7 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b8 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b9 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_g_age_b10 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b1 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b2 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b3 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b4 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b5 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b6 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b7 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b8 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b9 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_b_age_b10 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b1 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b2 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b3 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b4 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b5 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b6 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b7 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b8 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b9 = models.FloatField(blank=True, null=True)
    unfulfilled_amt_sg_age_b10 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b1 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b2 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b3 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b4 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b5 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b6 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b7 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b8 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b9 = models.FloatField(blank=True, null=True)
    unfulfilled_cnt_age_b10 = models.FloatField(blank=True, null=True)
    c_pen_src_amt_g = models.FloatField(blank=True, null=True)
    c_pen_buyer_wk_amt_g = models.FloatField(blank=True, null=True)
    c_pen_po_submit_amt_g = models.FloatField(blank=True, null=True)
    c_pen_po_appr_amt_g = models.FloatField(blank=True, null=True)
    c_unprocessed_amt_g = models.FloatField(blank=True, null=True)
    c_pen_fulfill_amt_g = models.FloatField(blank=True, null=True)
    c_unfulfilled_amt_g = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_req_000_mv'


class PoaReq001Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    requester_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    processed_amt_g = models.FloatField(blank=True, null=True)
    processed_amt_b = models.FloatField(blank=True, null=True)
    processed_amt_sg = models.FloatField(blank=True, null=True)
    processed_man_amt_g = models.FloatField(blank=True, null=True)
    processed_man_amt_b = models.FloatField(blank=True, null=True)
    processed_man_amt_sg = models.FloatField(blank=True, null=True)
    processed_qty = models.FloatField(blank=True, null=True)
    days_to_process = models.FloatField(blank=True, null=True)
    processed_cnt_g = models.FloatField(blank=True, null=True)
    processed_cnt_b = models.FloatField(blank=True, null=True)
    processed_cnt_sg = models.FloatField(blank=True, null=True)
    processed_man_cnt_g = models.FloatField(blank=True, null=True)
    processed_man_cnt_b = models.FloatField(blank=True, null=True)
    processed_man_cnt_sg = models.FloatField(blank=True, null=True)
    processed_qty_cnt = models.FloatField(blank=True, null=True)
    days_to_process_cnt = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b1 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b2 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b3 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b4 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b5 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b6 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b7 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b8 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b9 = models.FloatField(blank=True, null=True)
    processed_amt_g_age_b10 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b1 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b2 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b3 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b4 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b5 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b6 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b7 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b8 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b9 = models.FloatField(blank=True, null=True)
    processed_amt_b_age_b10 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b1 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b2 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b3 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b4 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b5 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b6 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b7 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b8 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b9 = models.FloatField(blank=True, null=True)
    processed_amt_sg_age_b10 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b1 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b2 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b3 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b4 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b5 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b6 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b7 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b8 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b9 = models.FloatField(blank=True, null=True)
    processed_cnt_g_age_b10 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b1 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b2 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b3 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b4 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b5 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b6 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b7 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b8 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b9 = models.FloatField(blank=True, null=True)
    processed_cnt_b_age_b10 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b1 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b2 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b3 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b4 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b5 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b6 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b7 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b8 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b9 = models.FloatField(blank=True, null=True)
    processed_cnt_sg_age_b10 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_req_001_mv'


class PoaReq002Mv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    ship_to_org_id = models.FloatField(blank=True, null=True)
    requester_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    fulfilled_amt_b = models.FloatField(blank=True, null=True)
    fulfilled_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg = models.FloatField(blank=True, null=True)
    fulfilled_man_amt_b = models.FloatField(blank=True, null=True)
    fulfilled_man_amt_g = models.FloatField(blank=True, null=True)
    fulfilled_man_amt_sg = models.FloatField(blank=True, null=True)
    fulfilled_qty = models.FloatField(blank=True, null=True)
    days_to_fulfill = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg = models.FloatField(blank=True, null=True)
    fulfilled_man_cnt_b = models.FloatField(blank=True, null=True)
    fulfilled_man_cnt_g = models.FloatField(blank=True, null=True)
    fulfilled_man_cnt_sg = models.FloatField(blank=True, null=True)
    fulfilled_qty_cnt = models.FloatField(blank=True, null=True)
    days_to_fulfill_cnt = models.FloatField(blank=True, null=True)
    fulfilled_ped_cnt = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_amt_b_age_b10 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_amt_g_age_b10 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_amt_sg_age_b10 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_b_age_b10 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_g_age_b10 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b1 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b2 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b3 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b4 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b5 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b6 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b7 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b8 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b9 = models.FloatField(blank=True, null=True)
    fulfilled_cnt_sg_age_b10 = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_req_002_mv'


class PoaRtxBsJMv(models.Model):
    rrid = models.TextField(blank=True, null=True)  # This field type is a guess.
    prid = models.TextField(blank=True, null=True)  # This field type is a guess.
    crid = models.TextField(blank=True, null=True)  # This field type is a guess.
    mxrowid = models.TextField(blank=True, null=True)  # This field type is a guess.
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField()
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField()
    receiving_org_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    transaction_type = models.CharField(max_length=25)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField()
    day_id = models.FloatField()
    mx_id = models.FloatField()
    quantity = models.FloatField(blank=True, null=True)
    amount_b = models.FloatField(blank=True, null=True)
    amount_g = models.FloatField(blank=True, null=True)
    amount_sg = models.FloatField(blank=True, null=True)
    amt_afterdue_b = models.FloatField(blank=True, null=True)
    amt_afterdue_g = models.FloatField(blank=True, null=True)
    amt_afterdue_sg = models.FloatField(blank=True, null=True)
    amt_beforedue_b = models.FloatField(blank=True, null=True)
    amt_beforedue_g = models.FloatField(blank=True, null=True)
    amt_beforedue_sg = models.FloatField(blank=True, null=True)
    amt_expt_b = models.FloatField(blank=True, null=True)
    amt_expt_g = models.FloatField(blank=True, null=True)
    amt_expt_sg = models.FloatField(blank=True, null=True)
    qty_intol = models.FloatField(blank=True, null=True)
    qty_afterdue = models.FloatField(blank=True, null=True)
    qty_beforedue = models.FloatField(blank=True, null=True)
    num_days_late = models.FloatField(blank=True, null=True)
    num_days_early = models.FloatField(blank=True, null=True)
    transaction_flag = models.CharField(max_length=16, blank=True, null=True)
    dropship_type_code = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_rtx_bs_j_mv'


class PoaRtxBsMv(models.Model):
    grp_id = models.FloatField(blank=True, null=True)
    time_id = models.FloatField(blank=True, null=True)
    period_type_id = models.FloatField(blank=True, null=True)
    aggregation_level = models.FloatField(blank=True, null=True)
    commodity_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    po_item_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    supplier_id = models.FloatField(blank=True, null=True)
    supplier_site_id = models.FloatField(blank=True, null=True)
    receiving_org_id = models.FloatField(blank=True, null=True)
    buyer_id = models.FloatField(blank=True, null=True)
    reason_id = models.FloatField(blank=True, null=True)
    base_uom = models.CharField(max_length=25, blank=True, null=True)
    ent_year_id = models.FloatField(blank=True, null=True)
    ent_qtr_id = models.FloatField(blank=True, null=True)
    ent_period_id = models.FloatField(blank=True, null=True)
    week_id = models.FloatField(blank=True, null=True)
    day_id = models.FloatField(blank=True, null=True)
    amt_receipt_and_dropship_b = models.FloatField(blank=True, null=True)
    amt_receipt_and_dropship_g = models.FloatField(blank=True, null=True)
    amt_receipt_and_dropship_sg = models.FloatField(blank=True, null=True)
    amt_receipt_b = models.FloatField(blank=True, null=True)
    amt_receipt_g = models.FloatField(blank=True, null=True)
    amt_receipt_sg = models.FloatField(blank=True, null=True)
    amt_return_b = models.FloatField(blank=True, null=True)
    amt_return_g = models.FloatField(blank=True, null=True)
    amt_return_sg = models.FloatField(blank=True, null=True)
    amt_receipt_return_b = models.FloatField(blank=True, null=True)
    amt_receipt_return_g = models.FloatField(blank=True, null=True)
    amt_receipt_return_sg = models.FloatField(blank=True, null=True)
    qty_receipt_and_dropship = models.FloatField(blank=True, null=True)
    qty_receipt = models.FloatField(blank=True, null=True)
    qty_return = models.FloatField(blank=True, null=True)
    qty_reject = models.FloatField(blank=True, null=True)
    amt_afterdue_b = models.FloatField(blank=True, null=True)
    amt_afterdue_g = models.FloatField(blank=True, null=True)
    amt_afterdue_sg = models.FloatField(blank=True, null=True)
    amt_beforedue_b = models.FloatField(blank=True, null=True)
    amt_beforedue_g = models.FloatField(blank=True, null=True)
    amt_beforedue_sg = models.FloatField(blank=True, null=True)
    amt_expt_b = models.FloatField(blank=True, null=True)
    amt_expt_g = models.FloatField(blank=True, null=True)
    amt_expt_sg = models.FloatField(blank=True, null=True)
    qty_intol = models.FloatField(blank=True, null=True)
    qty_afterdue = models.FloatField(blank=True, null=True)
    qty_beforedue = models.FloatField(blank=True, null=True)
    num_days_early = models.FloatField(blank=True, null=True)
    num_days_late = models.FloatField(blank=True, null=True)
    amt_reject_b = models.FloatField(blank=True, null=True)
    amt_reject_g = models.FloatField(blank=True, null=True)
    amt_reject_sg = models.FloatField(blank=True, null=True)
    amt_inspected_b = models.FloatField(blank=True, null=True)
    amt_inspected_g = models.FloatField(blank=True, null=True)
    amt_inspected_sg = models.FloatField(blank=True, null=True)
    amt_receipt_reject_b = models.FloatField(blank=True, null=True)
    amt_receipt_reject_g = models.FloatField(blank=True, null=True)
    amt_receipt_reject_sg = models.FloatField(blank=True, null=True)
    c_amt_receipt_and_dropship_b = models.FloatField(blank=True, null=True)
    c_amt_receipt_and_dropship_g = models.FloatField(blank=True, null=True)
    c_amt_receipt_and_dropship_sg = models.FloatField(blank=True, null=True)
    c_amt_receipt_b = models.FloatField(blank=True, null=True)
    c_amt_receipt_g = models.FloatField(blank=True, null=True)
    c_amt_receipt_sg = models.FloatField(blank=True, null=True)
    c_amt_return_b = models.FloatField(blank=True, null=True)
    c_amt_return_g = models.FloatField(blank=True, null=True)
    c_amt_return_sg = models.FloatField(blank=True, null=True)
    c_amt_receipt_return_b = models.FloatField(blank=True, null=True)
    c_amt_receipt_return_g = models.FloatField(blank=True, null=True)
    c_amt_receipt_return_sg = models.FloatField(blank=True, null=True)
    c_qty_receipt_and_dropship = models.FloatField(blank=True, null=True)
    c_qty_receipt = models.FloatField(blank=True, null=True)
    c_qty_return = models.FloatField(blank=True, null=True)
    c_qty_reject = models.FloatField(blank=True, null=True)
    c_amt_afterdue_b = models.FloatField(blank=True, null=True)
    c_amt_afterdue_g = models.FloatField(blank=True, null=True)
    c_amt_afterdue_sg = models.FloatField(blank=True, null=True)
    c_amt_beforedue_b = models.FloatField(blank=True, null=True)
    c_amt_beforedue_g = models.FloatField(blank=True, null=True)
    c_amt_beforedue_sg = models.FloatField(blank=True, null=True)
    c_amt_expt_b = models.FloatField(blank=True, null=True)
    c_amt_expt_g = models.FloatField(blank=True, null=True)
    c_amt_expt_sg = models.FloatField(blank=True, null=True)
    c_qty_intol = models.FloatField(blank=True, null=True)
    c_qty_afterdue = models.FloatField(blank=True, null=True)
    c_qty_beforedue = models.FloatField(blank=True, null=True)
    num_txns_early_cnt = models.FloatField(blank=True, null=True)
    num_txns_late_cnt = models.FloatField(blank=True, null=True)
    c_amt_reject_b = models.FloatField(blank=True, null=True)
    c_amt_reject_g = models.FloatField(blank=True, null=True)
    c_amt_reject_sg = models.FloatField(blank=True, null=True)
    c_amt_inspected_b = models.FloatField(blank=True, null=True)
    c_amt_inspected_g = models.FloatField(blank=True, null=True)
    c_amt_inspected_sg = models.FloatField(blank=True, null=True)
    c_amt_receipt_reject_b = models.FloatField(blank=True, null=True)
    c_amt_receipt_reject_g = models.FloatField(blank=True, null=True)
    c_amt_receipt_reject_sg = models.FloatField(blank=True, null=True)
    c_total = models.FloatField(blank=True, null=True)
    num_txns_receipt_cnt = models.FloatField(blank=True, null=True)
    num_txns_return_cnt = models.FloatField(blank=True, null=True)
    num_txns_receipt_return_cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'poa_rtx_bs_mv'


class PosProductsServicesGt(models.Model):
    segment_value = models.CharField(max_length=40)
    segment_value_description = models.CharField(max_length=240, blank=True, null=True)
    supplier_selection = models.FloatField(blank=True, null=True)
    parent_segment_value = models.CharField(max_length=40, blank=True, null=True)
    parent_segment_value_id = models.CharField(max_length=40, blank=True, null=True)
    hierarchy_level = models.FloatField(blank=True, null=True)
    segment_value_id = models.CharField(max_length=40)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pos_products_services_gt'


class PsaBcResultsGt(models.Model):
    application_id = models.BigIntegerField(blank=True, null=True)
    application_short_name = models.CharField(max_length=50, blank=True, null=True)
    application_name = models.CharField(max_length=240, blank=True, null=True)
    event_id = models.BigIntegerField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    row_id = models.CharField(max_length=30, blank=True, null=True)
    packet_id = models.BigIntegerField(blank=True, null=True)
    period_name = models.CharField(max_length=15, blank=True, null=True)
    funding_budget_name = models.CharField(max_length=15, blank=True, null=True)
    budget_type = models.CharField(max_length=15, blank=True, null=True)
    budget_version_id = models.BigIntegerField(blank=True, null=True)
    je_source_name = models.CharField(max_length=25, blank=True, null=True)
    je_category_name = models.CharField(max_length=25, blank=True, null=True)
    budget_level = models.CharField(max_length=25, blank=True, null=True)
    je_batch_name = models.CharField(max_length=100, blank=True, null=True)
    treasury_symbol = models.CharField(max_length=100, blank=True, null=True)
    je_batch_id = models.BigIntegerField(blank=True, null=True)
    je_header_id = models.BigIntegerField(blank=True, null=True)
    je_header_name = models.CharField(max_length=100, blank=True, null=True)
    journal_line_number = models.CharField(max_length=15, blank=True, null=True)
    ccid = models.BigIntegerField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    account_type = models.CharField(max_length=1, blank=True, null=True)
    account_type_meaning = models.CharField(max_length=240, blank=True, null=True)
    account_category_code = models.CharField(max_length=1, blank=True, null=True)
    account_segment_value = models.CharField(max_length=25, blank=True, null=True)
    actual_flag = models.CharField(max_length=1, blank=True, null=True)
    actual_flag_meaning = models.CharField(max_length=240, blank=True, null=True)
    amount_type = models.CharField(max_length=4, blank=True, null=True)
    amount_type_meaning = models.CharField(max_length=25, blank=True, null=True)
    encumbrance_type = models.CharField(max_length=30, blank=True, null=True)
    template_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    funds_check_status_code = models.CharField(max_length=1, blank=True, null=True)
    funds_check_status = models.CharField(max_length=80, blank=True, null=True)
    effective_status = models.CharField(max_length=1, blank=True, null=True)
    funds_check_level_code = models.CharField(max_length=1, blank=True, null=True)
    funds_check_level_meaning = models.CharField(max_length=25, blank=True, null=True)
    result_code = models.CharField(max_length=3, blank=True, null=True)
    result_message = models.CharField(max_length=2000, blank=True, null=True)
    boundary_code = models.CharField(max_length=1, blank=True, null=True)
    boundary = models.CharField(max_length=25, blank=True, null=True)
    debit_credit_indicator = models.CharField(max_length=1, blank=True, null=True)
    amount = models.FloatField(blank=True, null=True)
    debit_amount_accounted = models.FloatField(blank=True, null=True)
    credit_amount_accounted = models.FloatField(blank=True, null=True)
    budget_posted_balance = models.FloatField(blank=True, null=True)
    budget_approved_balance = models.FloatField(blank=True, null=True)
    budget_pending_balance = models.FloatField(blank=True, null=True)
    budget_total_balance = models.FloatField(blank=True, null=True)
    encumbrance_posted_balance = models.FloatField(blank=True, null=True)
    encumbrance_approved_balance = models.FloatField(blank=True, null=True)
    encumbrance_pending_balance = models.FloatField(blank=True, null=True)
    encumbrance_total_balance = models.FloatField(blank=True, null=True)
    actual_posted_balance = models.FloatField(blank=True, null=True)
    actual_approved_balance = models.FloatField(blank=True, null=True)
    actual_pending_balance = models.FloatField(blank=True, null=True)
    actual_total_balance = models.FloatField(blank=True, null=True)
    available_posted_balance = models.FloatField(blank=True, null=True)
    available_approved_balance = models.FloatField(blank=True, null=True)
    available_pending_balance = models.FloatField(blank=True, null=True)
    available_total_balance = models.FloatField(blank=True, null=True)
    source_distribution_type = models.CharField(max_length=30, blank=True, null=True)
    source_distribution_id_num_1 = models.BigIntegerField(blank=True, null=True)
    source_distribution_id_num_2 = models.BigIntegerField(blank=True, null=True)
    source_distribution_id_num_3 = models.BigIntegerField(blank=True, null=True)
    source_distribution_id_num_4 = models.BigIntegerField(blank=True, null=True)
    source_distribution_id_num_5 = models.BigIntegerField(blank=True, null=True)
    document_reference = models.CharField(max_length=240, blank=True, null=True)
    line_reference = models.CharField(max_length=240, blank=True, null=True)
    batch_reference = models.CharField(max_length=240, blank=True, null=True)
    source_distribution_id_char_4 = models.CharField(max_length=240, blank=True, null=True)
    source_distribution_id_char_5 = models.CharField(max_length=240, blank=True, null=True)
    party_id = models.CharField(max_length=100, blank=True, null=True)
    party_site_id = models.CharField(max_length=100, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_name = models.CharField(max_length=15, blank=True, null=True)
    payment_forecast_line_number = models.CharField(max_length=15, blank=True, null=True)
    pa_flag = models.CharField(max_length=1, blank=True, null=True)
    accounting_flexfield = models.CharField(max_length=2000, blank=True, null=True)
    summary_account_indicator = models.CharField(max_length=1, blank=True, null=True)
    po_line_number = models.FloatField(blank=True, null=True)
    po_dist_line_number = models.FloatField(blank=True, null=True)
    po_ship_line_number = models.FloatField(blank=True, null=True)
    req_line_number = models.FloatField(blank=True, null=True)
    req_dist_line_number = models.FloatField(blank=True, null=True)
    inv_line_number = models.CharField(max_length=15, blank=True, null=True)
    document_sequence_number = models.FloatField(blank=True, null=True)
    ae_header_id = models.FloatField(blank=True, null=True)
    ae_line_num = models.FloatField(blank=True, null=True)
    period_num = models.FloatField(blank=True, null=True)
    period_year = models.FloatField(blank=True, null=True)
    quarter_num = models.FloatField(blank=True, null=True)
    comm_encum_posted_bal = models.FloatField(blank=True, null=True)
    comm_encum_approved_bal = models.FloatField(blank=True, null=True)
    comm_encum_pending_bal = models.FloatField(blank=True, null=True)
    comm_encum_total_bal = models.FloatField(blank=True, null=True)
    obli_encum_posted_bal = models.FloatField(blank=True, null=True)
    obli_encum_approved_bal = models.FloatField(blank=True, null=True)
    obli_encum_pending_bal = models.FloatField(blank=True, null=True)
    obli_encum_total_bal = models.FloatField(blank=True, null=True)
    error_source = models.CharField(max_length=1, blank=True, null=True)
    current_funds_available = models.FloatField(blank=True, null=True)
    document_status = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'psa_bc_results_gt'


class PvAmsBinMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    lead_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'pv_ams_bin_mv'


class PvAmsBinSumMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    lcnt = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'pv_ams_bin_sum_mv'


class PvChnBinMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    lead_id = models.FloatField()

    class Meta:
        managed = False
        db_table = 'pv_chn_bin_mv'


class PvChnBinSumMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    lcnt = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'pv_chn_bin_sum_mv'


class PvMatchedPartnersGt(models.Model):
    partner_id = models.FloatField(unique=True)
    distance = models.FloatField(blank=True, null=True)
    recycled_flag = models.CharField(max_length=10)
    incumbent_flag = models.CharField(max_length=10)
    partner_order = models.FloatField(blank=True, null=True)
    industry = models.CharField(max_length=1000, blank=True, null=True)
    member_type = models.CharField(max_length=1000, blank=True, null=True)
    geography = models.CharField(max_length=1000, blank=True, null=True)
    capacity_rating = models.CharField(max_length=1000, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_matched_partners_gt'


class PvPartnerIdSession(models.Model):
    partner_id = models.FloatField(unique=True)

    class Meta:
        managed = False
        db_table = 'pv_partner_id_session'


class PvPrdBinMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)
    line_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    lead_line_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_prd_bin_mv'


class PvPrdBinSumMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    lcnt = models.FloatField(blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    period_type = models.CharField(max_length=15)
    period_name = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_prd_bin_sum_mv'


class PvRollupMgrMv(models.Model):
    manager_person_id = models.FloatField(blank=True, null=True)
    parent_resource_id = models.FloatField(blank=True, null=True)
    person_id = models.FloatField(blank=True, null=True)
    resource_id = models.FloatField()
    group_id = models.FloatField()
    excnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_rollup_mgr_mv'


class PvSlBinMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    lead_id = models.FloatField()
    channel_code = models.CharField(max_length=30, blank=True, null=True)
    customer_id = models.FloatField()
    line_amount = models.FloatField(blank=True, null=True)
    lead_line_id = models.FloatField(blank=True, null=True)
    source_promotion_id = models.FloatField(blank=True, null=True)
    party_name = models.CharField(max_length=360)
    party_id = models.BigIntegerField()
    description = models.CharField(max_length=240, blank=True, null=True)
    category_id = models.FloatField(blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    partner_id = models.BigIntegerField()
    routing_status = models.CharField(max_length=30, blank=True, null=True)
    status = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'pv_sl_bin_mv'


class PvSlbinSumMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    lead_id = models.FloatField()
    total_amount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    cnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_slbin_sum_mv'


class PvSlbinamtSumMv(models.Model):
    parent_resource_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=15)
    period_type = models.CharField(max_length=15)
    win_loss_indicator = models.CharField(max_length=1, blank=True, null=True)
    opp_open_status_flag = models.CharField(max_length=1, blank=True, null=True)
    total_amount = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    lcnt = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'pv_slbinamt_sum_mv'


class RaBatchSourcesAllBk(models.Model):
    batch_source_id = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField()
    name = models.CharField(max_length=50)
    org_id = models.BigIntegerField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    status = models.CharField(max_length=1, blank=True, null=True)
    last_batch_num = models.BigIntegerField(blank=True, null=True)
    default_inv_trx_type = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    accounting_flexfield_rule = models.CharField(max_length=30, blank=True, null=True)
    accounting_rule_rule = models.CharField(max_length=30, blank=True, null=True)
    agreement_rule = models.CharField(max_length=30, blank=True, null=True)
    auto_batch_numbering_flag = models.CharField(max_length=1, blank=True, null=True)
    auto_trx_numbering_flag = models.CharField(max_length=1, blank=True, null=True)
    batch_source_type = models.CharField(max_length=30)
    bill_address_rule = models.CharField(max_length=30, blank=True, null=True)
    bill_contact_rule = models.CharField(max_length=30, blank=True, null=True)
    bill_customer_rule = models.CharField(max_length=30, blank=True, null=True)
    create_clearing_flag = models.CharField(max_length=1, blank=True, null=True)
    cust_trx_type_rule = models.CharField(max_length=30, blank=True, null=True)
    derive_date_flag = models.CharField(max_length=1, blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    fob_point_rule = models.CharField(max_length=30, blank=True, null=True)
    gl_date_period_rule = models.CharField(max_length=30, blank=True, null=True)
    invalid_lines_rule = models.CharField(max_length=30, blank=True, null=True)
    invalid_tax_rate_rule = models.CharField(max_length=30, blank=True, null=True)
    inventory_item_rule = models.CharField(max_length=30, blank=True, null=True)
    invoicing_rule_rule = models.CharField(max_length=30, blank=True, null=True)
    memo_reason_rule = models.CharField(max_length=30, blank=True, null=True)
    rev_acc_allocation_rule = models.CharField(max_length=30, blank=True, null=True)
    salesperson_rule = models.CharField(max_length=30, blank=True, null=True)
    sales_credit_rule = models.CharField(max_length=30, blank=True, null=True)
    sales_credit_type_rule = models.CharField(max_length=30, blank=True, null=True)
    sales_territory_rule = models.CharField(max_length=30, blank=True, null=True)
    ship_address_rule = models.CharField(max_length=30, blank=True, null=True)
    ship_contact_rule = models.CharField(max_length=30, blank=True, null=True)
    ship_customer_rule = models.CharField(max_length=30, blank=True, null=True)
    ship_via_rule = models.CharField(max_length=30, blank=True, null=True)
    sold_customer_rule = models.CharField(max_length=30, blank=True, null=True)
    start_date = models.DateField(blank=True, null=True)
    term_rule = models.CharField(max_length=30, blank=True, null=True)
    unit_of_measure_rule = models.CharField(max_length=30, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    customer_bank_account_rule = models.CharField(max_length=30, blank=True, null=True)
    memo_line_rule = models.CharField(max_length=30, blank=True, null=True)
    receipt_method_rule = models.CharField(max_length=30, blank=True, null=True)
    related_document_rule = models.CharField(max_length=30, blank=True, null=True)
    allow_sales_credit_flag = models.CharField(max_length=1, blank=True, null=True)
    grouping_rule_id = models.BigIntegerField(blank=True, null=True)
    credit_memo_batch_source_id = models.BigIntegerField(blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=30, blank=True, null=True)
    copy_doc_number_flag = models.CharField(max_length=1, blank=True, null=True)
    default_reference = models.CharField(max_length=80, blank=True, null=True)
    copy_inv_tidff_to_cm_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_handling_option = models.CharField(max_length=30, blank=True, null=True)
    allow_duplicate_trx_num_flag = models.CharField(max_length=1, blank=True, null=True)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    gen_line_level_bal_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ra_batch_sources_all_bk'


class RcvRmaUpgradeErrors(models.Model):
    creation_date = models.DateField(blank=True, null=True)
    run_mode = models.CharField(max_length=15, blank=True, null=True)
    rma_interface_id = models.FloatField(blank=True, null=True)
    err_num = models.FloatField(blank=True, null=True)
    err_msg = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'rcv_rma_upgrade_errors'


class RcvRmaUpgradeSuccess(models.Model):
    creation_date = models.DateField(blank=True, null=True)
    run_mode = models.CharField(max_length=15, blank=True, null=True)
    rma_interface_id = models.FloatField(blank=True, null=True)
    shipment_header_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'rcv_rma_upgrade_success'


class SelfAssessedTax9574881(models.Model):
    invoice_distribution_id = models.BigIntegerField()
    org_id = models.BigIntegerField()
    accounting_date = models.DateField()
    accrual_posted_flag = models.CharField(max_length=1)
    assets_addition_flag = models.CharField(max_length=1)
    assets_tracking_flag = models.CharField(max_length=1)
    cash_posted_flag = models.CharField(max_length=1)
    distribution_line_number = models.BigIntegerField()
    dist_code_combination_id = models.BigIntegerField()
    invoice_id = models.BigIntegerField()
    corrected_quantity = models.FloatField(blank=True, null=True)
    related_id = models.BigIntegerField(blank=True, null=True)
    asset_book_type_code = models.CharField(max_length=15, blank=True, null=True)
    asset_category_id = models.BigIntegerField(blank=True, null=True)
    distribution_class = models.CharField(max_length=30, blank=True, null=True)
    intended_use = models.CharField(max_length=30, blank=True, null=True)
    detail_tax_dist_id = models.FloatField(blank=True, null=True)
    rec_nrec_rate = models.FloatField(blank=True, null=True)
    recovery_rate_id = models.FloatField(blank=True, null=True)
    recovery_rate_name = models.CharField(max_length=30, blank=True, null=True)
    recovery_type_code = models.CharField(max_length=30, blank=True, null=True)
    withholding_tax_code_id = models.BigIntegerField(blank=True, null=True)
    tax_already_distributed_flag = models.CharField(max_length=1, blank=True, null=True)
    summary_tax_line_id = models.FloatField(blank=True, null=True)
    taxable_amount = models.FloatField(blank=True, null=True)
    taxable_base_amount = models.FloatField(blank=True, null=True)
    prepay_tax_diff_amount = models.FloatField(blank=True, null=True)
    extra_po_erv = models.FloatField(blank=True, null=True)
    self_assessed_tax_liab_ccid = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    project_accounting_context = models.CharField(max_length=30, blank=True, null=True)
    rcv_charge_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.BigIntegerField(blank=True, null=True)
    amount_variance = models.FloatField(blank=True, null=True)
    base_amount_variance = models.FloatField(blank=True, null=True)
    receipt_required_flag = models.CharField(max_length=1, blank=True, null=True)
    receipt_missing_flag = models.CharField(max_length=1, blank=True, null=True)
    justification = models.CharField(max_length=240, blank=True, null=True)
    expense_group = models.CharField(max_length=80, blank=True, null=True)
    start_expense_date = models.DateField(blank=True, null=True)
    end_expense_date = models.DateField(blank=True, null=True)
    receipt_currency_code = models.CharField(max_length=15, blank=True, null=True)
    receipt_conversion_rate = models.FloatField(blank=True, null=True)
    receipt_currency_amount = models.FloatField(blank=True, null=True)
    daily_amount = models.FloatField(blank=True, null=True)
    web_parameter_id = models.FloatField(blank=True, null=True)
    adjustment_reason = models.CharField(max_length=240, blank=True, null=True)
    award_id = models.BigIntegerField(blank=True, null=True)
    dist_match_type = models.CharField(max_length=25, blank=True, null=True)
    rcv_transaction_id = models.BigIntegerField(blank=True, null=True)
    parent_reversal_id = models.BigIntegerField(blank=True, null=True)
    tax_recoverable_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_code_id = models.BigIntegerField(blank=True, null=True)
    merchant_document_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_name = models.CharField(max_length=80, blank=True, null=True)
    merchant_reference = models.CharField(max_length=240, blank=True, null=True)
    merchant_tax_reg_number = models.CharField(max_length=80, blank=True, null=True)
    merchant_taxpayer_id = models.CharField(max_length=80, blank=True, null=True)
    country_of_supply = models.CharField(max_length=5, blank=True, null=True)
    matched_uom_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    gms_burdenable_raw_cost = models.BigIntegerField(blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    prepay_distribution_id = models.BigIntegerField(blank=True, null=True)
    credit_card_trx_id = models.BigIntegerField(blank=True, null=True)
    upgrade_posted_amt = models.FloatField(blank=True, null=True)
    upgrade_base_posted_amt = models.FloatField(blank=True, null=True)
    inventory_transfer_status = models.CharField(max_length=1, blank=True, null=True)
    company_prepaid_invoice_id = models.BigIntegerField(blank=True, null=True)
    cc_reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_withheld_amt = models.FloatField(blank=True, null=True)
    pa_cmt_xface_flag = models.CharField(max_length=1, blank=True, null=True)
    cancellation_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_line_number = models.FloatField(blank=True, null=True)
    rounding_amt = models.FloatField(blank=True, null=True)
    charge_applicable_to_dist_id = models.BigIntegerField(blank=True, null=True)
    corrected_invoice_dist_id = models.BigIntegerField(blank=True, null=True)
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    line_type_lookup_code = models.CharField(max_length=25)
    period_name = models.CharField(max_length=15)
    set_of_books_id = models.BigIntegerField()
    self_assessed_flag = models.CharField(max_length=1)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    batch_id = models.BigIntegerField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    final_match_flag = models.CharField(max_length=1, blank=True, null=True)
    income_tax_region = models.CharField(max_length=10, blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    quantity_invoiced = models.FloatField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    reversal_flag = models.CharField(max_length=1, blank=True, null=True)
    type_1099 = models.CharField(max_length=10, blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    stat_amount = models.FloatField(blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    expenditure_organization_id = models.BigIntegerField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    parent_invoice_id = models.BigIntegerField(blank=True, null=True)
    pa_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    pa_quantity = models.BigIntegerField(blank=True, null=True)
    prepay_amount_remaining = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    ussgl_trx_code_context = models.CharField(max_length=30, blank=True, null=True)
    quantity_variance = models.FloatField(blank=True, null=True)
    base_quantity_variance = models.FloatField(blank=True, null=True)
    packet_id = models.BigIntegerField(blank=True, null=True)
    awt_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_group_id = models.BigIntegerField(blank=True, null=True)
    awt_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    awt_gross_amount = models.FloatField(blank=True, null=True)
    awt_invoice_id = models.BigIntegerField(blank=True, null=True)
    awt_origin_group_id = models.BigIntegerField(blank=True, null=True)
    reference_1 = models.CharField(max_length=30, blank=True, null=True)
    reference_2 = models.CharField(max_length=30, blank=True, null=True)
    awt_invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    receipt_verified_flag = models.CharField(max_length=1, blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'self_assessed_tax_9574881'
# Unable to inspect table 'sys_iot_over_459585'
# The error was: ORA-25191: cannot reference overflow table of an index-organized table

# Unable to inspect table 'sys_iot_over_572745'
# The error was: ORA-25191: cannot reference overflow table of an index-organized table



class TempCuentasDestino(models.Model):
    header_id = models.BigIntegerField()
    nro_linea = models.BigIntegerField()
    nro_asiento = models.FloatField(blank=True, null=True)
    cta_destino = models.CharField(max_length=240, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    centro_costo = models.CharField(max_length=25, blank=True, null=True)
    exist_cuenta = models.FloatField(blank=True, null=True)
    entered = models.FloatField(blank=True, null=True)
    accounted = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'temp_cuentas_destino'


class TempSrCptUpgerr(models.Model):
    err_message = models.CharField(max_length=2000, blank=True, null=True)
    update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'temp_sr_cpt_upgerr'


class TmActualizaVventa(models.Model):
    ot = models.CharField(max_length=20, blank=True, null=True)
    v_venta_original = models.FloatField(blank=True, null=True)
    v_venta = models.FloatField(blank=True, null=True)
    moneda = models.CharField(max_length=10, blank=True, null=True)
    igv = models.FloatField(blank=True, null=True)
    tc = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_actualiza_vventa'


class TmActualizaVventaBackup(models.Model):
    ot = models.CharField(max_length=25, blank=True, null=True)
    moneda = models.CharField(max_length=5, blank=True, null=True)
    v_venta_pen = models.FloatField(blank=True, null=True)
    v_venta_usd = models.FloatField(blank=True, null=True)
    igv_usd = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_actualiza_vventa_backup'


class TmApGeneraArchivo(models.Model):
    secuencia = models.FloatField()
    linea = models.CharField(max_length=1000)

    class Meta:
        managed = False
        db_table = 'tm_ap_genera_archivo'


class TmApIngresosEgresos(models.Model):
    tipo = models.CharField(max_length=20)
    documento = models.CharField(max_length=150)
    moneda = models.CharField(max_length=10)
    fecha_documento = models.DateField()
    fecha_vencimiento = models.DateField()
    monto_total = models.FloatField()
    monto_cancelado = models.FloatField(blank=True, null=True)
    monto_pendiente = models.FloatField(blank=True, null=True)
    observaciones = models.CharField(max_length=250, blank=True, null=True)
    grupo_id = models.CharField(max_length=6)
    grupo = models.CharField(max_length=150)
    categoria_id = models.CharField(max_length=6)
    categoria = models.CharField(max_length=150)
    subcategoria_id = models.CharField(max_length=6)
    subcategoria = models.CharField(max_length=150)
    fecha_sistema = models.DateField()
    estado = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tm_ap_ingresos_egresos'


class TmApInvSelectionCriteria(models.Model):
    checkrun_name = models.CharField(max_length=255)
    check_date = models.DateField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    bank_account_name = models.CharField(max_length=80, blank=True, null=True)
    period_name = models.CharField(max_length=15, blank=True, null=True)
    pay_thru_date = models.DateField(blank=True, null=True)
    vendor_pay_group = models.CharField(max_length=25, blank=True, null=True)
    hi_payment_priority = models.IntegerField(blank=True, null=True)
    low_payment_priority = models.IntegerField(blank=True, null=True)
    max_payment_amount = models.FloatField(blank=True, null=True)
    min_check_amount = models.FloatField(blank=True, null=True)
    max_outlay = models.FloatField(blank=True, null=True)
    pay_only_when_due_flag = models.CharField(max_length=1, blank=True, null=True)
    status = models.CharField(max_length=25, blank=True, null=True)
    check_stock_id = models.BigIntegerField(blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    document_order_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    audit_required_flag = models.CharField(max_length=1, blank=True, null=True)
    interval = models.BigIntegerField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    volume_serial_number = models.CharField(max_length=6, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    ussgl_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    ussgl_trx_code_context = models.CharField(max_length=30, blank=True, null=True)
    zero_amounts_allowed = models.CharField(max_length=1, blank=True, null=True)
    start_print_document = models.BigIntegerField(blank=True, null=True)
    end_print_document = models.BigIntegerField(blank=True, null=True)
    first_voucher_number = models.BigIntegerField(blank=True, null=True)
    first_available_document = models.BigIntegerField(blank=True, null=True)
    payment_method_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    zero_invoices_allowed = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    checkrun_id = models.BigIntegerField()
    batch_identifier = models.CharField(max_length=30, blank=True, null=True)
    bank_account_id = models.BigIntegerField(blank=True, null=True)
    template_flag = models.CharField(max_length=1, blank=True, null=True)
    transfer_priority = models.CharField(max_length=25, blank=True, null=True)
    batch_run_name = models.CharField(max_length=30, blank=True, null=True)
    batch_set_id = models.BigIntegerField(blank=True, null=True)
    batch_set_line_id = models.BigIntegerField(blank=True, null=True)
    future_dated_payment_flag = models.CharField(max_length=30, blank=True, null=True)
    anticipated_value_date = models.DateField(blank=True, null=True)
    invoice_batch_id = models.BigIntegerField(blank=True, null=True)
    vendor_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    request_id = models.BigIntegerField(blank=True, null=True)
    template_id = models.BigIntegerField(blank=True, null=True)
    pay_from_date = models.DateField(blank=True, null=True)
    vendor_type_lookup_code = models.CharField(max_length=30, blank=True, null=True)
    payment_profile_id = models.BigIntegerField(blank=True, null=True)
    inv_exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    payables_review_settings = models.CharField(max_length=1, blank=True, null=True)
    calc_awt_int_flag = models.CharField(max_length=1, blank=True, null=True)
    payments_review_settings = models.CharField(max_length=1, blank=True, null=True)
    document_rejection_level_code = models.CharField(max_length=30, blank=True, null=True)
    payment_rejection_level_code = models.CharField(max_length=30, blank=True, null=True)
    create_instrs_flag = models.CharField(max_length=1, blank=True, null=True)
    pay_group_option = models.CharField(max_length=10, blank=True, null=True)
    currency_group_option = models.CharField(max_length=10, blank=True, null=True)
    le_group_option = models.CharField(max_length=10, blank=True, null=True)
    ou_group_option = models.CharField(max_length=10, blank=True, null=True)
    payment_method_code = models.CharField(max_length=30, blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    resubmit_flag = models.CharField(max_length=1, blank=True, null=True)
    next_voucher_number = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    payment_document_id = models.BigIntegerField(blank=True, null=True)
    ce_bank_acct_use_id = models.BigIntegerField(blank=True, null=True)
    inv_awt_exists_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_ap_inv_selection_criteria'


class TmApInvoicesAllFg(models.Model):
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    ruc = models.CharField(max_length=40, blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    nro_documento_fg = models.CharField(max_length=30, blank=True, null=True)
    moneda = models.CharField(max_length=10, blank=True, null=True)
    importe_documento = models.FloatField(blank=True, null=True)
    importe_restante = models.FloatField(blank=True, null=True)
    fecha_documento = models.DateField(blank=True, null=True)
    tasa_cambio = models.FloatField(blank=True, null=True)
    desc_factura = models.CharField(max_length=150, blank=True, null=True)
    motivo_excepcion = models.CharField(max_length=10, blank=True, null=True)
    id_original = models.FloatField(blank=True, null=True)
    nro_documento_original = models.CharField(max_length=30, blank=True, null=True)
    monto_soles_doc_original = models.FloatField(blank=True, null=True)
    monto_ret_doc_original = models.FloatField(blank=True, null=True)
    tipo_ser_det_doc_original = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_ap_invoices_all_fg'


class TmApSupplierSitesInt(models.Model):
    vendor_interface_id = models.BigIntegerField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_updated_by = models.BigIntegerField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15)
    vendor_site_code_alt = models.CharField(max_length=320, blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    purchasing_site_flag = models.CharField(max_length=1, blank=True, null=True)
    rfq_only_site_flag = models.CharField(max_length=1, blank=True, null=True)
    pay_site_flag = models.CharField(max_length=1, blank=True, null=True)
    attention_ar_flag = models.CharField(max_length=1, blank=True, null=True)
    address_line1 = models.CharField(max_length=240, blank=True, null=True)
    address_lines_alt = models.CharField(max_length=560, blank=True, null=True)
    address_line2 = models.CharField(max_length=240, blank=True, null=True)
    address_line3 = models.CharField(max_length=240, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=150, blank=True, null=True)
    zip = models.CharField(max_length=60, blank=True, null=True)
    province = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    area_code = models.CharField(max_length=10, blank=True, null=True)
    phone = models.CharField(max_length=15, blank=True, null=True)
    customer_num = models.CharField(max_length=25, blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    ship_to_location_code = models.CharField(max_length=60, blank=True, null=True)
    bill_to_location_id = models.FloatField(blank=True, null=True)
    bill_to_location_code = models.CharField(max_length=60, blank=True, null=True)
    ship_via_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    freight_terms_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    fob_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    inactive_date = models.DateField(blank=True, null=True)
    fax = models.CharField(max_length=15, blank=True, null=True)
    fax_area_code = models.CharField(max_length=10, blank=True, null=True)
    telex = models.CharField(max_length=15, blank=True, null=True)
    payment_method_lookup_code = models.CharField(max_length=30, blank=True, null=True)
    terms_date_basis = models.CharField(max_length=25, blank=True, null=True)
    vat_code = models.CharField(max_length=30, blank=True, null=True)
    distribution_set_id = models.FloatField(blank=True, null=True)
    distribution_set_name = models.CharField(max_length=50, blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    prepay_code_combination_id = models.FloatField(blank=True, null=True)
    pay_group_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    payment_priority = models.FloatField(blank=True, null=True)
    terms_id = models.FloatField(blank=True, null=True)
    terms_name = models.CharField(max_length=50, blank=True, null=True)
    invoice_amount_limit = models.FloatField(blank=True, null=True)
    pay_date_basis_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    always_take_disc_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    payment_currency_code = models.CharField(max_length=15, blank=True, null=True)
    hold_all_payments_flag = models.CharField(max_length=1, blank=True, null=True)
    hold_future_payments_flag = models.CharField(max_length=1, blank=True, null=True)
    hold_reason = models.CharField(max_length=240, blank=True, null=True)
    hold_unmatched_invoices_flag = models.CharField(max_length=1, blank=True, null=True)
    ap_tax_rounding_rule = models.CharField(max_length=1, blank=True, null=True)
    auto_tax_calc_flag = models.CharField(max_length=1, blank=True, null=True)
    auto_tax_calc_override = models.CharField(max_length=1, blank=True, null=True)
    amount_includes_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    exclusive_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_reporting_site_flag = models.CharField(max_length=1, blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    exclude_freight_from_discount = models.CharField(max_length=1, blank=True, null=True)
    vat_registration_num = models.CharField(max_length=20, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    operating_unit_name = models.CharField(max_length=240, blank=True, null=True)
    address_line4 = models.CharField(max_length=240, blank=True, null=True)
    county = models.CharField(max_length=150, blank=True, null=True)
    address_style = models.CharField(max_length=30, blank=True, null=True)
    language = models.CharField(max_length=30, blank=True, null=True)
    allow_awt_flag = models.CharField(max_length=1, blank=True, null=True)
    awt_group_id = models.BigIntegerField(blank=True, null=True)
    awt_group_name = models.CharField(max_length=25, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=30, blank=True, null=True)
    edi_transaction_handling = models.CharField(max_length=25, blank=True, null=True)
    edi_id_number = models.CharField(max_length=30, blank=True, null=True)
    edi_payment_method = models.CharField(max_length=25, blank=True, null=True)
    edi_payment_format = models.CharField(max_length=25, blank=True, null=True)
    edi_remittance_method = models.CharField(max_length=25, blank=True, null=True)
    bank_charge_bearer = models.CharField(max_length=1, blank=True, null=True)
    edi_remittance_instruction = models.CharField(max_length=256, blank=True, null=True)
    pay_on_code = models.CharField(max_length=25, blank=True, null=True)
    default_pay_site_id = models.BigIntegerField(blank=True, null=True)
    pay_on_receipt_summary_code = models.CharField(max_length=25, blank=True, null=True)
    tp_header_id = models.FloatField(blank=True, null=True)
    ece_tp_location_code = models.CharField(max_length=60, blank=True, null=True)
    pcard_site_flag = models.CharField(max_length=1, blank=True, null=True)
    match_option = models.CharField(max_length=25, blank=True, null=True)
    country_of_origin_code = models.CharField(max_length=2, blank=True, null=True)
    future_dated_payment_ccid = models.BigIntegerField(blank=True, null=True)
    create_debit_memo_flag = models.CharField(max_length=25, blank=True, null=True)
    offset_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    supplier_notif_method = models.CharField(max_length=25, blank=True, null=True)
    email_address = models.CharField(max_length=2000, blank=True, null=True)
    remittance_email = models.CharField(max_length=2000, blank=True, null=True)
    primary_pay_site_flag = models.CharField(max_length=1, blank=True, null=True)
    import_request_id = models.BigIntegerField(blank=True, null=True)
    status = models.CharField(max_length=30, blank=True, null=True)
    reject_code = models.CharField(max_length=2000, blank=True, null=True)
    shipping_control = models.CharField(max_length=30, blank=True, null=True)
    duns_number = models.CharField(max_length=30, blank=True, null=True)
    tolerance_id = models.BigIntegerField(blank=True, null=True)
    tolerance_name = models.CharField(max_length=255, blank=True, null=True)
    iby_bank_charge_bearer = models.CharField(max_length=30, blank=True, null=True)
    bank_instruction1_code = models.CharField(max_length=30, blank=True, null=True)
    bank_instruction2_code = models.CharField(max_length=30, blank=True, null=True)
    bank_instruction_details = models.CharField(max_length=255, blank=True, null=True)
    payment_reason_code = models.CharField(max_length=30, blank=True, null=True)
    payment_reason_comments = models.CharField(max_length=240, blank=True, null=True)
    delivery_channel_code = models.CharField(max_length=30, blank=True, null=True)
    payment_format_code = models.CharField(max_length=150, blank=True, null=True)
    settlement_priority = models.CharField(max_length=30, blank=True, null=True)
    payment_text_message1 = models.CharField(max_length=150, blank=True, null=True)
    payment_text_message2 = models.CharField(max_length=150, blank=True, null=True)
    payment_text_message3 = models.CharField(max_length=150, blank=True, null=True)
    vendor_site_interface_id = models.BigIntegerField()
    payment_method_code = models.CharField(max_length=30, blank=True, null=True)
    retainage_rate = models.FloatField(blank=True, null=True)
    gapless_inv_num_flag = models.CharField(max_length=1, blank=True, null=True)
    selling_company_identifier = models.CharField(max_length=10, blank=True, null=True)
    pay_awt_group_id = models.BigIntegerField(blank=True, null=True)
    pay_awt_group_name = models.CharField(max_length=25, blank=True, null=True)
    party_site_id = models.BigIntegerField(blank=True, null=True)
    party_site_name = models.CharField(max_length=240, blank=True, null=True)
    remit_advice_delivery_method = models.CharField(max_length=30, blank=True, null=True)
    remit_advice_fax = models.CharField(max_length=100, blank=True, null=True)
    party_orig_system = models.CharField(max_length=30, blank=True, null=True)
    party_orig_system_reference = models.CharField(max_length=255, blank=True, null=True)
    party_site_orig_system = models.CharField(max_length=30, blank=True, null=True)
    party_site_orig_sys_reference = models.CharField(max_length=255, blank=True, null=True)
    supplier_site_orig_system = models.CharField(max_length=30, blank=True, null=True)
    sup_site_orig_system_reference = models.CharField(max_length=255, blank=True, null=True)
    sdh_batch_id = models.BigIntegerField(blank=True, null=True)
    party_id = models.BigIntegerField(blank=True, null=True)
    location_id = models.BigIntegerField(blank=True, null=True)
    cage_code = models.CharField(max_length=5, blank=True, null=True)
    legal_business_name = models.CharField(max_length=240, blank=True, null=True)
    doing_bus_as_name = models.CharField(max_length=240, blank=True, null=True)
    division_name = models.CharField(max_length=60, blank=True, null=True)
    small_business_code = models.CharField(max_length=10, blank=True, null=True)
    ccr_comments = models.CharField(max_length=240, blank=True, null=True)
    debarment_start_date = models.DateField(blank=True, null=True)
    debarment_end_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_ap_supplier_sites_int'


class TmAsientoRevJul11(models.Model):
    origen = models.CharField(max_length=11, blank=True, null=True)
    je_header_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_asiento_rev_jul11'


class TmAsientoReversaJul11(models.Model):
    accrual_rev_je_header_id = models.BigIntegerField(blank=True, null=True)
    je_line_num = models.BigIntegerField()
    factura = models.CharField(max_length=51, blank=True, null=True)
    razon_social = models.CharField(max_length=240, blank=True, null=True)
    ruc = models.CharField(max_length=30, blank=True, null=True)
    descripcion_factura = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_asiento_reversa_jul11'


class TmAsientosDetalle(models.Model):
    user_name = models.CharField(max_length=15)
    periodo_actual = models.CharField(max_length=15)
    libro = models.CharField(max_length=15)
    ruc_empresa = models.CharField(max_length=11, blank=True, null=True)
    nombre_empresa = models.CharField(max_length=35, blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=240, blank=True, null=True)
    ruc = models.CharField(max_length=30, blank=True, null=True)
    razon_social = models.CharField(max_length=360, blank=True, null=True)
    saldo_anterior = models.FloatField(blank=True, null=True)
    saldo_anterior_aj = models.FloatField(blank=True, null=True)
    debe = models.FloatField(blank=True, null=True)
    haber = models.FloatField(blank=True, null=True)
    saldo_mes = models.FloatField(blank=True, null=True)
    saldo_actual = models.FloatField(blank=True, null=True)
    fecha_gl = models.DateField(blank=True, null=True)
    tipo_cuenta = models.CharField(max_length=2, blank=True, null=True)
    saldo_anterior_accounted = models.FloatField(blank=True, null=True)
    saldo_anterior_accounted_aj = models.FloatField(blank=True, null=True)
    debe_accounted = models.FloatField(blank=True, null=True)
    haber_accounted = models.FloatField(blank=True, null=True)
    saldo_mes_accounted = models.FloatField(blank=True, null=True)
    saldo_actual_accounted = models.FloatField(blank=True, null=True)
    documento = models.CharField(max_length=100, blank=True, null=True)
    fecha_documento = models.CharField(max_length=20, blank=True, null=True)
    num_asiento = models.CharField(max_length=20, blank=True, null=True)
    fecha_asiento = models.CharField(max_length=20, blank=True, null=True)
    glosa_asiento = models.CharField(max_length=240, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    origen = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_asientos_detalle'


class TmAsientosDetalle230212(models.Model):
    user_name = models.CharField(max_length=15)
    periodo_actual = models.CharField(max_length=15)
    libro = models.CharField(max_length=15)
    ruc_empresa = models.CharField(max_length=11, blank=True, null=True)
    nombre_empresa = models.CharField(max_length=35, blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=240, blank=True, null=True)
    ruc = models.CharField(max_length=30, blank=True, null=True)
    razon_social = models.CharField(max_length=360, blank=True, null=True)
    saldo_anterior = models.FloatField(blank=True, null=True)
    saldo_anterior_aj = models.FloatField(blank=True, null=True)
    debe = models.FloatField(blank=True, null=True)
    haber = models.FloatField(blank=True, null=True)
    saldo_mes = models.FloatField(blank=True, null=True)
    saldo_actual = models.FloatField(blank=True, null=True)
    fecha_gl = models.DateField(blank=True, null=True)
    tipo_cuenta = models.CharField(max_length=2, blank=True, null=True)
    saldo_anterior_accounted = models.FloatField(blank=True, null=True)
    saldo_anterior_accounted_aj = models.FloatField(blank=True, null=True)
    debe_accounted = models.FloatField(blank=True, null=True)
    haber_accounted = models.FloatField(blank=True, null=True)
    saldo_mes_accounted = models.FloatField(blank=True, null=True)
    saldo_actual_accounted = models.FloatField(blank=True, null=True)
    documento = models.CharField(max_length=100, blank=True, null=True)
    fecha_documento = models.CharField(max_length=20, blank=True, null=True)
    num_asiento = models.CharField(max_length=20, blank=True, null=True)
    fecha_asiento = models.CharField(max_length=20, blank=True, null=True)
    glosa_asiento = models.CharField(max_length=240, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_asientos_detalle230212'


class TmAsientosDetalleTotal(models.Model):
    user_name = models.CharField(max_length=15, blank=True, null=True)
    periodo_actual = models.CharField(max_length=15)
    ruc_empresa = models.CharField(max_length=11, blank=True, null=True)
    nombre_empresa = models.CharField(max_length=35, blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    cuenta = models.CharField(max_length=150, blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=240, blank=True, null=True)
    ruc = models.CharField(max_length=30, blank=True, null=True)
    razon_social = models.CharField(max_length=360, blank=True, null=True)
    saldo_anterior = models.FloatField(blank=True, null=True)
    saldo_anterior_aj = models.FloatField(blank=True, null=True)
    debe = models.FloatField(blank=True, null=True)
    haber = models.FloatField(blank=True, null=True)
    saldo_mes = models.FloatField(blank=True, null=True)
    saldo_actual = models.FloatField(blank=True, null=True)
    nivel = models.FloatField(blank=True, null=True)
    orden = models.CharField(max_length=7, blank=True, null=True)
    fecha_asiento = models.CharField(max_length=20, blank=True, null=True)
    documento = models.CharField(max_length=100, blank=True, null=True)
    fecha_documento = models.CharField(max_length=20, blank=True, null=True)
    num_asiento = models.CharField(max_length=20, blank=True, null=True)
    glosa_asiento = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_asientos_detalle_total'


class TmAsientosJul11(models.Model):
    origen = models.CharField(max_length=15, blank=True, null=True)
    je_header_id = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tm_asientos_jul_11'


class TmBalanceglP(models.Model):
    cuenta = models.CharField(max_length=100, blank=True, null=True)
    debito = models.FloatField(blank=True, null=True)
    credito = models.FloatField(blank=True, null=True)
    saldos = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_balancegl_p'


class TmBalanceglPComprobando(models.Model):
    cuenta = models.CharField(max_length=100, blank=True, null=True)
    debito = models.FloatField(blank=True, null=True)
    credito = models.FloatField(blank=True, null=True)
    saldos = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_balancegl_p_comprobando'


class TmBalanceglPComprobando1(models.Model):
    cuenta = models.CharField(max_length=100, blank=True, null=True)
    debito = models.FloatField(blank=True, null=True)
    credito = models.FloatField(blank=True, null=True)
    saldos = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_balancegl_p_comprobando_1'


class TmDatosProveedores(models.Model):
    tipo_documento = models.CharField(max_length=5)
    numero_documento = models.CharField(max_length=50)
    tipo_cuenta = models.CharField(max_length=50)
    tipo_moneda = models.CharField(max_length=50)
    numero_cuenta = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'tm_datos_proveedores'


class TmEnvioBudget(models.Model):
    tipo = models.CharField(max_length=15, blank=True, null=True)
    secuencia = models.FloatField(blank=True, null=True)
    fecha = models.DateField(blank=True, null=True)
    empresa = models.FloatField()

    class Meta:
        managed = False
        db_table = 'tm_envio_budget'


class TmGastosCentroCosto(models.Model):
    user_name = models.CharField(max_length=25, blank=True, null=True)
    libro = models.BigIntegerField(blank=True, null=True)
    ccosto = models.CharField(max_length=50, blank=True, null=True)
    nombre_ccosto = models.CharField(max_length=250, blank=True, null=True)
    cuenta = models.CharField(max_length=50, blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=250, blank=True, null=True)
    apertura = models.FloatField(blank=True, null=True)
    enero = models.FloatField(blank=True, null=True)
    febrero = models.FloatField(blank=True, null=True)
    marzo = models.FloatField(blank=True, null=True)
    abril = models.FloatField(blank=True, null=True)
    mayo = models.FloatField(blank=True, null=True)
    junio = models.FloatField(blank=True, null=True)
    julio = models.FloatField(blank=True, null=True)
    agosto = models.FloatField(blank=True, null=True)
    setiembre = models.FloatField(blank=True, null=True)
    octubre = models.FloatField(blank=True, null=True)
    noviembre = models.FloatField(blank=True, null=True)
    diciembre = models.FloatField(blank=True, null=True)
    total = models.FloatField(blank=True, null=True)
    orden_cta_destino = models.CharField(max_length=7, blank=True, null=True)
    cta_destino = models.CharField(max_length=7, blank=True, null=True)
    nombre_cta_destino = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gastos_centro_costo'


class TmGastosCentroCosto131211(models.Model):
    user_name = models.CharField(max_length=25, blank=True, null=True)
    libro = models.BigIntegerField(blank=True, null=True)
    ccosto = models.CharField(max_length=50, blank=True, null=True)
    nombre_ccosto = models.CharField(max_length=250, blank=True, null=True)
    cuenta = models.CharField(max_length=50, blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=250, blank=True, null=True)
    apertura = models.FloatField(blank=True, null=True)
    enero = models.FloatField(blank=True, null=True)
    febrero = models.FloatField(blank=True, null=True)
    marzo = models.FloatField(blank=True, null=True)
    abril = models.FloatField(blank=True, null=True)
    mayo = models.FloatField(blank=True, null=True)
    junio = models.FloatField(blank=True, null=True)
    julio = models.FloatField(blank=True, null=True)
    agosto = models.FloatField(blank=True, null=True)
    setiembre = models.FloatField(blank=True, null=True)
    octubre = models.FloatField(blank=True, null=True)
    noviembre = models.FloatField(blank=True, null=True)
    diciembre = models.FloatField(blank=True, null=True)
    total = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gastos_centro_costo_131211'


class TmGlImportFg09112012(models.Model):
    moneda = models.CharField(max_length=10, blank=True, null=True)
    cuenta = models.CharField(max_length=60, blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    ruc = models.CharField(max_length=20, blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    razon_social = models.CharField(max_length=240, blank=True, null=True)
    documento = models.CharField(max_length=50, blank=True, null=True)
    fecha_documento = models.DateField(blank=True, null=True)
    fecha_cierre = models.DateField(blank=True, null=True)
    db_ing = models.FloatField(blank=True, null=True)
    hb_ing = models.FloatField(blank=True, null=True)
    db_cont = models.FloatField(blank=True, null=True)
    hb_cont = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_import_fg_09112012'


class TmGlIntDetApJul2011(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    cuenta_contable = models.CharField(max_length=60, blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    moneda = models.CharField(max_length=10, blank=True, null=True)
    db_ing = models.FloatField(blank=True, null=True)
    hb_ing = models.FloatField(blank=True, null=True)
    db_cont = models.FloatField(blank=True, null=True)
    hb_cont = models.FloatField(blank=True, null=True)
    ruc = models.CharField(max_length=60, blank=True, null=True)
    attribute2 = models.CharField(max_length=60, blank=True, null=True)
    attribute3 = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_int_det_ap_jul2011'


class TmGlIntDetArJul2011(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    cuenta_contable = models.CharField(max_length=60, blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    moneda = models.CharField(max_length=10, blank=True, null=True)
    db_ing = models.FloatField(blank=True, null=True)
    hb_ing = models.FloatField(blank=True, null=True)
    db_cont = models.FloatField(blank=True, null=True)
    hb_cont = models.FloatField(blank=True, null=True)
    ruc = models.CharField(max_length=60, blank=True, null=True)
    attribute1 = models.CharField(max_length=60, blank=True, null=True)
    attribute3 = models.CharField(max_length=60, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_int_det_ar_jul2011'


class TmGlPruebaCambioAsiento(models.Model):
    codigo = models.FloatField(blank=True, null=True)
    ruc = models.CharField(max_length=250, blank=True, null=True)
    fecha = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_prueba_cambio_asiento'


class TmGlRetencionManual022013(models.Model):
    status = models.CharField(max_length=100, blank=True, null=True)
    ledger_id = models.FloatField(blank=True, null=True)
    je_batch_id = models.FloatField(blank=True, null=True)
    je_header_id = models.FloatField(blank=True, null=True)
    je_line_num = models.FloatField(blank=True, null=True)
    group_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=30, blank=True, null=True)
    gl_date = models.DateField(blank=True, null=True)
    currency_code = models.CharField(max_length=10, blank=True, null=True)
    created_date = models.DateField(blank=True, null=True)
    user_je_category_name = models.CharField(max_length=30, blank=True, null=True)
    user_je_source_name = models.CharField(max_length=30, blank=True, null=True)
    exchange_rate_date = models.DateField(blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    combinacion_contable = models.CharField(max_length=100, blank=True, null=True)
    exchange_rate_type = models.CharField(max_length=10, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    entered_dr = models.FloatField(blank=True, null=True)
    entered_cr = models.FloatField(blank=True, null=True)
    accounted_dr = models.FloatField(blank=True, null=True)
    accounted_cr = models.FloatField(blank=True, null=True)
    reference1 = models.CharField(max_length=100, blank=True, null=True)
    reference10 = models.CharField(max_length=100, blank=True, null=True)
    attribute1 = models.CharField(max_length=100, blank=True, null=True)
    attribute2 = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_retencion_manual_022013'


class TmGlUpdDffGlJeLines(models.Model):
    group_id = models.FloatField(blank=True, null=True)
    je_header_id = models.FloatField(blank=True, null=True)
    je_line_num = models.FloatField(blank=True, null=True)
    attribute1 = models.CharField(max_length=60, blank=True, null=True)
    attribute2 = models.CharField(max_length=60, blank=True, null=True)
    attribute3 = models.CharField(max_length=60, blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_upd_dff_gl_je_lines'


class TmGlXbooksRep2014(models.Model):
    request_id = models.FloatField(blank=True, null=True)
    dia = models.CharField(max_length=10, blank=True, null=True)
    folio = models.FloatField(blank=True, null=True)
    id_asiento = models.FloatField(blank=True, null=True)
    nombre_asiento = models.CharField(max_length=100, blank=True, null=True)
    nro_linea = models.FloatField(blank=True, null=True)
    nro_interno = models.FloatField(blank=True, null=True)
    origen_desc = models.CharField(max_length=25, blank=True, null=True)
    glosa = models.CharField(max_length=240, blank=True, null=True)
    tipo = models.CharField(max_length=1, blank=True, null=True)
    debito_var = models.FloatField(blank=True, null=True)
    credito_var = models.FloatField(blank=True, null=True)
    importe_ext = models.FloatField(blank=True, null=True)
    debito = models.DecimalField(max_digits=16, decimal_places=2, blank=True, null=True)
    credito = models.DecimalField(max_digits=16, decimal_places=2, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    moneda = models.CharField(max_length=15, blank=True, null=True)
    tipo_cambio = models.FloatField(blank=True, null=True)
    nombre_lote = models.CharField(max_length=100, blank=True, null=True)
    id_lote = models.FloatField(blank=True, null=True)
    categoria = models.CharField(max_length=25, blank=True, null=True)
    id_categoria = models.CharField(max_length=25, blank=True, null=True)
    origen = models.CharField(max_length=25, blank=True, null=True)
    compania = models.CharField(max_length=25, blank=True, null=True)
    inter_cia = models.CharField(max_length=25, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    descrip_cta = models.CharField(max_length=240, blank=True, null=True)
    centro_costo = models.CharField(max_length=25, blank=True, null=True)
    usuario = models.CharField(max_length=100, blank=True, null=True)
    code_combination_id = models.FloatField(blank=True, null=True)
    do_cod_libro = models.CharField(max_length=120, blank=True, null=True)
    do_no_doc_sust = models.CharField(max_length=120, blank=True, null=True)
    saldo_inicial = models.FloatField(blank=True, null=True)
    saldo_final = models.FloatField(blank=True, null=True)
    debito_inicial = models.FloatField(blank=True, null=True)
    credito_inicial = models.FloatField(blank=True, null=True)
    total_final = models.FloatField(blank=True, null=True)
    tipo_cuenta = models.CharField(max_length=1, blank=True, null=True)
    l_count = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_gl_xbooks_rep_2014'


class TmIngresoUsdProcesado(models.Model):
    event_id = models.FloatField()
    flag = models.CharField(max_length=1)
    segment1 = models.CharField(max_length=25)
    descripcion = models.CharField(max_length=250, blank=True, null=True)
    grupo = models.FloatField()
    fecha = models.DateField()

    class Meta:
        managed = False
        db_table = 'tm_ingreso_usd_procesado'
        unique_together = (('event_id', 'flag'),)


class TmInvKardex(models.Model):
    organization_id = models.FloatField(blank=True, null=True)
    inventory_item_id = models.FloatField(blank=True, null=True)
    item_number = models.CharField(max_length=20, blank=True, null=True)
    secondary_inventory_name = models.CharField(max_length=20, blank=True, null=True)
    transaction_id = models.FloatField(blank=True, null=True)
    transaction_type_id = models.FloatField(blank=True, null=True)
    transaction_type_name = models.CharField(max_length=100, blank=True, null=True)
    transaction_date = models.DateField(blank=True, null=True)
    acct_period_id = models.FloatField(blank=True, null=True)
    period_name = models.CharField(max_length=10, blank=True, null=True)
    segment1 = models.CharField(max_length=50, blank=True, null=True)
    transaction_cost = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    existencia = models.FloatField(blank=True, null=True)
    costo_item = models.FloatField(blank=True, null=True)
    value_change = models.FloatField(blank=True, null=True)
    valor_item = models.FloatField(blank=True, null=True)
    establecimiento = models.CharField(max_length=120, blank=True, null=True)
    tipo_existencia = models.CharField(max_length=2, blank=True, null=True)
    unidad_medida = models.CharField(max_length=2, blank=True, null=True)
    metodo_valuacion = models.CharField(max_length=60, blank=True, null=True)
    udm = models.CharField(max_length=10, blank=True, null=True)
    fecha = models.DateField(blank=True, null=True)
    tipo_doc = models.CharField(max_length=2, blank=True, null=True)
    serie_doc = models.CharField(max_length=10, blank=True, null=True)
    numero_doc = models.CharField(max_length=20, blank=True, null=True)
    tipo_operacion = models.CharField(max_length=2, blank=True, null=True)
    orden = models.FloatField(blank=True, null=True)
    cantidad_inicial = models.FloatField(blank=True, null=True)
    costo_inicial = models.FloatField(blank=True, null=True)
    cantidad_entrada = models.FloatField(blank=True, null=True)
    cantidad_salida = models.FloatField(blank=True, null=True)
    cantidad_total = models.FloatField(blank=True, null=True)
    costo_entrada = models.FloatField(blank=True, null=True)
    costo_salida = models.FloatField(blank=True, null=True)
    costo_total = models.FloatField(blank=True, null=True)
    costo_unitario = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    request_date = models.DateField(blank=True, null=True)
    owning_organization_id = models.IntegerField(blank=True, null=True)
    flg_trx = models.CharField(max_length=1, blank=True, null=True)
    reference_account = models.CharField(max_length=10, blank=True, null=True)
    codproyecto = models.CharField(max_length=15, blank=True, null=True)
    desproyecto = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_inv_kardex'


class TmKpiProy(models.Model):
    fila = models.FloatField(blank=True, null=True)
    proyecto = models.CharField(max_length=200, blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    presupuesto = models.FloatField(blank=True, null=True)
    costo = models.FloatField(blank=True, null=True)
    compromisos = models.FloatField(blank=True, null=True)
    inventario = models.FloatField(blank=True, null=True)
    ingresos = models.FloatField(blank=True, null=True)
    facturas = models.FloatField(blank=True, null=True)
    venta = models.FloatField(blank=True, null=True)
    fr = models.FloatField(blank=True, null=True)
    fc = models.FloatField(blank=True, null=True)
    pre = models.FloatField(blank=True, null=True)
    cos = models.FloatField(blank=True, null=True)
    com = models.FloatField(blank=True, null=True)
    inv = models.FloatField(blank=True, null=True)
    dis = models.FloatField(blank=True, null=True)
    con = models.FloatField(blank=True, null=True)
    ven = models.FloatField(blank=True, null=True)
    ing = models.FloatField(blank=True, null=True)
    fac = models.FloatField(blank=True, null=True)
    fr1 = models.FloatField(blank=True, null=True)
    fc1 = models.FloatField(blank=True, null=True)
    fr_fc = models.FloatField(blank=True, null=True)
    fr_fc_a = models.FloatField(blank=True, null=True)
    mar_p = models.FloatField(blank=True, null=True)
    mar = models.FloatField(blank=True, null=True)
    mara = models.FloatField(blank=True, null=True)
    por_mar = models.FloatField(blank=True, null=True)
    flu = models.FloatField(blank=True, null=True)
    flua = models.FloatField(blank=True, null=True)
    por_flu = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_kpi_proy'


class TmPaCostDistLineAll2008(models.Model):
    expenditure_item_id = models.BigIntegerField()
    line_num = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    transfer_status_code = models.CharField(max_length=1)
    amount = models.DecimalField(max_digits=22, decimal_places=5)
    quantity = models.DecimalField(max_digits=22, decimal_places=5)
    billable_flag = models.CharField(max_length=1)
    request_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    pa_date = models.DateField(blank=True, null=True)
    dr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    gl_date = models.DateField(blank=True, null=True)
    transferred_date = models.DateField(blank=True, null=True)
    transfer_rejection_reason = models.CharField(max_length=250, blank=True, null=True)
    batch_name = models.CharField(max_length=30, blank=True, null=True)
    accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    reversed_flag = models.CharField(max_length=1, blank=True, null=True)
    line_num_reversed = models.BigIntegerField(blank=True, null=True)
    system_reference1 = models.CharField(max_length=30, blank=True, null=True)
    system_reference2 = models.CharField(max_length=30, blank=True, null=True)
    system_reference3 = models.CharField(max_length=30, blank=True, null=True)
    cr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    line_type = models.CharField(max_length=1)
    burdened_cost = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    resource_accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    function_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    code_combination_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_source_run_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_rejection_code = models.CharField(max_length=30, blank=True, null=True)
    denom_currency_code = models.CharField(max_length=15, blank=True, null=True)
    denom_raw_cost = models.FloatField(blank=True, null=True)
    denom_burdened_cost = models.FloatField(blank=True, null=True)
    acct_currency_code = models.CharField(max_length=15, blank=True, null=True)
    acct_rate_date = models.DateField(blank=True, null=True)
    acct_rate_type = models.CharField(max_length=30, blank=True, null=True)
    acct_exchange_rate = models.FloatField(blank=True, null=True)
    acct_raw_cost = models.FloatField(blank=True, null=True)
    acct_burdened_cost = models.FloatField(blank=True, null=True)
    project_currency_code = models.CharField(max_length=15, blank=True, null=True)
    project_rate_date = models.DateField(blank=True, null=True)
    project_rate_type = models.CharField(max_length=30, blank=True, null=True)
    project_exchange_rate = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    prc_generated_flag = models.CharField(max_length=1, blank=True, null=True)
    recvr_pa_date = models.DateField(blank=True, null=True)
    recvr_gl_date = models.DateField(blank=True, null=True)
    util_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    liquidate_encum_flag = models.CharField(max_length=1, blank=True, null=True)
    encumbrance_batch_name = models.CharField(max_length=240, blank=True, null=True)
    encumbrance_type_id = models.BigIntegerField(blank=True, null=True)
    encum_transfer_rej_reason = models.CharField(max_length=250, blank=True, null=True)
    budget_ccid = models.BigIntegerField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    projfunc_cost_exchange_rate = models.FloatField(blank=True, null=True)
    project_raw_cost = models.FloatField(blank=True, null=True)
    project_burdened_cost = models.FloatField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    recvr_gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_cost_rate_type = models.CharField(max_length=30, blank=True, null=True)
    projfunc_cost_rate_date = models.DateField(blank=True, null=True)
    recvr_pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_currency_code = models.CharField(max_length=15, blank=True, null=True)
    system_reference4 = models.CharField(max_length=30, blank=True, null=True)
    pji_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    org_labor_sch_rule_id = models.BigIntegerField(blank=True, null=True)
    cost_rate_sch_id = models.BigIntegerField(blank=True, null=True)
    denom_burdened_change = models.FloatField(blank=True, null=True)
    project_burdened_change = models.FloatField(blank=True, null=True)
    projfunc_burdened_change = models.FloatField(blank=True, null=True)
    acct_burdened_change = models.FloatField(blank=True, null=True)
    parent_line_num = models.BigIntegerField(blank=True, null=True)
    prev_ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    si_assets_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    system_reference5 = models.BigIntegerField(blank=True, null=True)
    acct_event_id = models.BigIntegerField(blank=True, null=True)
    acct_source_code = models.CharField(max_length=10, blank=True, null=True)
    budget_line_id = models.BigIntegerField(blank=True, null=True)
    budget_version_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_pa_cost_dist_line_all_2008'


class TmPaCostDistLineAllAllp(models.Model):
    expenditure_item_id = models.BigIntegerField()
    line_num = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    transfer_status_code = models.CharField(max_length=1)
    amount = models.DecimalField(max_digits=22, decimal_places=5)
    quantity = models.DecimalField(max_digits=22, decimal_places=5)
    billable_flag = models.CharField(max_length=1)
    request_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    pa_date = models.DateField(blank=True, null=True)
    dr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    gl_date = models.DateField(blank=True, null=True)
    transferred_date = models.DateField(blank=True, null=True)
    transfer_rejection_reason = models.CharField(max_length=250, blank=True, null=True)
    batch_name = models.CharField(max_length=30, blank=True, null=True)
    accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    reversed_flag = models.CharField(max_length=1, blank=True, null=True)
    line_num_reversed = models.BigIntegerField(blank=True, null=True)
    system_reference1 = models.CharField(max_length=30, blank=True, null=True)
    system_reference2 = models.CharField(max_length=30, blank=True, null=True)
    system_reference3 = models.CharField(max_length=30, blank=True, null=True)
    cr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    line_type = models.CharField(max_length=1)
    burdened_cost = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    resource_accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    function_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    code_combination_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_source_run_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_rejection_code = models.CharField(max_length=30, blank=True, null=True)
    denom_currency_code = models.CharField(max_length=15, blank=True, null=True)
    denom_raw_cost = models.FloatField(blank=True, null=True)
    denom_burdened_cost = models.FloatField(blank=True, null=True)
    acct_currency_code = models.CharField(max_length=15, blank=True, null=True)
    acct_rate_date = models.DateField(blank=True, null=True)
    acct_rate_type = models.CharField(max_length=30, blank=True, null=True)
    acct_exchange_rate = models.FloatField(blank=True, null=True)
    acct_raw_cost = models.FloatField(blank=True, null=True)
    acct_burdened_cost = models.FloatField(blank=True, null=True)
    project_currency_code = models.CharField(max_length=15, blank=True, null=True)
    project_rate_date = models.DateField(blank=True, null=True)
    project_rate_type = models.CharField(max_length=30, blank=True, null=True)
    project_exchange_rate = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    prc_generated_flag = models.CharField(max_length=1, blank=True, null=True)
    recvr_pa_date = models.DateField(blank=True, null=True)
    recvr_gl_date = models.DateField(blank=True, null=True)
    util_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    liquidate_encum_flag = models.CharField(max_length=1, blank=True, null=True)
    encumbrance_batch_name = models.CharField(max_length=240, blank=True, null=True)
    encumbrance_type_id = models.BigIntegerField(blank=True, null=True)
    encum_transfer_rej_reason = models.CharField(max_length=250, blank=True, null=True)
    budget_ccid = models.BigIntegerField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    projfunc_cost_exchange_rate = models.FloatField(blank=True, null=True)
    project_raw_cost = models.FloatField(blank=True, null=True)
    project_burdened_cost = models.FloatField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    recvr_gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_cost_rate_type = models.CharField(max_length=30, blank=True, null=True)
    projfunc_cost_rate_date = models.DateField(blank=True, null=True)
    recvr_pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_currency_code = models.CharField(max_length=15, blank=True, null=True)
    system_reference4 = models.CharField(max_length=30, blank=True, null=True)
    pji_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    org_labor_sch_rule_id = models.BigIntegerField(blank=True, null=True)
    cost_rate_sch_id = models.BigIntegerField(blank=True, null=True)
    denom_burdened_change = models.FloatField(blank=True, null=True)
    project_burdened_change = models.FloatField(blank=True, null=True)
    projfunc_burdened_change = models.FloatField(blank=True, null=True)
    acct_burdened_change = models.FloatField(blank=True, null=True)
    parent_line_num = models.BigIntegerField(blank=True, null=True)
    prev_ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    si_assets_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    system_reference5 = models.BigIntegerField(blank=True, null=True)
    acct_event_id = models.BigIntegerField(blank=True, null=True)
    acct_source_code = models.CharField(max_length=10, blank=True, null=True)
    budget_line_id = models.BigIntegerField(blank=True, null=True)
    budget_version_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_pa_cost_dist_line_all_allp'


class TmPaCostDistLineAllAllp2(models.Model):
    expenditure_item_id = models.BigIntegerField()
    line_num = models.BigIntegerField()
    creation_date = models.DateField()
    created_by = models.BigIntegerField()
    transfer_status_code = models.CharField(max_length=1)
    amount = models.DecimalField(max_digits=22, decimal_places=5)
    quantity = models.DecimalField(max_digits=22, decimal_places=5)
    billable_flag = models.CharField(max_length=1)
    request_id = models.BigIntegerField(blank=True, null=True)
    program_application_id = models.BigIntegerField(blank=True, null=True)
    program_id = models.BigIntegerField(blank=True, null=True)
    program_update_date = models.DateField(blank=True, null=True)
    pa_date = models.DateField(blank=True, null=True)
    dr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    gl_date = models.DateField(blank=True, null=True)
    transferred_date = models.DateField(blank=True, null=True)
    transfer_rejection_reason = models.CharField(max_length=250, blank=True, null=True)
    batch_name = models.CharField(max_length=30, blank=True, null=True)
    accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    reversed_flag = models.CharField(max_length=1, blank=True, null=True)
    line_num_reversed = models.BigIntegerField(blank=True, null=True)
    system_reference1 = models.CharField(max_length=30, blank=True, null=True)
    system_reference2 = models.CharField(max_length=30, blank=True, null=True)
    system_reference3 = models.CharField(max_length=30, blank=True, null=True)
    cr_code_combination_id = models.BigIntegerField(blank=True, null=True)
    ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    line_type = models.CharField(max_length=1)
    burdened_cost = models.DecimalField(max_digits=22, decimal_places=5, blank=True, null=True)
    resource_accumulated_flag = models.CharField(max_length=1, blank=True, null=True)
    function_transaction_code = models.CharField(max_length=30, blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    code_combination_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_source_run_id = models.BigIntegerField(blank=True, null=True)
    burden_sum_rejection_code = models.CharField(max_length=30, blank=True, null=True)
    denom_currency_code = models.CharField(max_length=15, blank=True, null=True)
    denom_raw_cost = models.FloatField(blank=True, null=True)
    denom_burdened_cost = models.FloatField(blank=True, null=True)
    acct_currency_code = models.CharField(max_length=15, blank=True, null=True)
    acct_rate_date = models.DateField(blank=True, null=True)
    acct_rate_type = models.CharField(max_length=30, blank=True, null=True)
    acct_exchange_rate = models.FloatField(blank=True, null=True)
    acct_raw_cost = models.FloatField(blank=True, null=True)
    acct_burdened_cost = models.FloatField(blank=True, null=True)
    project_currency_code = models.CharField(max_length=15, blank=True, null=True)
    project_rate_date = models.DateField(blank=True, null=True)
    project_rate_type = models.CharField(max_length=30, blank=True, null=True)
    project_exchange_rate = models.FloatField(blank=True, null=True)
    project_id = models.BigIntegerField(blank=True, null=True)
    task_id = models.BigIntegerField(blank=True, null=True)
    prc_generated_flag = models.CharField(max_length=1, blank=True, null=True)
    recvr_pa_date = models.DateField(blank=True, null=True)
    recvr_gl_date = models.DateField(blank=True, null=True)
    util_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    liquidate_encum_flag = models.CharField(max_length=1, blank=True, null=True)
    encumbrance_batch_name = models.CharField(max_length=240, blank=True, null=True)
    encumbrance_type_id = models.BigIntegerField(blank=True, null=True)
    encum_transfer_rej_reason = models.CharField(max_length=250, blank=True, null=True)
    budget_ccid = models.BigIntegerField(blank=True, null=True)
    encumbrance_amount = models.FloatField(blank=True, null=True)
    projfunc_cost_exchange_rate = models.FloatField(blank=True, null=True)
    project_raw_cost = models.FloatField(blank=True, null=True)
    project_burdened_cost = models.FloatField(blank=True, null=True)
    work_type_id = models.BigIntegerField(blank=True, null=True)
    gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    recvr_gl_period_name = models.CharField(max_length=15, blank=True, null=True)
    pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_cost_rate_type = models.CharField(max_length=30, blank=True, null=True)
    projfunc_cost_rate_date = models.DateField(blank=True, null=True)
    recvr_pa_period_name = models.CharField(max_length=15, blank=True, null=True)
    projfunc_currency_code = models.CharField(max_length=15, blank=True, null=True)
    system_reference4 = models.CharField(max_length=30, blank=True, null=True)
    pji_summarized_flag = models.CharField(max_length=1, blank=True, null=True)
    org_labor_sch_rule_id = models.BigIntegerField(blank=True, null=True)
    cost_rate_sch_id = models.BigIntegerField(blank=True, null=True)
    denom_burdened_change = models.FloatField(blank=True, null=True)
    project_burdened_change = models.FloatField(blank=True, null=True)
    projfunc_burdened_change = models.FloatField(blank=True, null=True)
    acct_burdened_change = models.FloatField(blank=True, null=True)
    parent_line_num = models.BigIntegerField(blank=True, null=True)
    prev_ind_compiled_set_id = models.BigIntegerField(blank=True, null=True)
    si_assets_addition_flag = models.CharField(max_length=1, blank=True, null=True)
    system_reference5 = models.BigIntegerField(blank=True, null=True)
    acct_event_id = models.BigIntegerField(blank=True, null=True)
    acct_source_code = models.CharField(max_length=10, blank=True, null=True)
    budget_line_id = models.BigIntegerField(blank=True, null=True)
    budget_version_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_pa_cost_dist_line_all_allp2'


class TmPaCostosErogaciones(models.Model):
    project_id = models.BigIntegerField()
    erogacion_id = models.BigIntegerField()
    monto = models.FloatField(blank=True, null=True)
    conc_request_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_pa_costos_erogaciones'


class TmPaRoAdicionales(models.Model):
    project_id = models.BigIntegerField()
    categoria_id = models.BigIntegerField()
    erogacion_id = models.BigIntegerField()
    categoria = models.CharField(max_length=120)
    erogacion = models.CharField(max_length=120)
    fecha = models.DateField(blank=True, null=True)
    porcentaje = models.FloatField(blank=True, null=True)
    fecha_sistema = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_pa_ro_adicionales'


class TmPerson(models.Model):
    person_id = models.FloatField(blank=True, null=True)
    first_name = models.CharField(max_length=150, blank=True, null=True)
    last_name = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_person'


class TmPlanillaObrerosCuentaBk(models.Model):
    periodo = models.CharField(max_length=4)
    semana = models.CharField(max_length=2)
    empresa = models.CharField(max_length=10)
    codtrab = models.CharField(max_length=5)
    concepto = models.CharField(max_length=50)
    des_concepto = models.CharField(max_length=150)
    tipo_concepto = models.CharField(max_length=20, blank=True, null=True)
    ccosto = models.CharField(max_length=10)
    monto = models.FloatField()
    cuenta = models.CharField(max_length=15)
    tipo = models.CharField(max_length=15)
    descripcion = models.CharField(max_length=100)
    flag_cc = models.CharField(max_length=1)
    usucrea = models.CharField(max_length=20)
    feccrea = models.DateField()
    usumodi = models.CharField(max_length=20, blank=True, null=True)
    fecmodi = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_planilla_obreros_cuenta_bk'


class TmPoSeguimientoDocumentos(models.Model):
    organization_id = models.BigIntegerField()
    organizacion = models.CharField(max_length=240)
    solicitante = models.CharField(max_length=240, blank=True, null=True)
    email_solicitante = models.CharField(max_length=240, blank=True, null=True)
    numero_si = models.CharField(max_length=20)
    numero_linea_si = models.FloatField()
    fecha_aprobacion_si = models.DateField(blank=True, null=True)
    cantidad_solicitada = models.FloatField(blank=True, null=True)
    descripcion = models.CharField(max_length=240)
    oc = models.CharField(max_length=20, blank=True, null=True)
    fecha_solicitud_aprobacion_oc = models.DateField(blank=True, null=True)
    aprobador = models.CharField(max_length=240, blank=True, null=True)
    email_aprobador = models.CharField(max_length=240, blank=True, null=True)
    fecha_aprobacion_oc = models.DateField(blank=True, null=True)
    comprador = models.CharField(max_length=240, blank=True, null=True)
    email_comprador = models.CharField(max_length=240, blank=True, null=True)
    proyecto = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_po_seguimiento_documentos'


class TmProyectosTmSoft(models.Model):
    ot = models.CharField(max_length=25)
    fecha = models.DateField(blank=True, null=True)
    cliente = models.CharField(max_length=360, blank=True, null=True)
    fechaentrega = models.DateField(blank=True, null=True)
    desc_ot = models.CharField(max_length=360, blank=True, null=True)
    valor_venta = models.FloatField(blank=True, null=True)
    valor_igv = models.FloatField(blank=True, null=True)
    precio_venta = models.FloatField(blank=True, null=True)
    cobrado_fecha = models.FloatField(blank=True, null=True)
    pend_cobro = models.FloatField(blank=True, null=True)
    por_facturar = models.FloatField(blank=True, null=True)
    por_cobrar = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_proyectos_tm_soft'


class TmPrueba(models.Model):
    responsibility_id = models.FloatField(blank=True, null=True)
    secuencia = models.FloatField(blank=True, null=True)
    nivel = models.FloatField(blank=True, null=True)
    descripcion = models.CharField(max_length=200, blank=True, null=True)
    sub_menu_id = models.FloatField(blank=True, null=True)
    menu_id = models.FloatField(blank=True, null=True)
    function_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_prueba'


class TmResumenProyectos(models.Model):
    ot = models.CharField(max_length=20, blank=True, null=True)
    finicio = models.DateField(blank=True, null=True)
    cliente = models.CharField(max_length=250, blank=True, null=True)
    fentrega = models.DateField(blank=True, null=True)
    descripcion = models.CharField(max_length=250, blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    v_venta_original = models.FloatField(blank=True, null=True)
    v_venta_usd = models.FloatField(blank=True, null=True)
    igv_usd = models.FloatField(blank=True, null=True)
    p_venta_usd = models.FloatField(blank=True, null=True)
    cobrado_usd = models.FloatField(blank=True, null=True)
    fact_pend_usd = models.FloatField(blank=True, null=True)
    por_facturar_usd = models.FloatField(blank=True, null=True)
    total_por_cobrar_usd = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_resumen_proyectos'


class TmTempErogacion(models.Model):
    cod_tmsoft = models.CharField(max_length=4, blank=True, null=True)
    proc_tmsoft = models.CharField(max_length=200, blank=True, null=True)
    ero_oracle = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_temp_erogacion'


class TmTempKardex(models.Model):
    texto = models.CharField(max_length=1000)

    class Meta:
        managed = False
        db_table = 'tm_temp_kardex'


class TmTempLibroMayor(models.Model):
    periodo = models.CharField(max_length=15, blank=True, null=True)
    dia = models.DateField(blank=True, null=True)
    folio = models.FloatField(blank=True, null=True)
    nombre_asiento = models.CharField(max_length=100, blank=True, null=True)
    nro_linea = models.BigIntegerField(blank=True, null=True)
    nro_interno = models.FloatField(blank=True, null=True)
    origen = models.CharField(max_length=25, blank=True, null=True)
    glosa = models.CharField(max_length=240, blank=True, null=True)
    debito_var = models.FloatField(blank=True, null=True)
    credito_var = models.FloatField(blank=True, null=True)
    importe_ext = models.FloatField(blank=True, null=True)
    debito = models.FloatField(blank=True, null=True)
    credito = models.FloatField(blank=True, null=True)
    saldo = models.FloatField(blank=True, null=True)
    moneda = models.CharField(max_length=15, blank=True, null=True)
    tipo_cambio = models.FloatField(blank=True, null=True)
    compania = models.CharField(max_length=25, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    centro_costo = models.CharField(max_length=25, blank=True, null=True)
    linea_negocio = models.CharField(max_length=25, blank=True, null=True)
    code_combination_id = models.BigIntegerField(blank=True, null=True)
    nombre_cuenta = models.CharField(max_length=240, blank=True, null=True)
    nombre_ccosto = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_temp_libro_mayor'


class TmTempProyectosExcel(models.Model):
    cod_ot = models.CharField(max_length=12, blank=True, null=True)
    f_inicio = models.DateField(blank=True, null=True)
    cliente = models.CharField(max_length=150, blank=True, null=True)
    f_entrega = models.DateField(blank=True, null=True)
    descripcion = models.CharField(max_length=150, blank=True, null=True)
    v_venta = models.FloatField(blank=True, null=True)
    v_venta_dol = models.FloatField(blank=True, null=True)
    igv_dol = models.FloatField(blank=True, null=True)
    p_venta_dol = models.FloatField(blank=True, null=True)
    facturado_dol = models.FloatField(blank=True, null=True)
    cobrado_dol = models.FloatField(blank=True, null=True)
    fact_pend_dol = models.FloatField(blank=True, null=True)
    por_facturar_dol = models.FloatField(blank=True, null=True)
    total_x_cob_dol = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_temp_proyectos_excel'


class TmTempProyectosTmsoft(models.Model):
    cod_ot = models.CharField(max_length=8, blank=True, null=True)
    fec_ot = models.DateField(blank=True, null=True)
    des_cli = models.CharField(max_length=200, blank=True, null=True)
    des_ot = models.CharField(max_length=200, blank=True, null=True)
    moneda = models.CharField(max_length=4, blank=True, null=True)
    imp_ot = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)
    igv_ot = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)
    tot_ot = models.DecimalField(max_digits=15, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_temp_proyectos_tmsoft'


class TmTmpPaTransacInterfAll(models.Model):
    transaction_source = models.CharField(max_length=8, blank=True, null=True)
    batch_name = models.CharField(max_length=10, blank=True, null=True)
    expenditure_ending_date = models.DateField(blank=True, null=True)
    organization_name = models.CharField(max_length=5, blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    raw_cost = models.FloatField(blank=True, null=True)
    expenditure_comment = models.CharField(max_length=150, blank=True, null=True)
    transaction_status_code = models.CharField(max_length=1, blank=True, null=True)
    orig_transaction_reference = models.CharField(max_length=11, blank=True, null=True)
    raw_cost_rate = models.FloatField(blank=True, null=True)
    unmatched_negative_txn_flag = models.CharField(max_length=1, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    dr_code_combination_id = models.FloatField(blank=True, null=True)
    cr_code_combination_id = models.BigIntegerField()
    gl_date = models.DateField(blank=True, null=True)
    burdened_cost_rate = models.FloatField(blank=True, null=True)
    system_linkage = models.CharField(max_length=2, blank=True, null=True)
    user_transaction_source = models.CharField(max_length=8, blank=True, null=True)
    denom_currency_code = models.CharField(max_length=3, blank=True, null=True)
    denom_raw_cost = models.FloatField(blank=True, null=True)
    denom_burdened_cost = models.FloatField(blank=True, null=True)
    acct_raw_cost = models.FloatField(blank=True, null=True)
    acct_burdened_cost = models.FloatField(blank=True, null=True)
    project_currency_code = models.CharField(max_length=15)
    projfunc_currency_code = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_tmp_pa_transac_interf_all'


class TmTmpTrxRuc(models.Model):
    user_name = models.CharField(max_length=15, blank=True, null=True)
    origen_select = models.CharField(max_length=250, blank=True, null=True)
    libro = models.CharField(max_length=30, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    fecha_gl = models.CharField(max_length=10, blank=True, null=True)
    fecha_tc = models.DateField(blank=True, null=True)
    origen = models.CharField(max_length=25, blank=True, null=True)
    categoria = models.CharField(max_length=25, blank=True, null=True)
    num_asiento = models.FloatField(blank=True, null=True)
    fecha_asiento = models.CharField(max_length=10, blank=True, null=True)
    nombre_asiento = models.CharField(max_length=100, blank=True, null=True)
    nro_interno = models.FloatField(blank=True, null=True)
    glosa_asiento = models.CharField(max_length=240, blank=True, null=True)
    glosa_linea = models.CharField(max_length=240, blank=True, null=True)
    je_header_id = models.BigIntegerField(blank=True, null=True)
    accrual_rev_je_header_id = models.BigIntegerField(blank=True, null=True)
    accrual_rev_status = models.CharField(max_length=1, blank=True, null=True)
    je_line_num = models.BigIntegerField(blank=True, null=True)
    moneda = models.CharField(max_length=15, blank=True, null=True)
    debito_ent = models.FloatField(blank=True, null=True)
    credito_ent = models.FloatField(blank=True, null=True)
    debito_pen_ori = models.FloatField(blank=True, null=True)
    credito_pen_ori = models.FloatField(blank=True, null=True)
    compania = models.CharField(max_length=25, blank=True, null=True)
    cuenta = models.CharField(max_length=25, blank=True, null=True)
    ccosto = models.CharField(max_length=25, blank=True, null=True)
    lnegocio = models.CharField(max_length=26, blank=True, null=True)
    futuro1 = models.CharField(max_length=26, blank=True, null=True)
    futuro2 = models.CharField(max_length=26, blank=True, null=True)
    documento = models.CharField(max_length=150, blank=True, null=True)
    fecha_documento = models.CharField(max_length=10, blank=True, null=True)
    razon_social = models.CharField(max_length=360, blank=True, null=True)
    ruc = models.CharField(max_length=30, blank=True, null=True)
    descripcion_factura = models.CharField(max_length=240, blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_tmp_trx_ruc'


class TmTmsoftFactCobr(models.Model):
    tipo = models.CharField(max_length=2, blank=True, null=True)
    ot = models.CharField(max_length=12, blank=True, null=True)
    pto = models.CharField(max_length=41, blank=True, null=True)
    factura = models.CharField(max_length=30, blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    femision = models.DateField(blank=True, null=True)
    facturado = models.FloatField(blank=True, null=True)
    cobrado = models.FloatField(blank=True, null=True)
    por_igv = models.FloatField(blank=True, null=True)
    cobrado_sigv = models.FloatField(blank=True, null=True)
    valido = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tm_tmsoft_fact_cobr'


class TmTmsoftFacturado(models.Model):
    tipo = models.CharField(max_length=2, blank=True, null=True)
    ot = models.CharField(max_length=8, blank=True, null=True)
    pto = models.CharField(max_length=41, blank=True, null=True)
    factura = models.CharField(max_length=30, blank=True, null=True)
    femision = models.DateField(blank=True, null=True)
    moneda = models.CharField(max_length=3, blank=True, null=True)
    facturado = models.FloatField(blank=True, null=True)
    valido = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'tm_tmsoft_facturado'


class TmTsApInvoice25072013(models.Model):
    vendor_name = models.CharField(max_length=250, blank=True, null=True)
    invoice_num = models.CharField(max_length=30, blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tm_ts_ap_invoice_25072013'


class TmpAsientoTmsoft(models.Model):
    empresa = models.CharField(max_length=15, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=150, blank=True, null=True)
    concepto_tareo = models.CharField(max_length=15, blank=True, null=True)
    cuenta = models.CharField(max_length=15, blank=True, null=True)
    tipo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)
    descripcion = models.CharField(max_length=100, blank=True, null=True)
    flag_cc = models.CharField(max_length=1, blank=True, null=True)
    cc = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_asiento_tmsoft'


class TmpAsientoTmsoft1(models.Model):
    empresa = models.CharField(max_length=15, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    cc = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=100, blank=True, null=True)
    cuenta = models.CharField(max_length=15, blank=True, null=True)
    tipo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_asiento_tmsoft1'


class TmpAsientoTmsoftEmpleado(models.Model):
    empresa = models.CharField(max_length=15, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    cc = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=150, blank=True, null=True)
    cuenta = models.CharField(max_length=15, blank=True, null=True)
    tipo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_asiento_tmsoft_empleado'


class TmpAsientoTmsoftObreros(models.Model):
    semana = models.CharField(max_length=2, blank=True, null=True)
    empresa = models.CharField(max_length=15, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=150, blank=True, null=True)
    concepto_tareo = models.CharField(max_length=15, blank=True, null=True)
    cuenta = models.CharField(max_length=15, blank=True, null=True)
    tipo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)
    descripcion = models.CharField(max_length=100, blank=True, null=True)
    flag_cc = models.CharField(max_length=1, blank=True, null=True)
    cc = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_asiento_tmsoft_obreros'


class TmpCuentasArticuloScarrillo(models.Model):
    organization_id = models.FloatField()
    name = models.CharField(max_length=240)
    inventory_item_id = models.FloatField()
    description = models.CharField(max_length=240, blank=True, null=True)
    encumbrance_account_old = models.FloatField(blank=True, null=True)
    encumbrance_old = models.CharField(max_length=155, blank=True, null=True)
    expense_account_old = models.FloatField(blank=True, null=True)
    expense_old = models.CharField(max_length=155, blank=True, null=True)
    encumbrance_account_new = models.BigIntegerField()
    encumbrance_new = models.CharField(max_length=155, blank=True, null=True)
    expense_account_new = models.BigIntegerField()
    expense_new = models.CharField(max_length=155, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_cuentas_articulo_scarrillo'


class TmpCuentasDestinoAnteriores(models.Model):
    reference_1 = models.CharField(max_length=240, blank=True, null=True)
    reference_2 = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_cuentas_destino_anteriores'


class TmpPlanilla(models.Model):
    codper = models.CharField(max_length=5, blank=True, null=True)
    cc = models.CharField(max_length=5, blank=True, null=True)
    concepto = models.CharField(max_length=3, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_planilla'


class TmpPlanillaObreros(models.Model):
    semana = models.CharField(max_length=2, blank=True, null=True)
    codper = models.CharField(max_length=5, blank=True, null=True)
    cc = models.CharField(max_length=6, blank=True, null=True)
    concepto = models.CharField(max_length=3, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_planilla_obreros'


class TmpPoDistributionsInterface(models.Model):
    interface_header_id = models.FloatField()
    interface_line_id = models.FloatField()
    interface_distribution_id = models.FloatField()
    distribution_num = models.FloatField(blank=True, null=True)
    quantity_ordered = models.FloatField(blank=True, null=True)
    charge_account_id = models.FloatField(blank=True, null=True)
    destination_type_code = models.CharField(max_length=25, blank=True, null=True)
    req_header_reference_num = models.CharField(max_length=25, blank=True, null=True)
    req_line_reference_num = models.CharField(max_length=25, blank=True, null=True)
    req_distribution_id = models.FloatField(blank=True, null=True)
    deliver_to_location_id = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    deliver_to_person_id = models.FloatField(blank=True, null=True)
    accrual_account_id = models.FloatField(blank=True, null=True)
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    project_accounting_context = models.CharField(max_length=30, blank=True, null=True)
    attribute_category = models.CharField(max_length=30, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_po_distributions_interface'


class TmpPoHeadersInterface1(models.Model):
    interface_header_id = models.FloatField()
    action = models.CharField(max_length=25, blank=True, null=True)
    document_type_code = models.CharField(max_length=25, blank=True, null=True)
    currency_code = models.CharField(max_length=15, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    interface_source_code = models.CharField(max_length=25, blank=True, null=True)
    approval_status = models.CharField(max_length=25, blank=True, null=True)
    process_code = models.CharField(max_length=25, blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_site_id = models.FloatField(blank=True, null=True)
    bill_to_location_id = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    agent_id = models.FloatField(blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    comments = models.CharField(max_length=240, blank=True, null=True)
    batch_id = models.FloatField(blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_po_headers_interface1'


class TmpPoLinesInterface(models.Model):
    interface_header_id = models.FloatField()
    interface_line_id = models.FloatField()
    action = models.CharField(max_length=25, blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    line_num = models.FloatField(blank=True, null=True)
    shipment_num = models.FloatField(blank=True, null=True)
    line_type_id = models.FloatField(blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    uom_code = models.CharField(max_length=3, blank=True, null=True)
    promised_date = models.DateField(blank=True, null=True)
    ship_to_organization_id = models.FloatField(blank=True, null=True)
    organization_id = models.FloatField(blank=True, null=True)
    ship_to_location_id = models.FloatField(blank=True, null=True)
    orig_from_req_flag = models.CharField(max_length=1, blank=True, null=True)
    line_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    tax_name = models.CharField(max_length=30, blank=True, null=True)
    line_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    line_attribute3 = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_po_lines_interface'


class TmpTabPrivs(models.Model):
    grantee = models.CharField(max_length=30)
    owner = models.CharField(max_length=30)
    table_name = models.CharField(max_length=30)
    grantor = models.CharField(max_length=30)
    privilege = models.CharField(max_length=40)
    grantable = models.CharField(max_length=3, blank=True, null=True)
    hierarchy = models.CharField(max_length=3, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tab_privs'


class TmpTareo(models.Model):
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    horas = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo'


class TmpTareoEmpleados(models.Model):
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    horas = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_empleados'


class TmpTareoEmpleados1(models.Model):
    semana = models.CharField(max_length=2, blank=True, null=True)
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    horas = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_empleados1'


class TmpTareoEmpleadosBk(models.Model):
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    horas = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_empleados_bk'


class TmpTareoObreros(models.Model):
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto = models.CharField(max_length=15, blank=True, null=True)
    project_number = models.CharField(max_length=25, blank=True, null=True)
    task_number = models.CharField(max_length=25, blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    horas = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_obreros'


class TmpTareoPlanilla(models.Model):
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto_old = models.CharField(max_length=15, blank=True, null=True)
    concepto_new = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=150, blank=True, null=True)
    concepto_tareo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_planilla'


class TmpTareoPlanillaObreros(models.Model):
    semana = models.CharField(max_length=2, blank=True, null=True)
    empresa = models.CharField(max_length=5, blank=True, null=True)
    periodo = models.CharField(max_length=15, blank=True, null=True)
    codper = models.CharField(max_length=15, blank=True, null=True)
    concepto_old = models.CharField(max_length=15, blank=True, null=True)
    concepto_new = models.CharField(max_length=15, blank=True, null=True)
    d_concepto = models.CharField(max_length=150, blank=True, null=True)
    concepto_tareo = models.CharField(max_length=15, blank=True, null=True)
    monto = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_tareo_planilla_obreros'


class TsApAwtTempDistributions(models.Model):
    invoice_id = models.BigIntegerField()
    payment_num = models.BigIntegerField(blank=True, null=True)
    group_id = models.BigIntegerField()
    tax_name = models.CharField(max_length=15)
    tax_code_combination_id = models.BigIntegerField()
    gross_amount = models.FloatField()
    withholding_amount = models.FloatField()
    base_withholding_amount = models.FloatField(blank=True, null=True)
    accounting_date = models.DateField()
    period_name = models.CharField(max_length=15)
    checkrun_name = models.CharField(max_length=255, blank=True, null=True)
    tax_rate_id = models.BigIntegerField()
    org_id = models.BigIntegerField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    awt_related_id = models.BigIntegerField(blank=True, null=True)
    checkrun_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_awt_temp_distributions'


class TsApCerretmanHeadInc44(models.Model):
    org_id = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    payment_num = models.CharField(max_length=100, blank=True, null=True)
    payment_date = models.DateField(blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    payment_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    cerret_id = models.FloatField(blank=True, null=True)
    processed_flag = models.CharField(max_length=1, blank=True, null=True)
    serie = models.CharField(max_length=50, blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    bank_party_id = models.FloatField(blank=True, null=True)
    bank_account_id = models.FloatField(blank=True, null=True)
    certificate_id = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_cerretman_head_inc44'


class TsApCerretmanlinInstFg(models.Model):
    cerret_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    invoice_num = models.CharField(max_length=100, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    pay_inv_amount = models.FloatField(blank=True, null=True)
    processed_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_rate_id = models.FloatField(blank=True, null=True)
    pay_base_inv_amount = models.FloatField(blank=True, null=True)
    awt_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_cerretmanlin_inst_fg'


class TsApOperaBillsInc41170812(models.Model):
    operation_id = models.FloatField(blank=True, null=True)
    bill_exchange_id = models.FloatField(blank=True, null=True)
    bill_exchange_num = models.CharField(max_length=50, blank=True, null=True)
    bill_exchange_date = models.DateField(blank=True, null=True)
    bill_terms_id = models.FloatField(blank=True, null=True)
    bill_terms_name = models.CharField(max_length=50, blank=True, null=True)
    bill_exchange_due_date = models.DateField(blank=True, null=True)
    bill_exchange_amt = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    created_by = models.FloatField()
    creation_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_date = models.DateField()
    last_update_login = models.FloatField(blank=True, null=True)
    cash_flow_code = models.CharField(max_length=50, blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    bill_gl_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_opera_bills_inc41_170812'


class TsApOperabillsInstallFg(models.Model):
    operation_id = models.FloatField(blank=True, null=True)
    bill_exchange_id = models.FloatField(blank=True, null=True)
    bill_exchange_num = models.CharField(max_length=50, blank=True, null=True)
    bill_exchange_date = models.DateField(blank=True, null=True)
    bill_terms_id = models.FloatField(blank=True, null=True)
    bill_terms_name = models.CharField(max_length=50, blank=True, null=True)
    bill_exchange_due_date = models.DateField(blank=True, null=True)
    bill_exchange_amt = models.FloatField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    created_by = models.FloatField()
    creation_date = models.DateField()
    last_updated_by = models.FloatField()
    last_update_date = models.DateField()
    last_update_login = models.FloatField(blank=True, null=True)
    cash_flow_code = models.CharField(max_length=50, blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    bill_gl_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_operabills_install_fg'


class TsApSelectedInvoices(models.Model):
    checkrun_name = models.CharField(max_length=255)
    invoice_id = models.BigIntegerField()
    payment_num = models.BigIntegerField()
    last_update_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    set_of_books_id = models.BigIntegerField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    vendor_id = models.BigIntegerField(blank=True, null=True)
    vendor_site_id = models.BigIntegerField(blank=True, null=True)
    vendor_num = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    customer_num = models.CharField(max_length=25, blank=True, null=True)
    address_line1 = models.CharField(max_length=240, blank=True, null=True)
    address_line2 = models.CharField(max_length=240, blank=True, null=True)
    address_line3 = models.CharField(max_length=240, blank=True, null=True)
    city = models.CharField(max_length=60, blank=True, null=True)
    state = models.CharField(max_length=150, blank=True, null=True)
    zip = models.CharField(max_length=60, blank=True, null=True)
    province = models.CharField(max_length=150, blank=True, null=True)
    country = models.CharField(max_length=60, blank=True, null=True)
    withholding_status_lookup_code = models.CharField(max_length=25, blank=True, null=True)
    attention_ar_flag = models.CharField(max_length=1, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    voucher_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    amount_paid = models.FloatField(blank=True, null=True)
    discount_amount_taken = models.FloatField(blank=True, null=True)
    ap_ccid = models.BigIntegerField(blank=True, null=True)
    due_date = models.DateField(blank=True, null=True)
    discount_date = models.DateField(blank=True, null=True)
    invoice_description = models.CharField(max_length=240, blank=True, null=True)
    payment_priority = models.IntegerField(blank=True, null=True)
    amount_remaining = models.FloatField(blank=True, null=True)
    discount_amount_remaining = models.FloatField(blank=True, null=True)
    payment_amount = models.FloatField(blank=True, null=True)
    discount_amount = models.FloatField(blank=True, null=True)
    sequence_num = models.BigIntegerField(blank=True, null=True)
    ok_to_pay_flag = models.CharField(max_length=1, blank=True, null=True)
    dont_pay_reason_code = models.CharField(max_length=25, blank=True, null=True)
    always_take_discount_flag = models.CharField(max_length=1, blank=True, null=True)
    amount_modified_flag = models.CharField(max_length=1, blank=True, null=True)
    check_number = models.BigIntegerField(blank=True, null=True)
    invoice_exchange_rate = models.FloatField(blank=True, null=True)
    payment_cross_rate = models.FloatField(blank=True, null=True)
    bank_account_type = models.CharField(max_length=25, blank=True, null=True)
    original_invoice_id = models.CharField(max_length=30, blank=True, null=True)
    original_payment_num = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    bank_account_num = models.CharField(max_length=30, blank=True, null=True)
    bank_num = models.CharField(max_length=25, blank=True, null=True)
    future_pay_due_date = models.DateField(blank=True, null=True)
    exclusive_payment_flag = models.CharField(max_length=1, blank=True, null=True)
    proposed_payment_amount = models.FloatField(blank=True, null=True)
    pay_selected_check_id = models.BigIntegerField(blank=True, null=True)
    print_selected_check_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    withholding_amount = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.BigIntegerField(blank=True, null=True)
    dont_pay_description = models.CharField(max_length=255, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    transfer_priority = models.CharField(max_length=25, blank=True, null=True)
    external_bank_account_id = models.BigIntegerField(blank=True, null=True)
    address_line4 = models.CharField(max_length=240, blank=True, null=True)
    iban_number = models.CharField(max_length=40, blank=True, null=True)
    checkrun_id = models.BigIntegerField(blank=True, null=True)
    legal_entity_id = models.BigIntegerField(blank=True, null=True)
    payment_currency_code = models.CharField(max_length=15, blank=True, null=True)
    payment_grouping_number = models.BigIntegerField(blank=True, null=True)
    payment_exchange_rate = models.FloatField(blank=True, null=True)
    payment_exchange_rate_type = models.CharField(max_length=30, blank=True, null=True)
    payment_exchange_date = models.DateField(blank=True, null=True)
    remit_to_supplier_name = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_id = models.BigIntegerField(blank=True, null=True)
    remit_to_supplier_site = models.CharField(max_length=240, blank=True, null=True)
    remit_to_supplier_site_id = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_selected_invoices'


class TsApServiciosMv(models.Model):
    id_servicio = models.FloatField()
    tipo_servicio = models.CharField(max_length=100, blank=True, null=True)
    descripcion = models.CharField(max_length=240, blank=True, null=True)
    afecto_detraccion = models.CharField(max_length=5, blank=True, null=True)
    monto_minimo = models.FloatField(blank=True, null=True)
    porcentaje = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)
    afecto_monto_ref = models.CharField(max_length=5, blank=True, null=True)
    fecha_desde = models.DateField(blank=True, null=True)
    fecha_hasta = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_servicios_mv'


class TsApServiciosMv1(models.Model):
    id_servicio = models.FloatField()
    tipo_servicio = models.CharField(max_length=100, blank=True, null=True)
    descripcion = models.CharField(max_length=240, blank=True, null=True)
    afecto_detraccion = models.CharField(max_length=5, blank=True, null=True)
    monto_minimo = models.FloatField(blank=True, null=True)
    porcentaje = models.DecimalField(max_digits=4, decimal_places=2, blank=True, null=True)
    afecto_monto_ref = models.CharField(max_length=5, blank=True, null=True)
    fecha_desde = models.DateField(blank=True, null=True)
    fecha_hasta = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_servicios_mv1'


class TsApTmDedDetailAjust(models.Model):
    deductible_id = models.FloatField(blank=True, null=True)
    val_type_code = models.CharField(max_length=50, blank=True, null=True)
    deductible_number = models.CharField(max_length=50, blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    cost = models.FloatField(blank=True, null=True)
    item_id = models.FloatField(blank=True, null=True)
    created_by = models.BigIntegerField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.BigIntegerField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.BigIntegerField(blank=True, null=True)
    deductible_date = models.DateField(blank=True, null=True)
    invoice_flag = models.CharField(max_length=1, blank=True, null=True)
    document_id = models.FloatField(blank=True, null=True)
    description = models.CharField(max_length=250, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=5, blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    po_header_id = models.FloatField(blank=True, null=True)
    status = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_tm_ded_detail_ajust'


class TsApWithCert290113(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_with_cert_290113'


class TsApWithcertDet01Mar13(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13'


class TsApWithcertDet01Mar13B(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13b'


class TsApWithcertDet01Mar13C(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13c'


class TsApWithcertDet01Mar13D(models.Model):
    cerret_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    invoice_num = models.CharField(max_length=100, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    pay_inv_amount = models.FloatField(blank=True, null=True)
    processed_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_rate_id = models.FloatField(blank=True, null=True)
    pay_base_inv_amount = models.FloatField(blank=True, null=True)
    awt_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13d'


class TsApWithcertDet01Mar13E(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13e'


class TsApWithcertDet01Mar13F(models.Model):
    cerret_id = models.FloatField(blank=True, null=True)
    currency_code = models.CharField(max_length=3, blank=True, null=True)
    invoice_num = models.CharField(max_length=100, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    pay_inv_amount = models.FloatField(blank=True, null=True)
    processed_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_rate_id = models.FloatField(blank=True, null=True)
    pay_base_inv_amount = models.FloatField(blank=True, null=True)
    awt_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13f'


class TsApWithcertDet01Mar13G(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13g'


class TsApWithcertDet01Mar13H(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13h'


class TsApWithcertDet01Mar13I(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13i'


class TsApWithcertDet01Mar13J(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_det_01mar13j'


class TsApWithcertInc41241012G(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_inc41_241012_g'


class TsApWithcertInc41Bk(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_inc_41_bk'


class TsApWithcertInstallFg(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcert_install_fg'


class TsApWithcertdetInc41010812(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_010812'


class TsApWithcertdetInc41030113(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_030113'


class TsApWithcertdetInc41100712(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_100712'


class TsApWithcertdetInc41200812(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_200812'


class TsApWithcertdetInc41211112(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_211112'


class TsApWithcertdetInc41221112(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_221112'


class TsApWithcertdetInc41231012(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_231012'


class TsApWithcertdetInc41241012(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_241012'


class TsApWithcertdetInc41A51212(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_a51212'


class TsApWithcertdetInc41B51212(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc41_b51212'


class TsApWithcertdetInc41Bk(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_inc_41_bk'


class TsApWithcertdetInstallFg(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdet_install_fg'


class TsApWithcertdetinc41211112A(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withcertdetinc41_211112a'


class TsApWithholdCertAll(models.Model):
    nom_archivo_res = models.CharField(max_length=150, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withhold_cert_all'


class TsApWithholdCertDetInc44(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    cert_detail_id = models.FloatField(blank=True, null=True)
    cert_detail_line_number = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    invoice_payment_id = models.FloatField(blank=True, null=True)
    invoice_id = models.FloatField(blank=True, null=True)
    invoice_type = models.CharField(max_length=30, blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    invoice_amount = models.FloatField(blank=True, null=True)
    inv_remaining_amount = models.FloatField(blank=True, null=True)
    invoice_base_amount = models.FloatField(blank=True, null=True)
    invoice_igv_amount = models.FloatField(blank=True, null=True)
    inv_payment_amount = models.FloatField(blank=True, null=True)
    inv_withhold_amount = models.FloatField(blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    exchange_rate_variance_flag = models.CharField(max_length=1, blank=True, null=True)
    base_payment_amount = models.FloatField(blank=True, null=True)
    base_withhold_amount = models.FloatField(blank=True, null=True)
    cerret_line_id = models.FloatField(blank=True, null=True)
    invoice_doc_sunat = models.CharField(max_length=2, blank=True, null=True)
    invoice_ref_invoce_num = models.CharField(max_length=50, blank=True, null=True)
    base_invoice_amount = models.FloatField(blank=True, null=True)
    accts_pay_code_combination_id = models.FloatField(blank=True, null=True)
    awt_group_id = models.FloatField(blank=True, null=True)
    invoice_currency_code = models.CharField(max_length=15, blank=True, null=True)
    pay_awt_group_id = models.FloatField(blank=True, null=True)
    accts_pay_account = models.CharField(max_length=25, blank=True, null=True)
    calc_payment_amount = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withhold_cert_det_inc44'


class TsApWithholdCertifInc44(models.Model):
    certificate_id = models.FloatField(blank=True, null=True)
    check_id = models.FloatField(blank=True, null=True)
    check_date = models.DateField(blank=True, null=True)
    check_amount = models.FloatField(blank=True, null=True)
    check_currency_code = models.CharField(max_length=15, blank=True, null=True)
    exchange_rate = models.FloatField(blank=True, null=True)
    serial_number = models.CharField(max_length=4, blank=True, null=True)
    certificate_number = models.CharField(max_length=15, blank=True, null=True)
    valid = models.CharField(max_length=1, blank=True, null=True)
    new_certificate_number = models.FloatField(blank=True, null=True)
    vendor_id = models.FloatField(blank=True, null=True)
    vendor_taxpayer_id = models.CharField(max_length=30, blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    org_id = models.FloatField(blank=True, null=True)
    no_letra = models.CharField(max_length=15, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_update_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)
    request_id = models.FloatField(blank=True, null=True)
    program_application_id = models.FloatField(blank=True, null=True)
    program_id = models.FloatField(blank=True, null=True)
    program_update_date = models.FloatField(blank=True, null=True)
    organization_name = models.CharField(max_length=250, blank=True, null=True)
    organization_ruc = models.CharField(max_length=250, blank=True, null=True)
    organization_address = models.CharField(max_length=250, blank=True, null=True)
    print_information = models.CharField(max_length=250, blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)
    flag_ret_canje_let = models.FloatField(blank=True, null=True)
    exchange_date = models.DateField(blank=True, null=True)
    print_information2 = models.CharField(max_length=250, blank=True, null=True)
    print_information3 = models.CharField(max_length=250, blank=True, null=True)
    attribute1 = models.FloatField(blank=True, null=True)
    check_number = models.FloatField(blank=True, null=True)
    asset_code_combination_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ap_withhold_certif_inc44'


class TsArPrintTemp(models.Model):
    customer_trx_id = models.FloatField(blank=True, null=True)
    trx_number = models.CharField(max_length=20, blank=True, null=True)
    complete_flag = models.CharField(max_length=1, blank=True, null=True)
    trx_date = models.DateField(blank=True, null=True)
    old_trx_number = models.CharField(max_length=20, blank=True, null=True)
    printing_original_date = models.DateField(blank=True, null=True)
    printing_last_printed = models.DateField(blank=True, null=True)
    printing_count = models.BigIntegerField(blank=True, null=True)
    serie = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ar_print_temp'


class TsCePaymentDoc201701110806(models.Model):
    payment_documents_id = models.BigIntegerField(blank=True, null=True)
    serie_cert_ret = models.CharField(max_length=4, blank=True, null=True)
    redondeo_detraccion = models.CharField(max_length=1, blank=True, null=True)
    tipo_pago = models.CharField(max_length=240, blank=True, null=True)
    tipo_chequera = models.CharField(max_length=20, blank=True, null=True)
    created_by = models.FloatField(blank=True, null=True)
    creation_date = models.DateField(blank=True, null=True)
    last_updated_by = models.FloatField(blank=True, null=True)
    last_update_date = models.DateField(blank=True, null=True)
    last_update_login = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_ce_payment_doc_201701110806'


class TsInvTmAccesos(models.Model):
    org = models.CharField(max_length=3, blank=True, null=True)
    application = models.CharField(max_length=30, blank=True, null=True)
    responsibility = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_accesos'


class TsInvTmGuiasRemision(models.Model):
    creation_date = models.DateField(blank=True, null=True)
    num_guia = models.CharField(max_length=15, blank=True, null=True)
    move_order = models.CharField(max_length=30, blank=True, null=True)
    contratista = models.CharField(max_length=100, blank=True, null=True)
    usuario = models.CharField(max_length=20, blank=True, null=True)
    item = models.CharField(max_length=30, blank=True, null=True)
    cantidad = models.FloatField(blank=True, null=True)
    trx_id = models.FloatField(blank=True, null=True)
    trx_set_id = models.FloatField(blank=True, null=True)
    new_trx_set_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_guias_remision'


class TsInvTmMapeoCategoria(models.Model):
    category_fa = models.CharField(max_length=100, blank=True, null=True)
    categoria = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_mapeo_categoria'


class TsInvTmMasterItems(models.Model):
    transfer_flag = models.CharField(max_length=1, blank=True, null=True)
    segment1 = models.CharField(max_length=40, blank=True, null=True)
    segment2 = models.CharField(max_length=40, blank=True, null=True)
    segment3 = models.CharField(max_length=40, blank=True, null=True)
    segment4 = models.CharField(max_length=40, blank=True, null=True)
    description = models.CharField(max_length=240, blank=True, null=True)
    primary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    secondary_uom_code = models.CharField(max_length=3, blank=True, null=True)
    inventory_item_flag = models.CharField(max_length=1, blank=True, null=True)
    purchasing_item_flag = models.CharField(max_length=1, blank=True, null=True)
    purchasing_tax_code = models.CharField(max_length=50, blank=True, null=True)
    cycle_count_enabled_flag = models.CharField(max_length=1, blank=True, null=True)
    category_fa = models.CharField(max_length=100, blank=True, null=True)
    invoiceable_item_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_code = models.CharField(max_length=50, blank=True, null=True)
    cat_contable = models.CharField(max_length=9, blank=True, null=True)
    cat_inv = models.CharField(max_length=30, blank=True, null=True)
    cta_gastos_tm = models.CharField(max_length=7, blank=True, null=True)
    cta_gastos_tmgi = models.CharField(max_length=7, blank=True, null=True)
    cta_ventas_tm = models.CharField(max_length=7, blank=True, null=True)
    cta_ventas_tmgi = models.CharField(max_length=7, blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)
    attribute1 = models.CharField(max_length=240, blank=True, null=True)
    item_number = models.CharField(unique=True, max_length=100, blank=True, null=True)
    ip = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_master_items'


class TsInvTmOrgItems(models.Model):
    transfer_flag = models.CharField(max_length=1, blank=True, null=True)
    organization_code = models.CharField(max_length=3, blank=True, null=True)
    item_number = models.CharField(max_length=100, blank=True, null=True)
    min_minmax_quantity = models.FloatField(blank=True, null=True)
    max_minmax_quantity = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_org_items'


class TsInvTmTransactions(models.Model):
    transfer_flag = models.CharField(max_length=1, blank=True, null=True)
    item_number = models.CharField(max_length=100, blank=True, null=True)
    organization_name = models.CharField(max_length=3, blank=True, null=True)
    subinventory_code = models.CharField(max_length=10, blank=True, null=True)
    loc_segment1 = models.CharField(max_length=40, blank=True, null=True)
    loc_segment2 = models.CharField(max_length=40, blank=True, null=True)
    loc_segment3 = models.CharField(max_length=40, blank=True, null=True)
    loc_segment19 = models.CharField(max_length=40, blank=True, null=True)
    loc_segment20 = models.CharField(max_length=40, blank=True, null=True)
    locator_code = models.CharField(max_length=100, blank=True, null=True)
    quantity = models.FloatField(blank=True, null=True)
    total_cost = models.FloatField(blank=True, null=True)
    error_explanation = models.CharField(max_length=240, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_transactions'


class TsInvTmUsuarios(models.Model):
    usuario = models.CharField(max_length=20, blank=True, null=True)
    nombre = models.CharField(max_length=30, blank=True, null=True)
    responsibility = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_inv_tm_usuarios'


class TsPaXresulOpeBkp170412(models.Model):
    conc_request_id = models.FloatField(blank=True, null=True)
    project_number = models.CharField(max_length=50, blank=True, null=True)
    project_name = models.CharField(max_length=100, blank=True, null=True)
    project_description = models.CharField(max_length=500, blank=True, null=True)
    clientes = models.CharField(max_length=4000, blank=True, null=True)
    project_manager = models.CharField(max_length=100, blank=True, null=True)
    utilidad = models.FloatField(blank=True, null=True)
    utilidad_por = models.FloatField(blank=True, null=True)
    valor_venta = models.FloatField(blank=True, null=True)
    peso_total = models.FloatField(blank=True, null=True)
    peso_unit_venta = models.FloatField(blank=True, null=True)
    category_description = models.CharField(max_length=50, blank=True, null=True)
    expenditure_description = models.CharField(max_length=50, blank=True, null=True)
    simbolo = models.CharField(max_length=10, blank=True, null=True)
    monto_presup_aprobado = models.FloatField(blank=True, null=True)
    incidencia_presup = models.FloatField(blank=True, null=True)
    kg = models.FloatField(blank=True, null=True)
    costo_real = models.FloatField(blank=True, null=True)
    incidencia_acumulado = models.FloatField(blank=True, null=True)
    avance = models.CharField(max_length=10, blank=True, null=True)
    incidencia_pre = models.FloatField(blank=True, null=True)
    incidencia_acu = models.FloatField(blank=True, null=True)
    monto_proyectado = models.FloatField(blank=True, null=True)
    kg_proyectado = models.FloatField(blank=True, null=True)
    diferencia_monto = models.FloatField(blank=True, null=True)
    kg_diferencia = models.FloatField(blank=True, null=True)
    fecha_avance = models.CharField(max_length=30, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ts_pa_xresul_ope_bkp170412'


class UnencAprvdDists8968844(models.Model):
    invoice_id = models.BigIntegerField()
    invoice_distribution_id = models.BigIntegerField()
    invoice_line_number = models.FloatField(blank=True, null=True)
    distribution_line_number = models.BigIntegerField()
    line_type_lookup_code = models.CharField(max_length=25)
    amount = models.FloatField(blank=True, null=True)
    base_amount = models.FloatField(blank=True, null=True)
    match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    bc_event_id = models.FloatField(blank=True, null=True)
    event_status_code = models.CharField(max_length=1, blank=True, null=True)
    process_status_code = models.CharField(max_length=1, blank=True, null=True)
    encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    accounting_event_id = models.BigIntegerField(blank=True, null=True)
    posted_flag = models.CharField(max_length=1, blank=True, null=True)
    po_distribution_id = models.BigIntegerField(blank=True, null=True)
    org_id = models.BigIntegerField(blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unenc_aprvd_dists_8968844'


class UnencRevPairs11686219(models.Model):
    table_name = models.CharField(max_length=100, blank=True, null=True)
    invoice_id = models.BigIntegerField(blank=True, null=True)
    invoice_num = models.CharField(max_length=50, blank=True, null=True)
    invoice_date = models.DateField(blank=True, null=True)
    vendor_name = models.CharField(max_length=240, blank=True, null=True)
    vendor_site_code = models.CharField(max_length=15, blank=True, null=True)
    line_number = models.FloatField(blank=True, null=True)
    parent_inv_dist_id = models.BigIntegerField(blank=True, null=True)
    parent_dist_line_num = models.BigIntegerField(blank=True, null=True)
    parent_line_type = models.CharField(max_length=25, blank=True, null=True)
    parent_amount = models.FloatField(blank=True, null=True)
    parent_base_amount = models.FloatField(blank=True, null=True)
    parent_match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_bc_event_id = models.FloatField(blank=True, null=True)
    parent_acct_event_id = models.BigIntegerField(blank=True, null=True)
    parent_event_status = models.CharField(max_length=1, blank=True, null=True)
    parent_encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    reversal_inv_dist_id = models.BigIntegerField(blank=True, null=True)
    reversal_dist_line_num = models.BigIntegerField(blank=True, null=True)
    reversal_line_type = models.CharField(max_length=25, blank=True, null=True)
    reversal_amount = models.FloatField(blank=True, null=True)
    reversal_base_amount = models.FloatField(blank=True, null=True)
    reversal_match_status_flag = models.CharField(max_length=1, blank=True, null=True)
    reversal_bc_event_id = models.FloatField(blank=True, null=True)
    reversal_acct_event_id = models.BigIntegerField(blank=True, null=True)
    reversal_event_status = models.CharField(max_length=1, blank=True, null=True)
    reversal_encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    reversal_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unenc_rev_pairs_11686219'


class UnencRevPairs8968844(models.Model):
    invoice_id = models.BigIntegerField()
    line_number = models.FloatField(blank=True, null=True)
    parent_inv_dist_id = models.BigIntegerField()
    parent_dist_line_num = models.BigIntegerField()
    parent_line_type = models.CharField(max_length=25)
    parent_amount = models.FloatField(blank=True, null=True)
    parent_base_amount = models.FloatField(blank=True, null=True)
    parent_bc_event_id = models.FloatField(blank=True, null=True)
    parent_event_status = models.CharField(max_length=1, blank=True, null=True)
    parent_encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    parent_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    reversal_inv_dist_id = models.BigIntegerField()
    reversal_dist_line_num = models.BigIntegerField()
    reversal_line_type = models.CharField(max_length=25)
    reversal_amount = models.FloatField(blank=True, null=True)
    reversal_base_amount = models.FloatField(blank=True, null=True)
    reversal_bc_event_id = models.FloatField(blank=True, null=True)
    reversal_event_status = models.CharField(max_length=1, blank=True, null=True)
    reversal_encumbered_flag = models.CharField(max_length=1, blank=True, null=True)
    reversal_posted_flag = models.CharField(max_length=1, blank=True, null=True)
    process_flag = models.CharField(max_length=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unenc_rev_pairs_8968844'


class WfBpelQtab(models.Model):
    q_name = models.CharField(max_length=30, blank=True, null=True)
    msgid = models.TextField(primary_key=True)  # This field type is a guess.
    corrid = models.CharField(max_length=128, blank=True, null=True)
    priority = models.FloatField(blank=True, null=True)
    state = models.FloatField(blank=True, null=True)
    delay = models.DateTimeField(blank=True, null=True)
    expiration = models.FloatField(blank=True, null=True)
    time_manager_info = models.DateTimeField(blank=True, null=True)
    local_order_no = models.FloatField(blank=True, null=True)
    chain_no = models.FloatField(blank=True, null=True)
    cscn = models.FloatField(blank=True, null=True)
    dscn = models.FloatField(blank=True, null=True)
    enq_time = models.DateTimeField(blank=True, null=True)
    enq_uid = models.FloatField(blank=True, null=True)
    enq_tid = models.CharField(max_length=30, blank=True, null=True)
    deq_time = models.DateTimeField(blank=True, null=True)
    deq_uid = models.FloatField(blank=True, null=True)
    deq_tid = models.CharField(max_length=30, blank=True, null=True)
    retry_count = models.FloatField(blank=True, null=True)
    exception_qschema = models.CharField(max_length=30, blank=True, null=True)
    exception_queue = models.CharField(max_length=30, blank=True, null=True)
    step_no = models.FloatField(blank=True, null=True)
    recipient_key = models.FloatField(blank=True, null=True)
    dequeue_msgid = models.TextField(blank=True, null=True)  # This field type is a guess.
    sender_name = models.CharField(max_length=30, blank=True, null=True)
    sender_address = models.CharField(max_length=1024, blank=True, null=True)
    sender_protocol = models.FloatField(blank=True, null=True)
    user_data = models.TextField(blank=True, null=True)  # This field type is a guess.
    user_prop = models.TextField(blank=True, null=True)  # This field type is a guess.

    class Meta:
        managed = False
        db_table = 'wf_bpel_qtab'


class WfResourcesBk(models.Model):
    type = models.CharField(max_length=8)
    name = models.CharField(max_length=30)
    language = models.CharField(max_length=30)
    id = models.FloatField()
    text = models.CharField(max_length=2000)
    protect_level = models.FloatField()
    custom_level = models.FloatField()
    source_lang = models.CharField(max_length=4)
    security_group_id = models.CharField(max_length=32, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'wf_resources_bk'


class WmsElsExpResourceGtemp(models.Model):
    els_data_id = models.FloatField(blank=True, null=True)
    source_header_id = models.FloatField(blank=True, null=True)
    source_line_id = models.FloatField(blank=True, null=True)
    activity_id = models.FloatField(blank=True, null=True)
    activity_detail_id = models.FloatField(blank=True, null=True)
    operation_id = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'wms_els_exp_resource_gtemp'


class ZxLines9574881(models.Model):
    orig_tax_amt_included_flag = models.CharField(max_length=1, blank=True, null=True)
    orig_self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_currency_code = models.CharField(max_length=15, blank=True, null=True)
    tax_amt = models.FloatField(blank=True, null=True)
    tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    taxable_amt = models.FloatField(blank=True, null=True)
    taxable_amt_tax_curr = models.FloatField(blank=True, null=True)
    taxable_amt_funcl_curr = models.FloatField(blank=True, null=True)
    orig_taxable_amt = models.FloatField(blank=True, null=True)
    orig_taxable_amt_tax_curr = models.FloatField(blank=True, null=True)
    cal_tax_amt = models.FloatField(blank=True, null=True)
    cal_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    cal_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    orig_tax_amt = models.FloatField(blank=True, null=True)
    orig_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    rec_tax_amt = models.FloatField(blank=True, null=True)
    rec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    rec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    nrec_tax_amt = models.FloatField(blank=True, null=True)
    nrec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    nrec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    tax_exemption_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_before_exemption = models.FloatField(blank=True, null=True)
    tax_rate_name_before_exemption = models.CharField(max_length=150, blank=True, null=True)
    exempt_rate_modifier = models.FloatField(blank=True, null=True)
    exempt_certificate_number = models.CharField(max_length=80, blank=True, null=True)
    exempt_reason = models.CharField(max_length=240, blank=True, null=True)
    exempt_reason_code = models.CharField(max_length=30, blank=True, null=True)
    tax_exception_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_before_exception = models.FloatField(blank=True, null=True)
    tax_rate_name_before_exception = models.CharField(max_length=150, blank=True, null=True)
    exception_rate = models.FloatField(blank=True, null=True)
    tax_apportionment_flag = models.CharField(max_length=1, blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    trx_number = models.CharField(max_length=150, blank=True, null=True)
    trx_date = models.DateField(blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    line_amt = models.FloatField(blank=True, null=True)
    trx_line_quantity = models.FloatField(blank=True, null=True)
    tax_base_modifier_rate = models.FloatField(blank=True, null=True)
    ref_doc_application_id = models.FloatField(blank=True, null=True)
    ref_doc_entity_code = models.CharField(max_length=30, blank=True, null=True)
    ref_doc_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    ref_doc_trx_id = models.FloatField(blank=True, null=True)
    ref_doc_line_id = models.FloatField(blank=True, null=True)
    ref_doc_line_quantity = models.FloatField(blank=True, null=True)
    other_doc_line_amt = models.FloatField(blank=True, null=True)
    other_doc_line_tax_amt = models.FloatField(blank=True, null=True)
    other_doc_line_taxable_amt = models.FloatField(blank=True, null=True)
    unrounded_taxable_amt = models.FloatField(blank=True, null=True)
    unrounded_tax_amt = models.FloatField(blank=True, null=True)
    related_doc_application_id = models.FloatField(blank=True, null=True)
    related_doc_entity_code = models.CharField(max_length=30, blank=True, null=True)
    related_doc_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    related_doc_trx_id = models.FloatField(blank=True, null=True)
    related_doc_number = models.CharField(max_length=150, blank=True, null=True)
    related_doc_date = models.DateField(blank=True, null=True)
    applied_from_application_id = models.FloatField(blank=True, null=True)
    applied_from_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    applied_from_entity_code = models.CharField(max_length=30, blank=True, null=True)
    applied_from_trx_id = models.FloatField(blank=True, null=True)
    applied_from_line_id = models.FloatField(blank=True, null=True)
    applied_from_trx_number = models.CharField(max_length=150, blank=True, null=True)
    adjusted_doc_application_id = models.FloatField(blank=True, null=True)
    adjusted_doc_entity_code = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_trx_id = models.FloatField(blank=True, null=True)
    adjusted_doc_line_id = models.FloatField(blank=True, null=True)
    adjusted_doc_number = models.CharField(max_length=150, blank=True, null=True)
    adjusted_doc_date = models.DateField(blank=True, null=True)
    applied_to_application_id = models.FloatField(blank=True, null=True)
    applied_to_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    applied_to_entity_code = models.CharField(max_length=30, blank=True, null=True)
    applied_to_trx_id = models.FloatField(blank=True, null=True)
    applied_to_line_id = models.FloatField(blank=True, null=True)
    summary_tax_line_id = models.BigIntegerField(blank=True, null=True)
    offset_link_to_tax_line_id = models.BigIntegerField(blank=True, null=True)
    offset_flag = models.CharField(max_length=1, blank=True, null=True)
    process_for_recovery_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_jurisdiction_id = models.BigIntegerField(blank=True, null=True)
    tax_jurisdiction_code = models.CharField(max_length=30, blank=True, null=True)
    place_of_supply = models.FloatField(blank=True, null=True)
    place_of_supply_type_code = models.CharField(max_length=30, blank=True, null=True)
    place_of_supply_result_id = models.BigIntegerField(blank=True, null=True)
    tax_date_rule_id = models.BigIntegerField(blank=True, null=True)
    tax_date = models.DateField(blank=True, null=True)
    tax_determine_date = models.DateField(blank=True, null=True)
    tax_point_date = models.DateField(blank=True, null=True)
    trx_line_date = models.DateField(blank=True, null=True)
    tax_type_code = models.CharField(max_length=30, blank=True, null=True)
    tax_code = models.CharField(max_length=30, blank=True, null=True)
    tax_registration_id = models.BigIntegerField(blank=True, null=True)
    tax_registration_number = models.CharField(max_length=50, blank=True, null=True)
    registration_party_type = models.CharField(max_length=30, blank=True, null=True)
    rounding_level_code = models.CharField(max_length=30, blank=True, null=True)
    rounding_rule_code = models.CharField(max_length=30, blank=True, null=True)
    rounding_lvl_party_tax_prof_id = models.BigIntegerField(blank=True, null=True)
    rounding_lvl_party_type = models.CharField(max_length=30, blank=True, null=True)
    compounding_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    orig_tax_status_id = models.BigIntegerField(blank=True, null=True)
    orig_tax_status_code = models.CharField(max_length=30, blank=True, null=True)
    orig_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    orig_tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    orig_tax_rate = models.FloatField(blank=True, null=True)
    orig_tax_jurisdiction_id = models.BigIntegerField(blank=True, null=True)
    orig_tax_jurisdiction_code = models.CharField(max_length=30, blank=True, null=True)
    char2 = models.CharField(max_length=150, blank=True, null=True)
    char3 = models.CharField(max_length=150, blank=True, null=True)
    char4 = models.CharField(max_length=150, blank=True, null=True)
    char5 = models.CharField(max_length=150, blank=True, null=True)
    char6 = models.CharField(max_length=150, blank=True, null=True)
    char7 = models.CharField(max_length=150, blank=True, null=True)
    char8 = models.CharField(max_length=150, blank=True, null=True)
    char9 = models.CharField(max_length=150, blank=True, null=True)
    char10 = models.CharField(max_length=150, blank=True, null=True)
    date1 = models.DateField(blank=True, null=True)
    date2 = models.DateField(blank=True, null=True)
    date3 = models.DateField(blank=True, null=True)
    date4 = models.DateField(blank=True, null=True)
    date5 = models.DateField(blank=True, null=True)
    date6 = models.DateField(blank=True, null=True)
    date7 = models.DateField(blank=True, null=True)
    date8 = models.DateField(blank=True, null=True)
    date9 = models.DateField(blank=True, null=True)
    date10 = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    legal_justification_text1 = models.CharField(max_length=2000, blank=True, null=True)
    legal_justification_text2 = models.CharField(max_length=2000, blank=True, null=True)
    legal_justification_text3 = models.CharField(max_length=2000, blank=True, null=True)
    reporting_currency_code = models.CharField(max_length=30, blank=True, null=True)
    line_assessable_value = models.FloatField(blank=True, null=True)
    trx_line_index = models.CharField(max_length=30, blank=True, null=True)
    offset_tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    proration_code = models.CharField(max_length=30, blank=True, null=True)
    other_doc_source = models.CharField(max_length=30, blank=True, null=True)
    ctrl_total_line_tx_amt = models.FloatField(blank=True, null=True)
    tax_rate_type = models.CharField(max_length=30, blank=True, null=True)
    compounding_tax_miss_flag = models.CharField(max_length=1, blank=True, null=True)
    mrc_link_to_tax_line_id = models.FloatField(blank=True, null=True)
    ref_doc_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    related_doc_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    applied_from_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    applied_to_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    sync_with_prvdr_flag = models.CharField(max_length=1, blank=True, null=True)
    applied_to_trx_number = models.CharField(max_length=150, blank=True, null=True)
    interface_entity_code = models.CharField(max_length=30, blank=True, null=True)
    interface_tax_line_id = models.FloatField(blank=True, null=True)
    taxing_juris_geography_id = models.FloatField(blank=True, null=True)
    adjusted_doc_tax_line_id = models.FloatField(blank=True, null=True)
    tax_line_id = models.BigIntegerField()
    internal_organization_id = models.FloatField()
    application_id = models.FloatField()
    entity_code = models.CharField(max_length=30)
    event_class_code = models.CharField(max_length=30)
    event_type_code = models.CharField(max_length=30, blank=True, null=True)
    trx_id = models.FloatField()
    trx_line_id = models.FloatField()
    trx_level_type = models.CharField(max_length=30)
    trx_line_number = models.FloatField(blank=True, null=True)
    doc_event_status = models.CharField(max_length=30, blank=True, null=True)
    tax_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    tax_event_type_code = models.CharField(max_length=30, blank=True, null=True)
    tax_line_number = models.FloatField()
    content_owner_id = models.BigIntegerField(blank=True, null=True)
    tax_regime_id = models.BigIntegerField(blank=True, null=True)
    tax_regime_code = models.CharField(max_length=30, blank=True, null=True)
    tax_id = models.BigIntegerField(blank=True, null=True)
    tax = models.CharField(max_length=30, blank=True, null=True)
    tax_status_id = models.BigIntegerField(blank=True, null=True)
    tax_status_code = models.CharField(max_length=30, blank=True, null=True)
    tax_rate_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    tax_rate = models.FloatField(blank=True, null=True)
    tax_apportionment_line_number = models.FloatField(blank=True, null=True)
    trx_id_level2 = models.FloatField(blank=True, null=True)
    trx_id_level3 = models.FloatField(blank=True, null=True)
    trx_id_level4 = models.FloatField(blank=True, null=True)
    trx_id_level5 = models.FloatField(blank=True, null=True)
    trx_id_level6 = models.FloatField(blank=True, null=True)
    trx_user_key_level1 = models.CharField(max_length=150, blank=True, null=True)
    trx_user_key_level2 = models.CharField(max_length=150, blank=True, null=True)
    trx_user_key_level3 = models.CharField(max_length=150, blank=True, null=True)
    trx_user_key_level4 = models.CharField(max_length=150, blank=True, null=True)
    trx_user_key_level5 = models.CharField(max_length=150, blank=True, null=True)
    trx_user_key_level6 = models.CharField(max_length=150, blank=True, null=True)
    mrc_tax_line_flag = models.CharField(max_length=1, blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    establishment_id = models.FloatField(blank=True, null=True)
    legal_entity_id = models.FloatField(blank=True, null=True)
    legal_entity_tax_reg_number = models.FloatField(blank=True, null=True)
    hq_estb_reg_number = models.CharField(max_length=30, blank=True, null=True)
    hq_estb_party_tax_prof_id = models.FloatField(blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    tax_currency_conversion_date = models.DateField(blank=True, null=True)
    tax_currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    tax_currency_conversion_rate = models.FloatField(blank=True, null=True)
    trx_currency_code = models.CharField(max_length=15, blank=True, null=True)
    minimum_accountable_unit = models.FloatField(blank=True, null=True)
    precision = models.FloatField(blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    numeric1 = models.FloatField(blank=True, null=True)
    numeric2 = models.FloatField(blank=True, null=True)
    numeric3 = models.FloatField(blank=True, null=True)
    numeric4 = models.FloatField(blank=True, null=True)
    numeric5 = models.FloatField(blank=True, null=True)
    numeric6 = models.FloatField(blank=True, null=True)
    numeric7 = models.FloatField(blank=True, null=True)
    numeric8 = models.FloatField(blank=True, null=True)
    numeric9 = models.FloatField(blank=True, null=True)
    numeric10 = models.FloatField(blank=True, null=True)
    char1 = models.CharField(max_length=150, blank=True, null=True)
    taxable_basis_formula = models.CharField(max_length=30, blank=True, null=True)
    tax_calculation_formula = models.CharField(max_length=30, blank=True, null=True)
    cancel_flag = models.CharField(max_length=1, blank=True, null=True)
    purge_flag = models.CharField(max_length=1, blank=True, null=True)
    delete_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_amt_included_flag = models.CharField(max_length=1, blank=True, null=True)
    self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    overridden_flag = models.CharField(max_length=1, blank=True, null=True)
    manually_entered_flag = models.CharField(max_length=1, blank=True, null=True)
    reporting_only_flag = models.CharField(max_length=1, blank=True, null=True)
    freeze_until_overridden_flag = models.CharField(max_length=1, blank=True, null=True)
    copied_from_other_doc_flag = models.CharField(max_length=1, blank=True, null=True)
    recalc_required_flag = models.CharField(max_length=1, blank=True, null=True)
    settlement_flag = models.CharField(max_length=1, blank=True, null=True)
    item_dist_changed_flag = models.CharField(max_length=1, blank=True, null=True)
    associated_child_frozen_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_only_line_flag = models.CharField(max_length=1, blank=True, null=True)
    compounding_dep_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    last_manual_entry = models.CharField(max_length=30, blank=True, null=True)
    tax_provider_id = models.FloatField(blank=True, null=True)
    record_type_code = models.CharField(max_length=30, blank=True, null=True)
    reporting_period_id = models.FloatField(blank=True, null=True)
    legal_message_appl_2 = models.FloatField(blank=True, null=True)
    legal_message_status = models.FloatField(blank=True, null=True)
    legal_message_rate = models.FloatField(blank=True, null=True)
    legal_message_basis = models.FloatField(blank=True, null=True)
    legal_message_calc = models.FloatField(blank=True, null=True)
    legal_message_threshold = models.FloatField(blank=True, null=True)
    legal_message_pos = models.FloatField(blank=True, null=True)
    legal_message_trn = models.FloatField(blank=True, null=True)
    legal_message_exmpt = models.FloatField(blank=True, null=True)
    legal_message_excpt = models.FloatField(blank=True, null=True)
    tax_regime_template_id = models.BigIntegerField(blank=True, null=True)
    tax_applicability_result_id = models.BigIntegerField(blank=True, null=True)
    direct_rate_result_id = models.BigIntegerField(blank=True, null=True)
    status_result_id = models.BigIntegerField(blank=True, null=True)
    rate_result_id = models.BigIntegerField(blank=True, null=True)
    basis_result_id = models.BigIntegerField(blank=True, null=True)
    thresh_result_id = models.BigIntegerField(blank=True, null=True)
    calc_result_id = models.BigIntegerField(blank=True, null=True)
    tax_reg_num_det_result_id = models.BigIntegerField(blank=True, null=True)
    eval_exmpt_result_id = models.BigIntegerField(blank=True, null=True)
    eval_excpt_result_id = models.BigIntegerField(blank=True, null=True)
    enforce_from_natural_acct_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_hold_code = models.FloatField(blank=True, null=True)
    tax_hold_released_code = models.FloatField(blank=True, null=True)
    prd_total_tax_amt = models.FloatField(blank=True, null=True)
    prd_total_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    prd_total_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    internal_org_location_id = models.FloatField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    object_version_number = models.FloatField()
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    reversed_tax_line_id = models.FloatField(blank=True, null=True)
    multiple_jurisdictions_flag = models.CharField(max_length=1, blank=True, null=True)
    legal_reporting_status = models.CharField(max_length=15, blank=True, null=True)
    account_source_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'zx_lines_9574881'


class ZxLinesSummary9574881(models.Model):
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    applied_from_line_id = models.FloatField(blank=True, null=True)
    app_from_lin_trx_user_key1 = models.CharField(max_length=150, blank=True, null=True)
    app_from_lin_trx_user_key2 = models.CharField(max_length=150, blank=True, null=True)
    app_from_lin_trx_user_key3 = models.CharField(max_length=150, blank=True, null=True)
    app_from_lin_trx_user_key4 = models.CharField(max_length=150, blank=True, null=True)
    app_from_lin_trx_user_key5 = models.CharField(max_length=150, blank=True, null=True)
    app_from_lin_trx_user_key6 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key1 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key2 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key3 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key4 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key5 = models.CharField(max_length=150, blank=True, null=True)
    adj_doc_hdr_trx_user_key6 = models.CharField(max_length=150, blank=True, null=True)
    applied_to_application_id = models.FloatField(blank=True, null=True)
    applied_to_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    applied_to_entity_code = models.CharField(max_length=30, blank=True, null=True)
    applied_to_trx_id = models.FloatField(blank=True, null=True)
    app_to_hdr_trx_user_key1 = models.CharField(max_length=150, blank=True, null=True)
    app_to_hdr_trx_user_key2 = models.CharField(max_length=150, blank=True, null=True)
    tax_amt = models.FloatField(blank=True, null=True)
    tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    tax_jurisdiction_code = models.CharField(max_length=30, blank=True, null=True)
    total_rec_tax_amt = models.FloatField(blank=True, null=True)
    total_rec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    total_nrec_tax_amt = models.FloatField(blank=True, null=True)
    total_nrec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    legal_entity_id = models.FloatField(blank=True, null=True)
    establishment_id = models.FloatField(blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    summarization_template_id = models.BigIntegerField(blank=True, null=True)
    taxable_basis_formula = models.CharField(max_length=30, blank=True, null=True)
    tax_calculation_formula = models.CharField(max_length=30, blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    cancel_flag = models.CharField(max_length=1, blank=True, null=True)
    delete_flag = models.CharField(max_length=1, blank=True, null=True)
    tax_amt_included_flag = models.CharField(max_length=1, blank=True, null=True)
    compounding_tax_flag = models.CharField(max_length=1, blank=True, null=True)
    self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    overridden_flag = models.CharField(max_length=1, blank=True, null=True)
    reporting_only_flag = models.CharField(max_length=1, blank=True, null=True)
    associated_child_frozen_flag = models.CharField(max_length=1, blank=True, null=True)
    copied_from_other_doc_flag = models.CharField(max_length=1, blank=True, null=True)
    manually_entered_flag = models.CharField(max_length=1, blank=True, null=True)
    last_manual_entry = models.CharField(max_length=30, blank=True, null=True)
    record_type_code = models.CharField(max_length=30, blank=True, null=True)
    tax_provider_id = models.FloatField(blank=True, null=True)
    tax_only_line_flag = models.CharField(max_length=1, blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_date = models.DateField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    trx_number = models.CharField(max_length=150, blank=True, null=True)
    applied_from_application_id = models.FloatField(blank=True, null=True)
    applied_from_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    applied_from_entity_code = models.CharField(max_length=30, blank=True, null=True)
    applied_from_trx_id = models.FloatField(blank=True, null=True)
    adjusted_doc_application_id = models.FloatField(blank=True, null=True)
    adjusted_doc_entity_code = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_trx_id = models.FloatField(blank=True, null=True)
    summary_tax_line_number = models.FloatField()
    content_owner_id = models.BigIntegerField(blank=True, null=True)
    tax_regime_code = models.CharField(max_length=30, blank=True, null=True)
    tax = models.CharField(max_length=30, blank=True, null=True)
    tax_status_code = models.CharField(max_length=30, blank=True, null=True)
    tax_rate_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    tax_rate = models.FloatField(blank=True, null=True)
    summary_tax_line_id = models.BigIntegerField()
    internal_organization_id = models.FloatField()
    application_id = models.FloatField()
    entity_code = models.CharField(max_length=30)
    event_class_code = models.CharField(max_length=30)
    trx_id = models.FloatField()
    app_to_hdr_trx_user_key3 = models.CharField(max_length=150, blank=True, null=True)
    app_to_hdr_trx_user_key4 = models.CharField(max_length=150, blank=True, null=True)
    app_to_hdr_trx_user_key5 = models.CharField(max_length=150, blank=True, null=True)
    app_to_hdr_trx_user_key6 = models.CharField(max_length=150, blank=True, null=True)
    applied_to_line_id = models.FloatField(blank=True, null=True)
    app_to_lin_trx_user_key1 = models.CharField(max_length=150, blank=True, null=True)
    app_to_lin_trx_user_key2 = models.CharField(max_length=150, blank=True, null=True)
    app_to_lin_trx_user_key3 = models.CharField(max_length=150, blank=True, null=True)
    app_to_lin_trx_user_key4 = models.CharField(max_length=150, blank=True, null=True)
    app_to_lin_trx_user_key5 = models.CharField(max_length=150, blank=True, null=True)
    app_to_lin_trx_user_key6 = models.CharField(max_length=150, blank=True, null=True)
    tax_exemption_id = models.FloatField(blank=True, null=True)
    tax_rate_before_exemption = models.FloatField(blank=True, null=True)
    tax_rate_name_before_exemption = models.CharField(max_length=80, blank=True, null=True)
    exempt_rate_modifier = models.FloatField(blank=True, null=True)
    exempt_certificate_number = models.CharField(max_length=80, blank=True, null=True)
    exempt_reason = models.CharField(max_length=240, blank=True, null=True)
    exempt_reason_code = models.CharField(max_length=30, blank=True, null=True)
    tax_rate_before_exception = models.FloatField(blank=True, null=True)
    tax_rate_name_before_exception = models.CharField(max_length=80, blank=True, null=True)
    tax_exception_id = models.FloatField(blank=True, null=True)
    exception_rate = models.FloatField(blank=True, null=True)
    total_rec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    total_nrec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    mrc_tax_line_flag = models.CharField(max_length=1, blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    applied_from_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    adjusted_doc_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    applied_to_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    adjust_tax_amt_flag = models.CharField(max_length=1, blank=True, null=True)
    object_version_number = models.FloatField()
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'zx_lines_summary_9574881'


class ZxRecNrecDist9574881(models.Model):
    orig_gl_date = models.DateField(blank=True, null=True)
    global_attribute_category = models.CharField(max_length=150, blank=True, null=True)
    global_attribute1 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute2 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute3 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute4 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute5 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute6 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute7 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute8 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute9 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute10 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute11 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute12 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute13 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute14 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute15 = models.CharField(max_length=150, blank=True, null=True)
    gl_date = models.DateField(blank=True, null=True)
    created_by = models.BigIntegerField()
    creation_date = models.DateField()
    last_updated_by = models.BigIntegerField()
    last_update_login = models.BigIntegerField(blank=True, null=True)
    last_update_date = models.DateField()
    ref_doc_application_id = models.FloatField(blank=True, null=True)
    ref_doc_entity_code = models.CharField(max_length=30, blank=True, null=True)
    ref_doc_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    ref_doc_trx_id = models.FloatField(blank=True, null=True)
    ref_doc_line_id = models.FloatField(blank=True, null=True)
    ref_doc_dist_id = models.FloatField(blank=True, null=True)
    minimum_accountable_unit = models.FloatField(blank=True, null=True)
    precision = models.FloatField(blank=True, null=True)
    rounding_rule_code = models.CharField(max_length=30, blank=True, null=True)
    taxable_amt = models.FloatField(blank=True, null=True)
    taxable_amt_tax_curr = models.FloatField(blank=True, null=True)
    taxable_amt_funcl_curr = models.FloatField(blank=True, null=True)
    tax_only_line_flag = models.CharField(max_length=1, blank=True, null=True)
    unrounded_taxable_amt = models.FloatField(blank=True, null=True)
    legal_entity_id = models.FloatField(blank=True, null=True)
    account_ccid = models.FloatField(blank=True, null=True)
    account_string = models.CharField(max_length=2000, blank=True, null=True)
    prd_tax_amt = models.FloatField(blank=True, null=True)
    prd_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    prd_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    prd_total_tax_amt = models.FloatField(blank=True, null=True)
    prd_total_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    prd_total_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    applied_from_tax_dist_id = models.FloatField(blank=True, null=True)
    adjusted_doc_tax_dist_id = models.FloatField(blank=True, null=True)
    func_curr_rounding_adjustment = models.FloatField(blank=True, null=True)
    global_attribute16 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute17 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute18 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute19 = models.CharField(max_length=150, blank=True, null=True)
    global_attribute20 = models.CharField(max_length=150, blank=True, null=True)
    last_manual_entry = models.CharField(max_length=30, blank=True, null=True)
    tax_apportionment_line_number = models.FloatField(blank=True, null=True)
    ref_doc_tax_dist_id = models.FloatField(blank=True, null=True)
    mrc_tax_dist_flag = models.CharField(max_length=1, blank=True, null=True)
    mrc_link_to_tax_dist_id = models.FloatField(blank=True, null=True)
    tax_apportionment_flag = models.CharField(max_length=1, blank=True, null=True)
    rate_tax_factor = models.FloatField(blank=True, null=True)
    ref_doc_per_unit_nrec_tax_amt = models.FloatField(blank=True, null=True)
    per_unit_nrec_tax_amt = models.FloatField(blank=True, null=True)
    trx_line_dist_qty = models.FloatField(blank=True, null=True)
    ref_doc_trx_line_dist_qty = models.FloatField(blank=True, null=True)
    price_diff = models.FloatField(blank=True, null=True)
    qty_diff = models.FloatField(blank=True, null=True)
    per_trx_curr_unit_nr_amt = models.FloatField(blank=True, null=True)
    ref_per_trx_curr_unit_nr_amt = models.FloatField(blank=True, null=True)
    ref_doc_curr_conv_rate = models.FloatField(blank=True, null=True)
    unit_price = models.FloatField(blank=True, null=True)
    ref_doc_unit_price = models.FloatField(blank=True, null=True)
    applied_to_doc_curr_conv_rate = models.FloatField(blank=True, null=True)
    trx_number = models.CharField(max_length=150, blank=True, null=True)
    trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    ref_doc_trx_level_type = models.CharField(max_length=30, blank=True, null=True)
    object_version_number = models.FloatField()
    orig_ap_chrg_dist_num = models.FloatField(blank=True, null=True)
    orig_ap_chrg_dist_id = models.FloatField(blank=True, null=True)
    orig_ap_tax_dist_num = models.FloatField(blank=True, null=True)
    orig_ap_tax_dist_id = models.FloatField(blank=True, null=True)
    internal_organization_id = models.FloatField(blank=True, null=True)
    tax_jurisdiction_id = models.BigIntegerField(blank=True, null=True)
    def_rec_settlement_option_code = models.CharField(max_length=30, blank=True, null=True)
    account_source_tax_rate_id = models.BigIntegerField(blank=True, null=True)
    rec_nrec_tax_dist_id = models.BigIntegerField()
    application_id = models.FloatField()
    entity_code = models.CharField(max_length=30)
    event_class_code = models.CharField(max_length=30)
    event_type_code = models.CharField(max_length=30)
    tax_event_class_code = models.CharField(max_length=30, blank=True, null=True)
    tax_event_type_code = models.CharField(max_length=30, blank=True, null=True)
    trx_id = models.FloatField()
    trx_line_id = models.FloatField()
    trx_line_number = models.FloatField(blank=True, null=True)
    tax_line_id = models.BigIntegerField()
    tax_line_number = models.FloatField()
    trx_line_dist_id = models.FloatField()
    item_dist_number = models.FloatField(blank=True, null=True)
    content_owner_id = models.BigIntegerField(blank=True, null=True)
    rec_nrec_tax_dist_number = models.FloatField()
    tax_regime_id = models.BigIntegerField(blank=True, null=True)
    tax_regime_code = models.CharField(max_length=30, blank=True, null=True)
    tax_id = models.BigIntegerField(blank=True, null=True)
    tax = models.CharField(max_length=30, blank=True, null=True)
    tax_status_id = models.BigIntegerField(blank=True, null=True)
    tax_status_code = models.CharField(max_length=30, blank=True, null=True)
    tax_rate_id = models.BigIntegerField(blank=True, null=True)
    tax_rate_code = models.CharField(max_length=150, blank=True, null=True)
    tax_rate = models.FloatField(blank=True, null=True)
    inclusive_flag = models.CharField(max_length=1, blank=True, null=True)
    recovery_type_id = models.BigIntegerField(blank=True, null=True)
    recovery_type_code = models.CharField(max_length=30, blank=True, null=True)
    recovery_rate_id = models.BigIntegerField(blank=True, null=True)
    recovery_rate_code = models.CharField(max_length=150, blank=True, null=True)
    rec_nrec_rate = models.FloatField()
    rec_type_rule_flag = models.CharField(max_length=1, blank=True, null=True)
    new_rec_rate_code_flag = models.CharField(max_length=1, blank=True, null=True)
    recoverable_flag = models.CharField(max_length=1)
    reverse_flag = models.CharField(max_length=1, blank=True, null=True)
    historical_flag = models.CharField(max_length=1, blank=True, null=True)
    reversed_tax_dist_id = models.FloatField(blank=True, null=True)
    rec_nrec_tax_amt = models.FloatField()
    rec_nrec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    rec_nrec_tax_amt_funcl_curr = models.FloatField(blank=True, null=True)
    intended_use = models.CharField(max_length=30, blank=True, null=True)
    project_id = models.FloatField(blank=True, null=True)
    task_id = models.FloatField(blank=True, null=True)
    award_id = models.FloatField(blank=True, null=True)
    expenditure_type = models.CharField(max_length=30, blank=True, null=True)
    expenditure_organization_id = models.FloatField(blank=True, null=True)
    expenditure_item_date = models.DateField(blank=True, null=True)
    rec_rate_det_rule_flag = models.CharField(max_length=1, blank=True, null=True)
    ledger_id = models.BigIntegerField(blank=True, null=True)
    summary_tax_line_id = models.BigIntegerField(blank=True, null=True)
    record_type_code = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_date = models.DateField(blank=True, null=True)
    currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    currency_conversion_rate = models.FloatField(blank=True, null=True)
    tax_currency_conversion_date = models.DateField(blank=True, null=True)
    tax_currency_conversion_type = models.CharField(max_length=30, blank=True, null=True)
    tax_currency_conversion_rate = models.FloatField(blank=True, null=True)
    trx_currency_code = models.CharField(max_length=15, blank=True, null=True)
    tax_currency_code = models.CharField(max_length=15, blank=True, null=True)
    trx_line_dist_amt = models.FloatField(blank=True, null=True)
    trx_line_dist_tax_amt = models.FloatField(blank=True, null=True)
    orig_rec_nrec_rate = models.FloatField(blank=True, null=True)
    orig_rec_rate_code = models.CharField(max_length=150, blank=True, null=True)
    orig_rec_nrec_tax_amt = models.FloatField(blank=True, null=True)
    orig_rec_nrec_tax_amt_tax_curr = models.FloatField(blank=True, null=True)
    unrounded_rec_nrec_tax_amt = models.FloatField(blank=True, null=True)
    applicability_result_id = models.BigIntegerField(blank=True, null=True)
    rec_rate_result_id = models.BigIntegerField(blank=True, null=True)
    backward_compatibility_flag = models.CharField(max_length=1, blank=True, null=True)
    overridden_flag = models.CharField(max_length=1, blank=True, null=True)
    self_assessed_flag = models.CharField(max_length=1, blank=True, null=True)
    freeze_flag = models.CharField(max_length=1, blank=True, null=True)
    posting_flag = models.CharField(max_length=1, blank=True, null=True)
    attribute_category = models.CharField(max_length=150, blank=True, null=True)
    attribute1 = models.CharField(max_length=150, blank=True, null=True)
    attribute2 = models.CharField(max_length=150, blank=True, null=True)
    attribute3 = models.CharField(max_length=150, blank=True, null=True)
    attribute4 = models.CharField(max_length=150, blank=True, null=True)
    attribute5 = models.CharField(max_length=150, blank=True, null=True)
    attribute6 = models.CharField(max_length=150, blank=True, null=True)
    attribute7 = models.CharField(max_length=150, blank=True, null=True)
    attribute8 = models.CharField(max_length=150, blank=True, null=True)
    attribute9 = models.CharField(max_length=150, blank=True, null=True)
    attribute10 = models.CharField(max_length=150, blank=True, null=True)
    attribute11 = models.CharField(max_length=150, blank=True, null=True)
    attribute12 = models.CharField(max_length=150, blank=True, null=True)
    attribute13 = models.CharField(max_length=150, blank=True, null=True)
    attribute14 = models.CharField(max_length=150, blank=True, null=True)
    attribute15 = models.CharField(max_length=150, blank=True, null=True)
    datafix_update_date = models.DateField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'zx_rec_nrec_dist_9574881'
